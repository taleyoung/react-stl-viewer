{"version":3,"sources":["webpack:///react-bundle.js","webpack:///webpack/bootstrap 07e665b50b3d27572cff","webpack:///./react/app.js","webpack:///./~/react/index.js","webpack:///./~/prop-types/index.js","webpack:///./~/domkit/appendVendorPrefix.js","webpack:///./~/domkit/insertKeyframesRule.js","webpack:///./~/object-assign/index.js","webpack:///./~/react-dom/index.js","webpack:///./react/containers/App.js","webpack:///./src/Paint.js","webpack:///./src/STLViewer.js","webpack:///./src/Three.js","webpack:///./~/domkit/builtinStyle.js","webpack:///./~/domkit/getVendorPrefix.js","webpack:///./~/domkit/getVendorPropertyName.js","webpack:///./~/domkit/insertRule.js","webpack:///./~/halogenium/lib/BeatLoader.js","webpack:///./~/halogenium/lib/BounceLoader.js","webpack:///./~/halogenium/lib/ClipLoader.js","webpack:///./~/halogenium/lib/DotLoader.js","webpack:///./~/halogenium/lib/FadeLoader.js","webpack:///./~/halogenium/lib/GridLoader.js","webpack:///./~/halogenium/lib/Halogenium.js","webpack:///./~/halogenium/lib/MoonLoader.js","webpack:///./~/halogenium/lib/PacmanLoader.js","webpack:///./~/halogenium/lib/PulseLoader.js","webpack:///./~/halogenium/lib/RingLoader.js","webpack:///./~/halogenium/lib/RiseLoader.js","webpack:///./~/halogenium/lib/RotateLoader.js","webpack:///./~/halogenium/lib/ScaleLoader.js","webpack:///./~/halogenium/lib/SkewLoader.js","webpack:///./~/halogenium/lib/SquareLoader.js","webpack:///./~/halogenium/lib/SyncLoader.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./~/react-dom/cjs/react-dom.production.min.js","webpack:///./~/react/cjs/react.production.min.js","webpack:///./~/scheduler/cjs/scheduler.production.min.js","webpack:///./~/scheduler/index.js","webpack:///./~/three-orbit-controls/index.js","webpack:///./~/three/three.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom","_reactDom2","_App","_App2","ReactDOM","render","createElement","document","getElementById","getVendorPropertyName","target","sources","to","Object","hasOwnProperty","prototype","nextIndex","arguments","length","nextSource","from","key","prefixed","insertRule","vendorPrefix","index","keyframes","name","Date","css","property","part","toObject","val","undefined","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","source","symbols","s","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_STLViewer","_STLViewer2","colorArr1","colorArr2","App","_Component","this","_this","getPrototypeOf","onChange","_ref","files","model","_loop","reader","FileReader","readAsArrayBuffer","onload","push","result","setState","state","color","clickBlue","bind","clickRed","e","preventDefault","type","multiple","modelColor","lights","rotate","onClick","Component","_Three","_Three2","OrbitControls","THREE","DIRECTIONAL_LIGHT","Paint","scene","Scene","renderer","WebGLRenderer","antialias","reqNumber","context","component","width","height","backgroundColor","orbitControls","cameraX","cameraY","cameraZ","rotationSpeeds","lightColor","mesh","remove","geometry","dispose","material","directionalLightObj","getObjectByName","animationRequestId","cancelAnimationFrame","distance","hasMultipleLights","reduce","acc","item","Array","isArray","addLight","addSTLToScene","add","AmbientLight","url","reqId","Promise","resolve","loader","crossOrigin","loadFromUrl","file","_this2","loadFromFile","_this3","loadPromise","group","Object3D","eachModal","STLLoader","loadSTLFromUrl","ArrayBuffer","then","center","MeshLambertMaterial","overdraw","log","hasColors","MeshPhongMaterial","opacity","alpha","vertexColors","VertexColors","Mesh","computeBoundingBox","xDims","boundingBox","max","x","min","yDims","y","zDims","z","rotation","position","set","Math","PI","addCamera","addInteractionControls","addToReactComponent","animate","camera","PerspectiveCamera","setSize","setClearColor","controls","findDOMNode","enableKeys","addEventListener","orbitRender","replaceChild","domElement","firstChild","requestAnimationFrame","update","forceContextLoss","_propTypes","_propTypes2","_halogenium","_Paint","_Paint2","STLViewer","apply","paint","init","nextProps","nextState","JSON","stringify","clean","_props","className","style","overflow","display","justifyContent","alignItems","ScaleLoader","size","propTypes","PropTypes","string","number","array","bool","arrayOf","oneOfType","instanceOf","isRequired","defaultProps","manager","DefaultLoadingManager","onLoad","onProgress","onError","scope","XHRLoader","setCrossOrigin","setResponseType","load","text","parse","buffer","data","isBinary","expect","face_size","n_faces","DataView","binData","getUint32","byteLength","fileLength","getUint8","ensureBinary","parseBinary","parseASCII","ensureString","r","g","b","colors","defaultR","defaultG","defaultB","faces","Float32Array","dataOffset","faceLength","offset","BufferGeometry","vertices","normals","face","start","normalX","getFloat32","normalY","normalZ","packedColor","getUint16","vertexstart","addAttribute","BufferAttribute","normal","patternFace","patternNormal","patternVertex","Geometry","exec","Vector3","parseFloat","Face3","computeBoundingSphere","buf","array_buffer","Uint8Array","str","charCodeAt","byteOffset","_isString","_getCharCodes","end","codes","_getBytes","littleEndian","_littleEndian","Error","isString","slice","reverse","getFloat64","sign","exponent","mantissa","pow","NaN","Infinity","getInt32","getInt16","getInt8","cssVendorPrefix","styles","window","getComputedStyle","documentElement","pre","match","OLink","domVendorPrefix","builtinStyle","prefixes","prop","isSupportTest","vendorProp","UpperProp","charAt","toUpperCase","substr","extraSheet","getElementsByTagName","appendChild","sheet","styleSheet","cssRules","rules","_extends","_appendVendorPrefix","_appendVendorPrefix2","_insertKeyframesRule","_insertKeyframesRule2","50%","transform","100%","animationName","loading","margin","verticalAlign","ptKeys","BeatLoader","_temp","_ret","_len","args","_key","concat","getBallStyle","borderRadius","getAnimationStyle","animation","animationFillMode","getStyle","border","klen","0%, 100%","BounceLoader","top","left","0%","ClipLoader","borderColor","borderBottomColor","background","rotateKeyframes","bounceKeyframes","rotateAnimationName","bounceAnimationName","DotLoader","ballSize","bottom","radius","FadeLoader","getLineStyle","getPosStyle","quarter","lines","l1","l2","l3","l4","l5","l6","l7","l8","fontSize","random","GridLoader","animationDuration","animationDelay","SyncLoader","SquareLoader","SkewLoader","RotateLoader","RiseLoader","RingLoader","PulseLoader","PacmanLoader","MoonLoader","_BeatLoader2","_BeatLoader3","_BounceLoader2","_BounceLoader3","_ClipLoader2","_ClipLoader3","_DotLoader2","_DotLoader3","_FadeLoader2","_FadeLoader3","_GridLoader2","_GridLoader3","_MoonLoader2","_MoonLoader3","_PacmanLoader2","_PacmanLoader3","_PulseLoader2","_PulseLoader3","_RingLoader2","_RingLoader3","_RiseLoader2","_RiseLoader3","_RotateLoader2","_RotateLoader3","_ScaleLoader2","_ScaleLoader3","_SkewLoader2","_SkewLoader3","_SquareLoader2","_SquareLoader3","_SyncLoader2","_SyncLoader3","moonSize","animations","75%","s1","s2","borderRight","borderTop","borderLeft","borderBottom","renderLoader","45%","80%","rightRotateKeyframes","leftRotateKeyframes","rightRotateAnimationName","leftRotateAnimationName","getCircleStyle","perspective","parseInt","riseAmount","keyframesEven","25%","keyframesOdd","25","animationNameEven","animationNameOdd","getSharpStyle","getSquareStyle","33%","66%","emptyFunction","emptyFunctionWithReset","ReactPropTypesSecret","resetWarningCache","shim","propName","componentName","location","propFullName","secret","getShim","ReactPropTypes","func","object","symbol","any","element","elementType","node","objectOf","oneOf","shape","exact","checkPropTypes","ba","a","d","f","h","l","k","replace","framesToPop","encodeURIComponent","ca","ja","da","ea","ia","ka","fa","ha","na","la","ma","indexOf","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","wa","currentTarget","va","xa","ya","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ca","stateNode","ta","disabled","Da","za","Ha","Fa","parentNode","tag","Ia","Ja","Ka","Ga","La","return","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Sa","toLowerCase","Wa","Ua","Ta","Va","eb","db","cb","bb","textContent","fb","gb","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","ib","eventPool","pop","jb","destructor","hb","getPooled","ub","mb","keyCode","vb","detail","xb","which","tb","rb","yb","wb","nb","ctrlKey","altKey","metaKey","char","qb","locale","Db","ua","Ab","Eb","Bb","Cb","Fb","Gb","Hb","Ib","Kb","Jb","Mb","nodeName","Lb","Nb","srcElement","correspondingUseElement","nodeType","Ob","Ra","setAttribute","Pb","Qb","getOwnPropertyDescriptor","get","getValue","setValue","stopTracking","_valueTracker","Rb","Sb","checked","hc","gc","ic","displayName","bc","Xb","Wb","Zb","Yb","dc","$$typeof","ac","$b","cc","ec","fc","_status","_result","jc","_debugOwner","_debugSource","fileName","Ub","lineNumber","oc","lc","nc","mc","kc","test","pc","acceptsBooleans","qc","isNaN","C","attributeName","attributeNamespace","mustUseProperty","propertyName","sc","tc","D","removeAttribute","setAttributeNS","uc","vc","defaultChecked","defaultValue","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","ownerDocument","activeElement","Cc","Bc","change","Fc","Gc","Hc","Jc","Dc","detachEvent","Kc","Ec","Lc","attachEvent","Mc","Nc","Oc","Sc","getModifierState","Rc","Tc","bd","dd","cd","ed","alternate","effectTag","fd","gd","child","sibling","current","hd","ld","charCode","wd","bubbled","captured","isInteractive","ud","vd","Ad","targetInst","ancestors","containerInfo","topLevelType","E","yd","Cd","Dd","Ed","Bd","zd","Id","Hd","Gd","Fd","Jd","body","Kd","Ld","nextSibling","Md","contains","compareDocumentPosition","Nd","HTMLIFrameElement","contentWindow","href","Od","contentEditable","Pd","selectionStart","selectionEnd","defaultView","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","A","t","nodeValue","focusedElem","selectionRange","Qd","extend","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","focus","Xd","Wd","Td","Vd","Sd","select","Ud","Zd","aa","Children","$d","children","ae","options","selected","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","ge","he","ke","lastChild","ne","le","trim","oe","setProperty","qe","pe","re","is","se","blur","ab","te","we","autoFocus","xe","__html","Ce","je","wasMultiple","De","Ee","F","Ge","Fe","G","Je","contextTypes","He","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","J","childContextTypes","Ke","I","H","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Ie","Pe","Se","Te","isDisabled","supportsFiber","inject","Qe","onCommitFiberRoot","Re","onCommitFiberUnmount","Ue","ref","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","K","Ve","isReactComponent","We","Xe","Ye","Ze","$e","af","bf","pendingChildren","implementation","cf","didError","earliestPendingTime","latestPendingTime","df","ef","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","ff","gf","nextExpirationTimeToWorkOn","L","hf","_ctor","kf","baseState","uf","shouldComponentUpdate","isPureReactComponent","vf","contextType","M","updater","tf","_reactInternalFiber","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","xf","refs","jf","yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Af","_owner","_stringRef","Bf","toString","Cf","Map","Vb","zf","v","q","u","B","w","delete","R","next","done","If","Ff","Jf","Hf","Gf","N","namespaceURI","tagName","Kf","Lf","Mf","fg","gg","hg","Wf","Xf","P","Vf","ig","jg","cg","eg","Zf","Yf","ag","Q","O","dg","kg","$f","bg","lg","mg","queue","baseUpdate","ng","og","pg","lastRenderedReducer","dispatch","action","qg","last","lastRenderedState","eagerReducer","eagerState","rg","destroy","deps","sg","tg","Nf","ug","vg","wg","of","lf","mf","qf","Ag","Bg","Cg","zg","yg","xg","Dg","Eg","Fg","S","Ef","Df","Hg","Ig","Jg","Kg","compare","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Qg","Gg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","hydrate","hidden","_context","_calculateChangedBits","first","observedBits","nf","sf","pf","unstable_observedBits","Vg","_currentValue","Zg","Wg","Yg","Xg","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","$g","payload","callback","dh","eh","fh","gh","rf","ah","hh","ih","jh","stack","kh","qh","setTimeout","rh","sh","th","uh","vh","componentWillUnmount","wh","xh","yh","insertBefore","_reactRootContainer","onclick","removeChild","zh","Pf","Qf","ph","Ah","has","Ch","Dh","Eh","componentDidCatch","Fh","Set","componentStack","Gh","Sh","T","Lh","U","Mh","Nh","Th","V","Uh","Of","__reactInternalSnapshotBeforeUpdate","Vh","Rf","Sf","Ph","Wh","Rh","Qh","W","Uf","Tf","Xh","X","Yh","Be","Zh","Oh","Kh","pendingCommitExpirationTime","Ih","ue","ve","unstable_runWithPriority","unstable_NormalPriority","Ae","$h","ai","mh","nh","fe","html","innerHTML","createElementNS","lh","oh","createTextNode","bi","ci","Hh","di","maxDuration","pingCache","Bh","ei","finishedWork","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","hi","ii","ji","ki","xi","ui","unstable_now","ti","yi","mi","ni","unstable_cancelCallback","unstable_scheduleCallback","zi","timeout","timeoutHandle","ye","Ai","vi","Bi","Ci","Z","nextScheduledRoot","Y","li","ri","oi","Di","Ei","unstable_shouldYield","wi","si","_onComplete","pi","qi","Fi","ze","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Mi","Ni","Jh","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Ri","hasAttribute","Si","legacy_renderSubtreeIntoContainer","Ti","Ui","Ba","injectEventPluginOrder","injectEventPluginsByName","Ea","animationend","animationiteration","animationstart","transitionend","transition","Xa","Ya","Za","$a","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","kb","lb","ob","documentMode","pb","sb","beforeInput","compositionEnd","compositionStart","compositionUpdate","zb","date","datetime","datetime-local","email","month","password","range","search","tel","time","week","Tb","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","Symbol","for","iterator","rc","Ic","Pc","_isInputEventSupported","Qc","view","Alt","Control","Meta","Shift","Uc","Vc","Wc","Xc","Yc","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Zc","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","parentWindow","elapsedTime","pseudoElement","jd","clipboardData","kd","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","od","repeat","pd","dataTransfer","qd","touches","targetTouches","changedTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","xd","isInteractiveTopLevelEventType","Rd","Yd","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","mathml","svg","ie","MSApp","execUnsafeLocalFunction","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","substring","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","clearTimeout","isMounted","enqueueSetState","enqueueForceUpdate","readContext","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","ReactCurrentOwner","WeakSet","WeakMap","querySelectorAll","form","commit","unmount","createBatch","Vi","createPortal","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","version","rendererPackageName","Wi","Xi","escape","=",":","keyPrefix","count","forceUpdate","__self","__source","toArray","only","createRef","PureComponent","createContext","_currentValue2","_threadCount","Provider","Consumer","forwardRef","lazy","memo","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","global","previous","priorityLevel","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","OrbitConstraint","minDistance","maxDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","matrix","elements","multiplyScalar","panUp","pan","screenWidth","screenHeight","clone","sub","targetDistance","tan","fov","OrthographicCamera","right","warn","dollyIn","dollyScale","updateProjectionMatrix","dollyOut","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","copy","applyQuaternion","atan2","sqrt","sin","cos","lookAt","distanceToSquared","dot","quaternion","constraint","clientWidth","clientHeight","getAutoRotationAngle","autoRotateSpeed","getZoomScale","zoomSpeed","onMouseDown","event","enabled","mouseButtons","ORBIT","enableRotate","STATE","ROTATE","rotateStart","ZOOM","enableZoom","DOLLY","dollyStart","PAN","enablePan","panStart","NONE","onMouseMove","onMouseUp","dispatchEvent","startEvent","rotateEnd","rotateDelta","subVectors","rotateSpeed","dollyEnd","dollyDelta","panEnd","panDelta","removeEventListener","endEvent","onMouseWheel","delta","onKeyDown","UP","keyPanSpeed","BOTTOM","LEFT","RIGHT","touchstart","TOUCH_ROTATE","TOUCH_DOLLY","dx","dy","TOUCH_PAN","touchmove","touchend","contextmenu","autoRotate","MOUSE","MIDDLE","Vector2","target0","position0","zoom0","changeEvent","reset","EventDispatcher","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","REVISION","lastTime","vendors","currTime","timeToCall","Function","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Projector","projectVector","vector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","clear","Color","setRGB","setHex","setStyle","hex","floor","setHSL","hue2rgb","euclideanModulo","clamp","parseAlpha","strAlpha","components","ColorKeywords","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","offsetHSL","addColors","color1","color2","addScalar","multiply","lerp","equals","fromArray","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_x","_y","_z","_w","onChangeCallback","setFromEuler","euler","Euler","c1","c2","c3","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","v1","vFrom","vTo","abs","crossVectors","normalize","conjugate","lengthSq","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","slerp","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","qm","setX","setY","setComponent","getComponent","addVectors","addScaledVector","subScalar","divide","divideScalar","scalar","invScalar","clampScalar","minVal","maxVal","ceil","round","roundToZero","negate","lengthManhattan","distanceTo","setLength","oldLength","lerpVectors","v2","fromAttribute","attribute","itemSize","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","applyMatrix4","applyProjection","qx","qy","qz","qw","ix","iy","iz","iw","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","sx","sy","sz","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","line","distanceSq","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","box","empty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromObject","updateMatrixWorld","traverse","attributes","positions","getBoundingSphere","Sphere","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","multiplyVector3Array","applyToVector3Array","j","applyToBuffer","getX","getY","getZ","setXYZ","determinant","throwOnInvertible","det","msg","transpose","tmp","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","setRotationFromQuaternion","x2","y2","z2","wx","wy","wz","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","near","far","makePerspective","aspect","ymax","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","isIntersectionSphere","sphere","intersectSphere","tca","d2","radius2","thc","t0","t1","isIntersectionPlane","plane","distToPoint","denominator","distanceToPlane","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","negRadius","intersectsBox","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","generateUUID","chars","uuid","rnd","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nextPowerOfTwo","Spline","interpolate","t2","t3","intPoint","weight","w2","w3","v3","initFromArray","getPoint","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","midpoint","Clock","autoStart","startTime","oldTime","running","stop","getElapsedTime","getDelta","newTime","hasEventListener","listener","_listeners","listeners","listenerArray","splice","descSort","Raycaster","params","Line","LOD","Points","threshold","Sprite","PointCloud","intersectObject","raycaster","intersects","recursive","visible","raycast","linePrecision","setFromCamera","sort","intersectObjects","objects","Object3DIdCount","parent","DefaultUp","onRotationChange","onQuaternionChange","modelViewMatrix","rotationAutoUpdate","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","renderDepth","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getChildByName","getObjectById","getObjectByProperty","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","extractFromCache","cache","values","metadata","isRootObject","geometries","materials","textures","images","generator","output","materialIndex","vertexNormals","Face4","dynamic","updateRange","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","stride","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faceVertexUvs","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","jl","fromBufferGeometry","uvs","uv","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","computeFaceNormals","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","setBit","getNormalIndex","hash","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","parameters","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","kl","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","addIndex","setIndex","getIndex","getAttribute","drawcalls","offsets","addDrawCall","indexOffset","addGroup","clearDrawCalls","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","normalizeNormals","computeOffsets","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","generateMipmaps","activeCubeFace","setRenderTarget","cx","cy","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","Light","DirectionalLight","intensity","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","HemisphereLight","skyColor","groundColor","PointLight","decay","SpotLight","shadowCameraFov","Cache","Loader","onLoadStart","onLoadProgress","onLoadComplete","extractUrlBase","parts","initMaterials","texturePath","createMaterial","imageLoader","nearest_pow2","LN2","create_texture","where","sourceFile","wrap","anisotropy","texture","fullPath","Handlers","Texture","image","canvas","getContext","drawImage","wrapS","wrapT","wrapMap","mirror","rgb2hex","rgb","ImageLoader","mtype","mpars","shading","blending","transparent","depthTest","depthWrite","flipSided","side","doubleSided","wireframe","colorDiffuse","DbgColor","colorEmissive","emissive","colorSpecular","specular","specularCoef","shininess","transparency","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAO","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","mapNormalFactor","normalScale","DbgName","handlers","regex","cached","request","XMLHttpRequest","open","response","itemEnd","itemError","responseType","withCredentials","send","itemStart","setWithCredentials","src","JSONLoader","statusDomElement","_statusDomElement","json","setTexturePath","parseModel","isBitSet","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","bones","parseMorphing","dstVertices","srcVertices","cl","dstColors","srcColors","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","typedArray","MaterialLoader","setTextures","getTexture","uniforms","vertexShader","fragmentShader","alphaTest","wireframeLinewidth","sizeAttenuation","alphaMap","bumpMap","normalMap","displacementMap","displacementScale","displacementBias","specularMap","envMap","combine","reflectivity","lightMap","lightMapIntensity","aoMap","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleBufferGeometry","segments","thetaStart","thetaLength","CircleGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","SphereBufferGeometry","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","TextGeometry","loadImage","path","parseConstant","mapping","getGeometry","getMaterial","Group","levels","level","addLevel","TextureLoader","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","loadTexture","texDatas","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","_needsUpdate","setValues","newValue","currentValue","Number","wrapAround","boolean","wrapRGB","LineBasicMaterial","linewidth","linecap","linejoin","fog","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","metal","emissiveMap","MeshDepthMaterial","MeshNormalMaterial","MultiMaterial","MeshFaceMaterial","PointsMaterial","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","ShaderMaterial","defines","derivatives","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","TextureIdCount","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","getDataURL","toDataURL","transformUv","CanvasTexture","CubeTexture","VideoTexture","video","readyState","HAVE_ENOUGH_DATA","inverseMatrix","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","ParticleSystem","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","LineStrip","LinePieces","updateMorphTargets","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","uvIntersection","uv1","uv3","barycoord","tempA","tempB","tempC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bone","offsetMatrix","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","skeleton","sw","MorphAnimMesh","duration","mirroredLoop","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","pattern","morph","label","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","influences","mix","interpolateTargets","getObjectForDistance","matrixPosition","guessSizeSq","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bumpmap_pars_fragment","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","defaultnormal_vertex","displacementmap_vertex","displacementmap_pars_vertex","emissivemap_fragment","emissivemap_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_pars_vertex","lights_lambert_vertex","lights_phong_fragment","lights_phong_pars_fragment","lights_phong_pars_vertex","lights_phong_vertex","linear_to_gamma_fragment","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normalmap_pars_fragment","project_vertex","shadowmap_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","spotLightDecay","psColor","shadowmap","ShaderLib","basic","lambert","phong","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","glClearColor","_premultipliedAlpha","_gl","clearColor","setDefaultGLState","viewport","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_clearColor","_clearAlpha","resetGLState","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","_lightsNeedUpdate","onContextLost","properties","onTextureDispose","deallocateTexture","_infoMemory","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","releaseMaterialProgramReference","programInfo","program","programCache","releaseProgram","setupVertexAttributes","startIndex","extension","extensions","initAttributes","geometryAttributes","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","enableAttribute","getAttributeBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","vertexAttribDivisorANGLE","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","disableUnusedAttributes","numericalSort","painterSortStable","reversePainterSortStable","pushImmediateRenderItem","transparentImmediateObjects","transparentImmediateObjectsLastIndex","opaqueImmediateObjects","opaqueImmediateObjectsLastIndex","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","projectObject","sprites","ImmediateRenderObject","_frustum","sortObjects","_projScreenMatrix","groupMaterial","renderObjects","renderList","renderBufferDirect","renderObjectsImmediate","setMaterial","setProgram","renderBufferImmediate","initMaterial","materialProperties","getParameters","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","uniformsList","uniformLocations","getUniforms","setMaterialFaces","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","enable","CULL_FACE","disable","setFlipSided","_usedTextureUnits","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","capabilities","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","floatVertexTextures","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","setupLights","refreshUniformsLights","_lights","markUniformsLightsNeedsUpdate","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","uvScaleMap","_canvas","ambient","directional","distances","decays","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","light","uniformMatrix3fv","maxTextures","uniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","_array","i3","i4","setCubeTexture","setCubeTextureDynamic","setColorLinear","ll","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","pointDecays","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","spotDecays","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","pointCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","_direction","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","glFormat","glType","mipmap","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","maxSize","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","autoScaleCubemaps","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","updateRenderTargetMipmap","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","_width","_height","pixelRatio","_alpha","_depth","_stencil","stencil","_antialias","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","autoClear","autoClearColor","autoClearDepth","autoClearStencil","gammaInput","gammaOutput","_currentFramebuffer","_currentWidth","_currentHeight","_infoRender","calls","info","memory","programs","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","WebGLObjects","WebGLPrograms","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","getSize","updateStyle","setViewport","setScissor","scissor","enableScissorTest","setScissorTest","getClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","buffers","hasPositions","createBuffer","hasNormals","hasUvs","bufferData","positionArray","DYNAMIC_DRAW","normalArray","nx","ny","nz","uvArray","colorArray","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","ELEMENT_ARRAY_BUFFER","setLineWidth","setMode","LINES","renderInstances","lineWidth","LINE_STRIP","POINTS","forceClear","setFaceCulling","cullFace","frontFaceDirection","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","complete","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","readRenderTargetPixels","WebGLRenderTarget","restore","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsVertexTextures","vertexTextures","supportsInstancedArrays","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapEnabled","shadowMapType","shadowMapCullFace","shadowMapDebug","debug","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttributes","deleteAttribute","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","subarray","edges","checkEdge","list","WebGLProgram","generateDefines","fetchUniformLocations","identifiers","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","suffixPos","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","filterEmptyLine","programIdCount","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customDefines","createProgram","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","maxBones","flatShading","filter","useFog","fogExp","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","deleteProgram","usedTimes","allocateBones","nVertexUniforms","nVertexMatrices","allocateLights","dirLights","pointLights","spotLights","hemiLights","allocateShadows","shaderIDs","parameterNames","maxLightCount","envMapMode","parameterName","pl","addLineNumbers","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","_objects","getDepthMaterial","depthMaterial","useMorphing","useSkinning","customDepthMaterial","_depthMaterialMorphSkin","_depthMaterialSkin","_depthMaterialMorph","_depthMaterial","_renderList","_state","_matrixPosition","depthShader","depthUniforms","BLEND","shadowFilter","pars","cameraHelper","CameraHelper","clearAlpha","newAttributes","enabledAttributes","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentDepthFunc","currentDepthWrite","currentColorWrite","currentFlipSided","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentTextureSlot","currentBoundTextures","DEPTH_TEST","LEQUAL","blendFunc","enableVertexAttribArray","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","factor","units","POLYGON_OFFSET_FILL","scissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","flares","vertexBuffer","elementBuffer","hasVertexTexture","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","GeometryUtils","geometry1","geometry2","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","subtract","getImageData","imageData","createImageData","ly","uy","lx","ux","num_points","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","FontUtils","divisions","getFace","loadFace","family","familyName","ThreeFont","cssFontWeight","cssFontStyle","drawText","resolution","fontPaths","Path","ret","extractGlyphPoints","paths","outline","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","pts","glyph","glyphs","o","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","bezierCurveTo","b3","generateShapes","curveSegments","font","shapes","toShapes","namespace","EPSILON","process","contour","verts","vertIndices","nv","snip","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cCROSSap","bCROSScp","aCROSSbp","Triangulate","typeface_js","_typeface_js","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","playbackRate","isPlaying","decodeAudioData","play","loop","pause","currentTime","disconnect","setFilter","getFilter","setPlaybackRate","getPlaybackRate","setLoop","getLoop","setRefDistance","refDistance","getRefDistance","setRolloffFactor","rolloffFactor","getRolloffFactor","setVolume","getVolume","AudioListener","AudioContext","webkitAudioContext","orientation","setOrientation","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","vec","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","oldX","oldY","xNorm","bounds","pathPt","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vlen","lastargs","x0","y0","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","closedPath","useSpacedPoints","spts","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","isClockWise","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","hole","tmpHoles","holes","extrude","extruded","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","extractPoints","extractAllSpacedPoints","triangulateShape","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","nextIdx","intersection","intersectsHoleEdge","ihIdx","chkHole","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","x1","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","initialized","hierarchy","rot","usedMorphTargets","morphTargetName","morphTargetsInfluences","root","parseRecurseHierarchy","deltaTimeMS","resetBlendWeights","Animation","timeScale","interpolationType","keyTypes","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","newVector","newQuat","interpolateCatmullRom","prevXYZ","nextXYZ","proportionalWeight","getPrevKeyWith","currentPoint","forwardPoint","KeyFrameAnimation","isPaused","sids","sid","endTime","original","hasTarget","MorphAnimation","frames","lastFrame","currentFrame","frame","buildPlane","udir","vdir","gridX","gridY","width_half","height_half","gridX1","gridY1","segment_width","segment_height","uva","uvb","uvc","uvd","depth_half","CubeGeometry","centerUV","segment","heightHalf","verticesRow","uvsRow","tanTheta","v4","n1","n2","n3","n4","uv4","EdgesGeometry","thresholdAngle","thresholdDot","edge","sortFunction","vert1","vert2","face1","face2","addShapeList","addShape","scalePt2","pt","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","v_trans_lensq","direction_eq","buildLidFaces","bevelEnabled","layer","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","binormal","position2","amount","bevelThickness","bevelSize","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","shapePoints","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","indexA","indexB","indexC","indexD","LatheGeometry","inversePointLength","inverseSegments","np","u0","u1","PlaneGeometry","PlaneBufferGeometry","offset2","radiusStep","thetaSegment","thetaEnd","vertexCount","textShapes","getPos","in_q","in_p","cu","su","quOverP","cs","tz","grid","tang","bitan","ip","jp","closed","taper","NoTaper","numpoints","pos2","tangents","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","mat","PolyhedronGeometry","prepare","that","azimuth","inclination","make","centroid","azi","correctUV","subdivide","cols","aj","bj","rows","ParametricGeometry","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","drawcall","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","dir","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","active","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation"],"mappings":"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","file":"react-bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(6);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _App = __webpack_require__(7);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_App2.default, null), document.getElementById('react-app'));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(35);\n\t} else {\n\t  module.exports = require('./cjs/react.development.js');\n\t}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\tif (false) {\n\t  var ReactIs = require('react-is');\n\t\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(32)();\n\t}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar getVendorPropertyName = __webpack_require__(13);\n\t\n\tmodule.exports = function(target, sources) {\n\t  var to = Object(target);\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n\t    var nextSource = arguments[nextIndex];\n\t    if (nextSource == null) {\n\t      continue;\n\t    }\n\t\n\t    var from = Object(nextSource);\n\t\n\t    for (var key in from) {\n\t      if (hasOwnProperty.call(from, key)) {\n\t        to[key] = from[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  var prefixed = {};\n\t  for (var key in to) {\n\t    prefixed[getVendorPropertyName(key)] = to[key]\n\t  }\n\t\n\t  return prefixed\n\t}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar insertRule = __webpack_require__(14);\n\tvar vendorPrefix = __webpack_require__(12)();\n\tvar index = 0;\n\t\n\tmodule.exports = function(keyframes) {\n\t  // random name\n\t  var name = 'anim_' + (++index) + (+new Date);\n\t  var css = \"@\" + vendorPrefix + \"keyframes \" + name + \" {\";\n\t\n\t  for (var key in keyframes) {\n\t    css += key + \" {\";\n\t\n\t    for (var property in keyframes[key]) {\n\t      var part = \":\" + keyframes[key][property] + \";\";\n\t      // We do vendor prefix for every property\n\t      css += vendorPrefix + property + part;\n\t      css += property + part;\n\t    }\n\t\n\t    css += \"}\";\n\t  }\n\t\n\t  css += \"}\";\n\t\n\t  insertRule(css);\n\t\n\t  return name\n\t}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction checkDCE() {\n\t  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\t  if (\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n\t  ) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // This branch is unreachable because this function is only called\n\t    // in production, but the condition is true only in development.\n\t    // Therefore if the branch is still here, dead code elimination wasn't\n\t    // properly applied.\n\t    // Don't change the message. React DevTools relies on it. Also make sure\n\t    // this message doesn't occur elsewhere in this function, or it will cause\n\t    // a false positive.\n\t    throw new Error('^_^');\n\t  }\n\t  try {\n\t    // Verify that the code above has been dead code eliminated (DCE'd).\n\t    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n\t  } catch (err) {\n\t    // DevTools shouldn't crash React, no matter what.\n\t    // We should still report in case we break this code.\n\t    console.error(err);\n\t  }\n\t}\n\t\n\tif (true) {\n\t  // DCE check should happen before ReactDOM bundle executes so that\n\t  // DevTools can report bad minification during injection.\n\t  checkDCE();\n\t  module.exports = __webpack_require__(34);\n\t} else {\n\t  module.exports = require('./cjs/react-dom.development.js');\n\t}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _STLViewer = __webpack_require__(9);\n\t\n\tvar _STLViewer2 = _interopRequireDefault(_STLViewer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// two kinds of colorArr\n\tvar colorArr1 = ['#018006', '#e7282e', '#8d7a3a', '#28bfe5', '#447c76', '#0400bf', '#c77acb', '#c77acb', '#ffff00', '#ffff00', '#f89090', '#ef149a'];\n\tvar colorArr2 = ['#018006', '#28bfe5', '#c77acb', '#ef149a', '#447c76', '#0400bf', '#c77acb', '#f89090', '#ffff00', '#ffff00', '#e7282e', '#8d7a3a'];\n\t\n\tvar App = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App(props) {\n\t    _classCallCheck(this, App);\n\t\n\t    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\t\n\t    _this.onChange = function (_ref) {\n\t      var target = _ref.target;\n\t      var files = target.files;\n\t      // console.log('files', files);\n\t\n\t      var model = [];\n\t\n\t      var _loop = function _loop(i) {\n\t        var reader = new FileReader();\n\t        reader.readAsArrayBuffer(files[i]);\n\t        reader.onload = function () {\n\t          model.push(reader.result);\n\t        };\n\t      };\n\t\n\t      for (var i = 0; i < files.length; i++) {\n\t        _loop(i);\n\t      }\n\t      _this.setState({ model: model });\n\t    };\n\t\n\t    _this.state = {\n\t      color: colorArr1,\n\t      model: []\n\t    };\n\t\n\t    _this.clickBlue = _this.clickBlue.bind(_this);\n\t    _this.clickRed = _this.clickRed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(App, [{\n\t    key: 'clickBlue',\n\t    value: function clickBlue(e) {\n\t      e.preventDefault();\n\t      this.setState({ color: colorArr2 });\n\t    }\n\t  }, {\n\t    key: 'clickRed',\n\t    value: function clickRed(e) {\n\t      e.preventDefault();\n\t      this.setState({ color: colorArr1 });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'div',\n\t        null,\n\t        _react2.default.createElement('input', { id: 'image-file', type: 'file', multiple: true, onChange: this.onChange }),\n\t        _react2.default.createElement(_STLViewer2.default, {\n\t          modelColor: this.state.color,\n\t          lights: [[0.5, 1, -1], [1, 1, 1]],\n\t          rotate: true,\n\t          model: this.state.model\n\t        }),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.clickRed },\n\t          'red'\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.clickBlue },\n\t          'blue'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react.Component);\n\t\n\texports.default = App;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Three = __webpack_require__(10);\n\t\n\tvar _Three2 = _interopRequireDefault(_Three);\n\t\n\tvar _reactDom = __webpack_require__(6);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar OrbitControls = __webpack_require__(38)(_Three2.default);\n\t\n\tvar DIRECTIONAL_LIGHT = 'directionalLight';\n\t\n\tvar Paint = function () {\n\t  function Paint() {\n\t    _classCallCheck(this, Paint);\n\t\n\t    this.scene = new _Three2.default.Scene();\n\t    this.renderer = new _Three2.default.WebGLRenderer({\n\t      antialias: true\n\t    });\n\t    this.reqNumber = 0;\n\t  }\n\t\n\t  _createClass(Paint, [{\n\t    key: 'init',\n\t    value: function init(context) {\n\t      this.component = context;\n\t      this.width = context.props.width;\n\t      this.height = context.props.height;\n\t      this.modelColor = context.props.modelColor;\n\t      this.backgroundColor = context.props.backgroundColor;\n\t      this.orbitControls = context.props.orbitControls;\n\t      this.rotate = context.props.rotate;\n\t      this.cameraX = context.props.cameraX;\n\t      this.cameraY = context.props.cameraY;\n\t      this.cameraZ = context.props.cameraZ;\n\t      this.rotationSpeeds = context.props.rotationSpeeds;\n\t      this.lights = context.props.lights;\n\t      this.lightColor = context.props.lightColor;\n\t      this.model = context.props.model;\n\t\n\t      if (this.mesh !== undefined) {\n\t        this.scene.remove(this.mesh);\n\t        this.mesh.geometry.dispose();\n\t        this.mesh.material.dispose();\n\t        // this.scene.remove(this.grid);\n\t      }\n\t      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\t      if (directionalLightObj) {\n\t        this.scene.remove(directionalLightObj);\n\t      }\n\t\n\t      if (this.animationRequestId) {\n\t        cancelAnimationFrame(this.animationRequestId);\n\t      }\n\t\n\t      //Detector.addGetWebGLMessage();\n\t      this.distance = 10000;\n\t\n\t      // lights processing\n\t      var hasMultipleLights = this.lights.reduce(function (acc, item) {\n\t        return acc && Array.isArray(item);\n\t      }, true);\n\t      if (hasMultipleLights) {\n\t        this.lights.forEach(this.addLight.bind(this));\n\t      } else {\n\t        this.addLight(this.lights);\n\t      }\n\t\n\t      this.reqNumber += 1;\n\t      this.addSTLToScene(this.reqNumber);\n\t    }\n\t  }, {\n\t    key: 'addLight',\n\t    value: function addLight(lights) {\n\t      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t\n\t      this.scene.add(new _Three2.default.AmbientLight(0x444444));\n\t    }\n\t  }, {\n\t    key: 'loadSTLFromUrl',\n\t    value: function loadSTLFromUrl(url, reqId) {\n\t      var _this = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this.loader.crossOrigin = '';\n\t        _this.loader.loadFromUrl(url, function (geometry) {\n\t          if (_this.reqNumber !== reqId) {\n\t            return;\n\t          }\n\t          resolve(geometry);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadFromFile',\n\t    value: function loadFromFile(file) {\n\t      var _this2 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this2.loader.loadFromFile(file, function (geometry) {\n\t          resolve(geometry);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addSTLToScene',\n\t    value: function addSTLToScene(reqId) {\n\t      var _this3 = this;\n\t\n\t      var loadPromise = void 0;\n\t      var group = new _Three2.default.Object3D();\n\t      this.model.forEach(function (eachModal, key) {\n\t        _this3.loader = new _Three2.default.STLLoader();\n\t        if (typeof eachModal === 'string') {\n\t          loadPromise = _this3.loadSTLFromUrl(eachModal, reqId);\n\t        } else if (eachModal instanceof ArrayBuffer) {\n\t          loadPromise = _this3.loadFromFile(eachModal);\n\t        } else {\n\t          return Promise.resolve(null);\n\t        }\n\t        loadPromise.then(function (geometry) {\n\t          // Calculate mesh noramls for MeshLambertMaterial.\n\t\n\t          // geometry.computeFaceNormals();\n\t          // geometry.computeVertexNormals();\n\t\n\t          // Center the object\n\t          geometry.center();\n\t\n\t          var material = new _Three2.default.MeshLambertMaterial({\n\t            overdraw: true,\n\t            color: _this3.modelColor[key % 12]\n\t          });\n\t          console.log('this.modelColor[key % 12]', _this3.modelColor[key % 12]);\n\t          if (geometry.hasColors) {\n\t            material = new _Three2.default.MeshPhongMaterial({\n\t              opacity: geometry.alpha,\n\t              vertexColors: _Three2.default.VertexColors\n\t            });\n\t          }\n\t\n\t          _this3.mesh = new _Three2.default.Mesh(geometry, material);\n\t          // Set the object's dimensions\n\t          geometry.computeBoundingBox();\n\t          _this3.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t          _this3.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\t          _this3.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\t\n\t          if (_this3.rotate) {\n\t            _this3.mesh.rotation.x = _this3.rotationSpeeds[0];\n\t            _this3.mesh.rotation.y = _this3.rotationSpeeds[1];\n\t            _this3.mesh.rotation.z = _this3.rotationSpeeds[2];\n\t          }\n\t          _this3.mesh.position.set(0, 0, 0);\n\t          _this3.mesh.rotation.set(0, -Math.PI / 2, 0);\n\t          group.add(_this3.mesh);\n\t        });\n\t      });\n\t      this.scene.add(group);\n\t      this.addCamera();\n\t      this.addInteractionControls();\n\t      this.addToReactComponent();\n\t\n\t      // Start the animation\n\t      this.animate();\n\t    }\n\t  }, {\n\t    key: 'addCamera',\n\t    value: function addCamera() {\n\t      // Add the camera\n\t      this.camera = new _Three2.default.PerspectiveCamera(30, this.width / this.height, 1, this.distance);\n\t\n\t      if (this.cameraZ === null) {\n\t        this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n\t      }\n\t\n\t      this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n\t\n\t      this.scene.add(this.camera);\n\t\n\t      // this.renderer.set;\n\t      this.renderer.setSize(this.width, this.height);\n\t      this.renderer.setClearColor(this.backgroundColor, 1);\n\t    }\n\t  }, {\n\t    key: 'addInteractionControls',\n\t    value: function addInteractionControls() {\n\t      // Add controls for mouse interaction\n\t      if (this.orbitControls) {\n\t        this.controls = new OrbitControls(this.camera, _reactDom2.default.findDOMNode(this.component));\n\t        this.controls.enableKeys = false;\n\t        this.controls.addEventListener('change', this.orbitRender.bind(this));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addToReactComponent',\n\t    value: function addToReactComponent() {\n\t      // Add to the React Component\n\t      _reactDom2.default.findDOMNode(this.component).replaceChild(this.renderer.domElement, _reactDom2.default.findDOMNode(this.component).firstChild);\n\t    }\n\t\n\t    /**\n\t     * Animate the scene\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'animate',\n\t    value: function animate() {\n\t      // note: three.js includes requestAnimationFrame shim\n\t      if (this.rotate) {\n\t        this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n\t      }\n\t\n\t      if (this.orbitControls) {\n\t        this.controls.update();\n\t      }\n\t      this.render();\n\t    }\n\t\n\t    /**\n\t     * Render the scene after turning off the rotation\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'orbitRender',\n\t    value: function orbitRender() {\n\t      if (this.rotate) {\n\t        this.rotate = false;\n\t      }\n\t\n\t      this.render();\n\t    }\n\t\n\t    /**\n\t     * Deallocate Mesh, renderer context.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clean',\n\t    value: function clean() {\n\t      if (this.mesh !== undefined) {\n\t        this.mesh.geometry.dispose();\n\t        this.mesh.material.dispose();\n\t        this.scene.remove(this.mesh);\n\t        delete this.mesh;\n\t      }\n\t      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\t      if (directionalLightObj) {\n\t        this.scene.remove(directionalLightObj);\n\t      }\n\t\n\t      if (this.animationRequestId) {\n\t        cancelAnimationFrame(this.animationRequestId);\n\t      }\n\t      this.renderer.dispose();\n\t      this.renderer.forceContextLoss();\n\t    }\n\t\n\t    /**\n\t     * Render the scene\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (this.mesh && this.rotate) {\n\t        this.mesh.rotation.x += this.rotationSpeeds[0];\n\t        this.mesh.rotation.y += this.rotationSpeeds[1];\n\t        this.mesh.rotation.z += this.rotationSpeeds[2];\n\t      }\n\t\n\t      this.renderer.render(this.scene, this.camera);\n\t    }\n\t  }]);\n\t\n\t  return Paint;\n\t}();\n\t\n\texports.default = Paint;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _halogenium = __webpack_require__(21);\n\t\n\tvar _Paint = __webpack_require__(8);\n\t\n\tvar _Paint2 = _interopRequireDefault(_Paint);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar STLViewer = function (_Component) {\n\t  _inherits(STLViewer, _Component);\n\t\n\t  function STLViewer() {\n\t    _classCallCheck(this, STLViewer);\n\t\n\t    return _possibleConstructorReturn(this, (STLViewer.__proto__ || Object.getPrototypeOf(STLViewer)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(STLViewer, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.paint = new _Paint2.default();\n\t      this.paint.init(this);\n\t    }\n\t  }, {\n\t    key: 'shouldComponentUpdate',\n\t    value: function shouldComponentUpdate(nextProps, nextState) {\n\t      return JSON.stringify(nextProps) !== JSON.stringify(this.props);\n\t    }\n\t  }, {\n\t    key: 'componentWillUpdate',\n\t    value: function componentWillUpdate(nextProps, nextState) {\n\t      this.props = nextProps;\n\t      this.paint.init(this);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.paint.clean();\n\t      delete this.paint;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props = this.props,\n\t          width = _props.width,\n\t          height = _props.height,\n\t          modelColor = _props.modelColor;\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        {\n\t          className: this.props.className,\n\t          style: {\n\t            width: width,\n\t            height: height,\n\t            overflow: 'hidden'\n\t          }\n\t        },\n\t        _react2.default.createElement(\n\t          'div',\n\t          {\n\t            style: {\n\t              height: '100%',\n\t              display: 'flex',\n\t              justifyContent: 'center',\n\t              alignItems: 'center'\n\t            }\n\t          },\n\t          _react2.default.createElement(_halogenium.ScaleLoader, { color: 'red', size: '16px' })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return STLViewer;\n\t}(_react.Component);\n\t\n\tSTLViewer.propTypes = {\n\t  className: _propTypes2.default.string,\n\t  url: _propTypes2.default.string,\n\t  width: _propTypes2.default.number,\n\t  height: _propTypes2.default.number,\n\t  backgroundColor: _propTypes2.default.string,\n\t  modelColor: _propTypes2.default.array,\n\t  rotate: _propTypes2.default.bool,\n\t  orbitControls: _propTypes2.default.bool,\n\t  cameraX: _propTypes2.default.number,\n\t  cameraY: _propTypes2.default.number,\n\t  cameraZ: _propTypes2.default.number,\n\t  lights: _propTypes2.default.array,\n\t  lightColor: _propTypes2.default.string,\n\t  rotationSpeeds: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t  model: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.instanceOf(ArrayBuffer)])).isRequired\n\t};\n\tSTLViewer.defaultProps = {\n\t  backgroundColor: '#EAEAEA',\n\t  modelColor: [],\n\t  height: 400,\n\t  width: 400,\n\t  rotate: true,\n\t  orbitControls: true,\n\t  cameraX: 0,\n\t  cameraY: 0,\n\t  cameraZ: null,\n\t  lights: [0, 0, 1],\n\t  lightColor: '#ffffff',\n\t  rotationSpeeds: [0, 0, 0.02],\n\t  model: undefined\n\t};\n\t\n\t\n\tmodule.exports = STLViewer;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar THREE = __webpack_require__(39);\n\t\n\t//\n\t// STL Loader added\n\t//\n\t/**\n\t * @author aleeper / http://adamleeper.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author gero3 / https://github.com/gero3\n\t *\n\t * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n\t *\n\t * Supports both binary and ASCII encoded files, with automatic detection of type.\n\t *\n\t * Limitations:\n\t *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n\t *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n\t *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\n\t *\n\t * Usage:\n\t *  var loader = new THREE.STLLoader();\n\t *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n\t *    scene.add( new THREE.Mesh( geometry ) );\n\t *  });\n\t *\n\t * For binary STLs geometry might contain colors for vertices. To use it:\n\t *  // use the same code to load STL as above\n\t *  if (geometry.hasColors) {\n\t *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\n\t *  } else { .... }\n\t *  var mesh = new THREE.Mesh( geometry, material );\n\t */\n\t\n\tTHREE.STLLoader = function (manager) {\n\t  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n\t};\n\t\n\tTHREE.STLLoader.prototype = {\n\t  constructor: THREE.STLLoader,\n\t\n\t  loadFromUrl: function loadFromUrl(url, onLoad, onProgress, onError) {\n\t    var scope = this;\n\t\n\t    var loader = new THREE.XHRLoader(scope.manager);\n\t    loader.setCrossOrigin(this.crossOrigin);\n\t    loader.setResponseType('arraybuffer');\n\t    loader.load(url, function (text) {\n\t      onLoad(scope.parse(text));\n\t    }, onProgress, onError);\n\t  },\n\t\n\t  loadFromFile: function loadFromFile(buffer, onLoad) {\n\t    var scope = this;\n\t    onLoad(scope.parse(buffer));\n\t  },\n\t\n\t  parse: function parse(data) {\n\t    var isBinary = function isBinary() {\n\t      var expect, face_size, n_faces, reader;\n\t      reader = new DataView(binData);\n\t      face_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n\t      n_faces = reader.getUint32(80, true);\n\t      expect = 80 + 32 / 8 + n_faces * face_size;\n\t\n\t      if (expect === reader.byteLength) {\n\t        return true;\n\t      }\n\t\n\t      // some binary files will have different size from expected,\n\t      // checking characters higher than ASCII to confirm is binary\n\t      var fileLength = reader.byteLength;\n\t      for (var index = 0; index < fileLength; index++) {\n\t        if (reader.getUint8(index, false) > 127) {\n\t          return true;\n\t        }\n\t      }\n\t\n\t      return false;\n\t    };\n\t\n\t    var binData = this.ensureBinary(data);\n\t\n\t    return isBinary() ? this.parseBinary(binData) : this.parseASCII(this.ensureString(data));\n\t  },\n\t\n\t  parseBinary: function parseBinary(data) {\n\t    var reader = new DataView(data);\n\t    var faces = reader.getUint32(80, true);\n\t\n\t    var r,\n\t        g,\n\t        b,\n\t        hasColors = false,\n\t        colors;\n\t    var defaultR, defaultG, defaultB, alpha;\n\t\n\t    // process STL header\n\t    // check for default color in header (\"COLOR=rgba\" sequence).\n\t\n\t    for (var index = 0; index < 80 - 10; index++) {\n\t      if (reader.getUint32(index, false) == 0x434f4c4f /*COLO*/ && reader.getUint8(index + 4) == 0x52 /*'R'*/ && reader.getUint8(index + 5) == 0x3d /*'='*/\n\t      ) {\n\t          hasColors = true;\n\t          colors = new Float32Array(faces * 3 * 3);\n\t\n\t          defaultR = reader.getUint8(index + 6) / 255;\n\t          defaultG = reader.getUint8(index + 7) / 255;\n\t          defaultB = reader.getUint8(index + 8) / 255;\n\t          alpha = reader.getUint8(index + 9) / 255;\n\t        }\n\t    }\n\t\n\t    var dataOffset = 84;\n\t    var faceLength = 12 * 4 + 2;\n\t\n\t    var offset = 0;\n\t\n\t    var geometry = new THREE.BufferGeometry();\n\t\n\t    var vertices = new Float32Array(faces * 3 * 3);\n\t    var normals = new Float32Array(faces * 3 * 3);\n\t\n\t    for (var face = 0; face < faces; face++) {\n\t      var start = dataOffset + face * faceLength;\n\t      var normalX = reader.getFloat32(start, true);\n\t      var normalY = reader.getFloat32(start + 4, true);\n\t      var normalZ = reader.getFloat32(start + 8, true);\n\t\n\t      if (hasColors) {\n\t        var packedColor = reader.getUint16(start + 48, true);\n\t\n\t        if ((packedColor & 0x8000) === 0) {\n\t          // facet has its own unique color\n\t\n\t          r = (packedColor & 0x1f) / 31;\n\t          g = (packedColor >> 5 & 0x1f) / 31;\n\t          b = (packedColor >> 10 & 0x1f) / 31;\n\t        } else {\n\t          r = defaultR;\n\t          g = defaultG;\n\t          b = defaultB;\n\t        }\n\t      }\n\t\n\t      for (var i = 1; i <= 3; i++) {\n\t        var vertexstart = start + i * 12;\n\t\n\t        vertices[offset] = reader.getFloat32(vertexstart, true);\n\t        vertices[offset + 1] = reader.getFloat32(vertexstart + 4, true);\n\t        vertices[offset + 2] = reader.getFloat32(vertexstart + 8, true);\n\t\n\t        normals[offset] = normalX;\n\t        normals[offset + 1] = normalY;\n\t        normals[offset + 2] = normalZ;\n\t\n\t        if (hasColors) {\n\t          colors[offset] = r;\n\t          colors[offset + 1] = g;\n\t          colors[offset + 2] = b;\n\t        }\n\t\n\t        offset += 3;\n\t      }\n\t    }\n\t\n\t    geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n\t    geometry.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n\t\n\t    if (hasColors) {\n\t      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n\t      geometry.hasColors = true;\n\t      geometry.alpha = alpha;\n\t    }\n\t\n\t    return geometry;\n\t  },\n\t\n\t  parseASCII: function parseASCII(data) {\n\t    var geometry, length, normal, patternFace, patternNormal, patternVertex, result, text;\n\t    geometry = new THREE.Geometry();\n\t    patternFace = /facet([\\s\\S]*?)endfacet/g;\n\t\n\t    while ((result = patternFace.exec(data)) !== null) {\n\t      text = result[0];\n\t      patternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t      while ((result = patternNormal.exec(text)) !== null) {\n\t        normal = new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5]));\n\t      }\n\t\n\t      patternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t      while ((result = patternVertex.exec(text)) !== null) {\n\t        geometry.vertices.push(new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5])));\n\t      }\n\t\n\t      length = geometry.vertices.length;\n\t\n\t      geometry.faces.push(new THREE.Face3(length - 3, length - 2, length - 1, normal));\n\t    }\n\t\n\t    geometry.computeBoundingBox();\n\t    geometry.computeBoundingSphere();\n\t\n\t    return geometry;\n\t  },\n\t\n\t  ensureString: function ensureString(buf) {\n\t    if (typeof buf !== 'string') {\n\t      var array_buffer = new Uint8Array(buf);\n\t      var str = '';\n\t      for (var i = 0; i < buf.byteLength; i++) {\n\t        str += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n\t      }\n\t      return str;\n\t    } else {\n\t      return buf;\n\t    }\n\t  },\n\t\n\t  ensureBinary: function ensureBinary(buf) {\n\t    if (typeof buf === 'string') {\n\t      var array_buffer = new Uint8Array(buf.length);\n\t      for (var i = 0; i < buf.length; i++) {\n\t        array_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n\t      }\n\t      return array_buffer.buffer || array_buffer;\n\t    } else {\n\t      return buf;\n\t    }\n\t  }\n\t};\n\t\n\tif (typeof DataView === 'undefined') {\n\t  DataView = function DataView(buffer, byteOffset, byteLength) {\n\t    this.buffer = buffer;\n\t    this.byteOffset = byteOffset || 0;\n\t    this.byteLength = byteLength || buffer.byteLength || buffer.length;\n\t    this._isString = typeof buffer === 'string';\n\t  };\n\t\n\t  DataView.prototype = {\n\t    _getCharCodes: function _getCharCodes(buffer, start, length) {\n\t      start = start || 0;\n\t      length = length || buffer.length;\n\t      var end = start + length;\n\t      var codes = [];\n\t      for (var i = start; i < end; i++) {\n\t        codes.push(buffer.charCodeAt(i) & 0xff);\n\t      }\n\t      return codes;\n\t    },\n\t\n\t    _getBytes: function _getBytes(length, byteOffset, littleEndian) {\n\t      var result;\n\t\n\t      // Handle the lack of endianness\n\t      if (littleEndian === undefined) {\n\t        littleEndian = this._littleEndian;\n\t      }\n\t\n\t      // Handle the lack of byteOffset\n\t      if (byteOffset === undefined) {\n\t        byteOffset = this.byteOffset;\n\t      } else {\n\t        byteOffset = this.byteOffset + byteOffset;\n\t      }\n\t\n\t      if (length === undefined) {\n\t        length = this.byteLength - byteOffset;\n\t      }\n\t\n\t      // Error Checking\n\t      if (typeof byteOffset !== 'number') {\n\t        throw new TypeError('DataView byteOffset is not a number');\n\t      }\n\t\n\t      if (length < 0 || byteOffset + length > this.byteLength) {\n\t        throw new Error('DataView length or (byteOffset+length) value is out of bounds');\n\t      }\n\t\n\t      if (this.isString) {\n\t        result = this._getCharCodes(this.buffer, byteOffset, byteOffset + length);\n\t      } else {\n\t        result = this.buffer.slice(byteOffset, byteOffset + length);\n\t      }\n\t\n\t      if (!littleEndian && length > 1) {\n\t        if (!(result instanceof Array)) {\n\t          result = Array.prototype.slice.call(result);\n\t        }\n\t\n\t        result.reverse();\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    // Compatibility functions on a String Buffer\n\t\n\t    getFloat64: function getFloat64(byteOffset, littleEndian) {\n\t      var b = this._getBytes(8, byteOffset, littleEndian),\n\t          sign = 1 - 2 * (b[7] >> 7),\n\t          exponent = ((b[7] << 1 & 0xff) << 3 | b[6] >> 4) - ((1 << 10) - 1),\n\t\n\t      // Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\n\t      mantissa = (b[6] & 0x0f) * Math.pow(2, 48) + b[5] * Math.pow(2, 40) + b[4] * Math.pow(2, 32) + b[3] * Math.pow(2, 24) + b[2] * Math.pow(2, 16) + b[1] * Math.pow(2, 8) + b[0];\n\t\n\t      if (exponent === 1024) {\n\t        if (mantissa !== 0) {\n\t          return NaN;\n\t        } else {\n\t          return sign * Infinity;\n\t        }\n\t      }\n\t\n\t      if (exponent === -1023) {\n\t        // Denormalized\n\t        return sign * mantissa * Math.pow(2, -1022 - 52);\n\t      }\n\t\n\t      return sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\n\t    },\n\t\n\t    getFloat32: function getFloat32(byteOffset, littleEndian) {\n\t      var b = this._getBytes(4, byteOffset, littleEndian),\n\t          sign = 1 - 2 * (b[3] >> 7),\n\t          exponent = (b[3] << 1 & 0xff | b[2] >> 7) - 127,\n\t          mantissa = (b[2] & 0x7f) << 16 | b[1] << 8 | b[0];\n\t\n\t      if (exponent === 128) {\n\t        if (mantissa !== 0) {\n\t          return NaN;\n\t        } else {\n\t          return sign * Infinity;\n\t        }\n\t      }\n\t\n\t      if (exponent === -127) {\n\t        // Denormalized\n\t        return sign * mantissa * Math.pow(2, -126 - 23);\n\t      }\n\t\n\t      return sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\n\t    },\n\t\n\t    getInt32: function getInt32(byteOffset, littleEndian) {\n\t      var b = this._getBytes(4, byteOffset, littleEndian);\n\t      return b[3] << 24 | b[2] << 16 | b[1] << 8 | b[0];\n\t    },\n\t\n\t    getUint32: function getUint32(byteOffset, littleEndian) {\n\t      return this.getInt32(byteOffset, littleEndian) >>> 0;\n\t    },\n\t\n\t    getInt16: function getInt16(byteOffset, littleEndian) {\n\t      return this.getUint16(byteOffset, littleEndian) << 16 >> 16;\n\t    },\n\t\n\t    getUint16: function getUint16(byteOffset, littleEndian) {\n\t      var b = this._getBytes(2, byteOffset, littleEndian);\n\t      return b[1] << 8 | b[0];\n\t    },\n\t\n\t    getInt8: function getInt8(byteOffset) {\n\t      return this.getUint8(byteOffset) << 24 >> 24;\n\t    },\n\t\n\t    getUint8: function getUint8(byteOffset) {\n\t      return this._getBytes(1, byteOffset)[0];\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = THREE;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = document.createElement('div').style;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar cssVendorPrefix;\n\t\n\tmodule.exports = function() {\n\t\n\t  if (cssVendorPrefix) return cssVendorPrefix;\n\t\n\t  var styles = window.getComputedStyle(document.documentElement, '');\n\t  var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o']))[1];\n\t\n\t  return cssVendorPrefix = '-' + pre + '-';\n\t}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar builtinStyle = __webpack_require__(11);\n\tvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\tvar domVendorPrefix;\n\t\n\t// Helper function to get the proper vendor property name. (transition => WebkitTransition)\n\tmodule.exports = function(prop, isSupportTest) {\n\t\n\t  var vendorProp;\n\t  if (prop in builtinStyle) return prop;\n\t\n\t  var UpperProp = prop.charAt(0).toUpperCase() + prop.substr(1);\n\t\n\t  if (domVendorPrefix) {\n\t\n\t    vendorProp = domVendorPrefix + UpperProp;\n\t    if (vendorProp in builtinStyle) {\n\t      return vendorProp;\n\t    }\n\t  } else {\n\t\n\t    for (var i = 0; i < prefixes.length; ++i) {\n\t      vendorProp = prefixes[i] + UpperProp;\n\t      if (vendorProp in builtinStyle) {\n\t        domVendorPrefix = prefixes[i];\n\t        return vendorProp;\n\t      }\n\t    }\n\t  }\n\t\n\t  // if support test, not fallback to origin prop name\n\t  if (!isSupportTest) {\n\t    return prop;\n\t  }\n\t\n\t}\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar extraSheet;\n\t\n\tmodule.exports = function(css) {\n\t\n\t  if (!extraSheet) {\n\t    // First time, create an extra stylesheet for adding rules\n\t    extraSheet = document.createElement('style');\n\t    document.getElementsByTagName('head')[0].appendChild(extraSheet);\n\t    // Keep reference to actual StyleSheet object (`styleSheet` for IE < 9)\n\t    extraSheet = extraSheet.sheet || extraSheet.styleSheet;\n\t  }\n\t\n\t  var index = (extraSheet.cssRules || extraSheet.rules).length;\n\t  extraSheet.insertRule(css, index);\n\t\n\t  return extraSheet;\n\t}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '50%': {\n\t    transform: 'scale(0.75)',\n\t    opacity: 0.2\n\t  },\n\t  '100%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t};\n\t\n\tvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar BeatLoader = function (_Component) {\n\t  _inherits(BeatLoader, _Component);\n\t\n\t  function BeatLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, BeatLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BeatLoader.__proto__ || Object.getPrototypeOf(BeatLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.7s', (i % 2 ? 0 : 0.35) + 's', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(BeatLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return BeatLoader;\n\t}(_react.Component);\n\t\n\tBeatLoader.propTypes = propTypes;\n\tBeatLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = BeatLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=BeatLoader.js.map\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar keyframes = {\n\t  '0%, 100%': {\n\t    transform: 'scale(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.0)'\n\t  }\n\t};\n\t\n\tvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar BounceLoader = function (_Component) {\n\t  _inherits(BounceLoader, _Component);\n\t\n\t  function BounceLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, BounceLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BounceLoader.__proto__ || Object.getPrototypeOf(BounceLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        borderRadius: '100%',\n\t        opacity: 0.6,\n\t        position: 'absolute',\n\t        top: 0,\n\t        left: 0,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '2s', i === 1 ? '1s' : '0s', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)({\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(BounceLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle() },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return BounceLoader;\n\t}(_react.Component);\n\t\n\tBounceLoader.propTypes = propTypes;\n\tBounceLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px'\n\t};\n\texports.default = BounceLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=BounceLoader.js.map\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'rotate(0deg) scale(1)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotate(180deg) scale(0.8)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotate(360deg) scale(1)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar ClipLoader = function (_Component) {\n\t  _inherits(ClipLoader, _Component);\n\t\n\t  function ClipLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, ClipLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ClipLoader.__proto__ || Object.getPrototypeOf(ClipLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        border: '2px solid',\n\t        borderColor: _this.props.color,\n\t        borderBottomColor: 'transparent',\n\t        borderRadius: '100%',\n\t        background: 'transparent !important',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '0.75s', '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getBallStyle(i), _this.getAnimationStyle(), {\n\t        display: 'inline-block'\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(ClipLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return ClipLoader;\n\t}(_react.Component);\n\t\n\tClipLoader.propTypes = propTypes;\n\tClipLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '35px'\n\t};\n\texports.default = ClipLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=ClipLoader.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar rotateKeyframes = {\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var bounceKeyframes = {\n\t  '0%, 100%': {\n\t    transform: 'scale(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var rotateAnimationName = (0, _insertKeyframesRule2.default)(rotateKeyframes);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar bounceAnimationName = (0, _insertKeyframesRule2.default)(bounceKeyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar DotLoader = function (_Component) {\n\t  _inherits(DotLoader, _Component);\n\t\n\t  function DotLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, DotLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DotLoader.__proto__ || Object.getPrototypeOf(DotLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: size,\n\t        height: size,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i === 0 ? rotateAnimationName : bounceAnimationName, '2s', i === 2 ? '-1s' : '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'forwards';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = _this.props.size | 0;\n\t      var ballSize = size / 2;\n\t\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(ballSize), _this.getAnimationStyle(i), {\n\t          position: 'absolute',\n\t          top: i % 2 ? 0 : 'auto',\n\t          bottom: i % 2 ? 'auto' : 0,\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getAnimationStyle(i), {\n\t        width: size,\n\t        height: size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(DotLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return DotLoader;\n\t}(_react.Component);\n\t\n\tDotLoader.propTypes = propTypes;\n\tDotLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = DotLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=DotLoader.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '50%': {\n\t    opacity: 0.3\n\t  },\n\t  '100%': {\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  radius: _propTypes2.default.string,\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar FadeLoader = function (_Component) {\n\t  _inherits(FadeLoader, _Component);\n\t\n\t  function FadeLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, FadeLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FadeLoader.__proto__ || Object.getPrototypeOf(FadeLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        height: _this.props.height,\n\t        width: _this.props.width,\n\t        margin: _this.props.margin,\n\t        borderRadius: _this.props.radius,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '1.2s', i * 0.12 + 's', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getPosStyle = function (i) {\n\t      var radius = 20;\n\t      var quarter = radius / 2 + radius / 5.5;\n\t\n\t      var lines = {\n\t        l1: {\n\t          top: radius,\n\t          left: 0\n\t        },\n\t        l2: {\n\t          top: quarter,\n\t          left: quarter,\n\t          transform: 'rotate(-45deg)'\n\t        },\n\t        l3: {\n\t          top: 0,\n\t          left: radius,\n\t          transform: 'rotate(90deg)'\n\t        },\n\t        l4: {\n\t          top: -quarter,\n\t          left: quarter,\n\t          transform: 'rotate(45deg)'\n\t        },\n\t        l5: {\n\t          top: -radius,\n\t          left: 0\n\t        },\n\t        l6: {\n\t          top: -quarter,\n\t          left: -quarter,\n\t          transform: 'rotate(-45deg)'\n\t        },\n\t        l7: {\n\t          top: 0,\n\t          left: -radius,\n\t          transform: 'rotate(90deg)'\n\t        },\n\t        l8: {\n\t          top: quarter,\n\t          left: -quarter,\n\t          transform: 'rotate(45deg)'\n\t        }\n\t      };\n\t\n\t      return lines['l' + i];\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getPosStyle(i), _this.getAnimationStyle(i), {\n\t        position: 'absolute',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(FadeLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var style = {\n\t          position: 'relative',\n\t          fontSize: 0\n\t        };\n\t\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(5) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(6) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(7) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(8) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return FadeLoader;\n\t}(_react.Component);\n\t\n\tFadeLoader.propTypes = propTypes;\n\tFadeLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  height: '15px',\n\t  width: '5px',\n\t  margin: '2px',\n\t  radius: '2px'\n\t};\n\texports.default = FadeLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=FadeLoader.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scale(1)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(0.5)',\n\t    opacity: 0.7\n\t  },\n\t  '100%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\t/**\n\t * @param  {Number} top\n\t * @return {Number}\n\t */\n\tfunction random(top) {\n\t  return Math.random() * top;\n\t}\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar GridLoader = function (_Component) {\n\t  _inherits(GridLoader, _Component);\n\t\n\t  function GridLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, GridLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GridLoader.__proto__ || Object.getPrototypeOf(GridLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animationDuration = random(100) / 100 + 0.6 + 's';\n\t      var animationDelay = random(100) / 100 - 0.2 + 's';\n\t\n\t      var animation = [animationName, animationDuration, animationDelay, 'infinite', 'ease'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(GridLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var style = {\n\t          width: parseFloat(this.props.size) * 3 + parseFloat(this.props.margin) * 6,\n\t          fontSize: 0\n\t        };\n\t\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(5) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(6) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(7) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(8) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(9) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return GridLoader;\n\t}(_react.Component);\n\t\n\tGridLoader.propTypes = propTypes;\n\tGridLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px'\n\t};\n\texports.default = GridLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=GridLoader.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.SyncLoader = exports.SquareLoader = exports.SkewLoader = exports.ScaleLoader = exports.RotateLoader = exports.RiseLoader = exports.RingLoader = exports.PulseLoader = exports.PacmanLoader = exports.MoonLoader = exports.GridLoader = exports.FadeLoader = exports.DotLoader = exports.ClipLoader = exports.BounceLoader = exports.BeatLoader = undefined;\n\t\n\tvar _BeatLoader2 = __webpack_require__(15);\n\t\n\tvar _BeatLoader3 = _interopRequireDefault(_BeatLoader2);\n\t\n\tvar _BounceLoader2 = __webpack_require__(16);\n\t\n\tvar _BounceLoader3 = _interopRequireDefault(_BounceLoader2);\n\t\n\tvar _ClipLoader2 = __webpack_require__(17);\n\t\n\tvar _ClipLoader3 = _interopRequireDefault(_ClipLoader2);\n\t\n\tvar _DotLoader2 = __webpack_require__(18);\n\t\n\tvar _DotLoader3 = _interopRequireDefault(_DotLoader2);\n\t\n\tvar _FadeLoader2 = __webpack_require__(19);\n\t\n\tvar _FadeLoader3 = _interopRequireDefault(_FadeLoader2);\n\t\n\tvar _GridLoader2 = __webpack_require__(20);\n\t\n\tvar _GridLoader3 = _interopRequireDefault(_GridLoader2);\n\t\n\tvar _MoonLoader2 = __webpack_require__(22);\n\t\n\tvar _MoonLoader3 = _interopRequireDefault(_MoonLoader2);\n\t\n\tvar _PacmanLoader2 = __webpack_require__(23);\n\t\n\tvar _PacmanLoader3 = _interopRequireDefault(_PacmanLoader2);\n\t\n\tvar _PulseLoader2 = __webpack_require__(24);\n\t\n\tvar _PulseLoader3 = _interopRequireDefault(_PulseLoader2);\n\t\n\tvar _RingLoader2 = __webpack_require__(25);\n\t\n\tvar _RingLoader3 = _interopRequireDefault(_RingLoader2);\n\t\n\tvar _RiseLoader2 = __webpack_require__(26);\n\t\n\tvar _RiseLoader3 = _interopRequireDefault(_RiseLoader2);\n\t\n\tvar _RotateLoader2 = __webpack_require__(27);\n\t\n\tvar _RotateLoader3 = _interopRequireDefault(_RotateLoader2);\n\t\n\tvar _ScaleLoader2 = __webpack_require__(28);\n\t\n\tvar _ScaleLoader3 = _interopRequireDefault(_ScaleLoader2);\n\t\n\tvar _SkewLoader2 = __webpack_require__(29);\n\t\n\tvar _SkewLoader3 = _interopRequireDefault(_SkewLoader2);\n\t\n\tvar _SquareLoader2 = __webpack_require__(30);\n\t\n\tvar _SquareLoader3 = _interopRequireDefault(_SquareLoader2);\n\t\n\tvar _SyncLoader2 = __webpack_require__(31);\n\t\n\tvar _SyncLoader3 = _interopRequireDefault(_SyncLoader2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.BeatLoader = _BeatLoader3.default;\n\texports.BounceLoader = _BounceLoader3.default;\n\texports.ClipLoader = _ClipLoader3.default;\n\texports.DotLoader = _DotLoader3.default;\n\texports.FadeLoader = _FadeLoader3.default;\n\texports.GridLoader = _GridLoader3.default;\n\texports.MoonLoader = _MoonLoader3.default;\n\texports.PacmanLoader = _PacmanLoader3.default;\n\texports.PulseLoader = _PulseLoader3.default;\n\texports.RingLoader = _RingLoader3.default;\n\texports.RiseLoader = _RiseLoader3.default;\n\texports.RotateLoader = _RotateLoader3.default;\n\texports.ScaleLoader = _ScaleLoader3.default;\n\texports.SkewLoader = _SkewLoader3.default;\n\texports.SquareLoader = _SquareLoader3.default;\n\texports.SyncLoader = _SyncLoader3.default;\n\t//# sourceMappingURL=Halogenium.js.map\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar MoonLoader = function (_Component) {\n\t  _inherits(MoonLoader, _Component);\n\t\n\t  function MoonLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, MoonLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MoonLoader.__proto__ || Object.getPrototypeOf(MoonLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '0.6s', '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'forwards';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = _this.props.size | 0;\n\t      var moonSize = size / 7;\n\t\n\t      if (i === 1) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getBallStyle(moonSize), _this.getAnimationStyle(i), {\n\t          backgroundColor: _this.props.color,\n\t          opacity: '0.8',\n\t          position: 'absolute',\n\t          top: size / 2 - moonSize / 2\n\t        });\n\t      } else if (i === 2) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getBallStyle(size), {\n\t          border: moonSize + 'px solid ' + _this.props.color,\n\t          opacity: 0.1\n\t        });\n\t      }\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getAnimationStyle(i), {\n\t        position: 'relative'\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(MoonLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return MoonLoader;\n\t}(_react.Component);\n\t\n\tMoonLoader.propTypes = propTypes;\n\tMoonLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = MoonLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=MoonLoader.js.map\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar animations = {};\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar PacmanLoader = function (_Component) {\n\t  _inherits(PacmanLoader, _Component);\n\t\n\t  function PacmanLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, PacmanLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PacmanLoader.__proto__ || Object.getPrototypeOf(PacmanLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign,\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var size = _this.props.size;\n\t      var animationName = animations[size];\n\t\n\t      if (!animationName) {\n\t        var keyframes = {\n\t          '75%': {\n\t            opacity: 0.7\n\t          },\n\t          '100%': {\n\t            transform: 'translate(' + -4 * size + 'px, ' + -size / 4 + 'px)'\n\t          }\n\t        };\n\t        animationName = animations[size] = (0, _insertKeyframesRule2.default)(keyframes);\n\t      }\n\t\n\t      var animation = [animationName, '1s', i * 0.25 + 's', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i | 0 === 1) {\n\t        var s1 = _this.props.size + 'px solid transparent';\n\t        var s2 = _this.props.size + 'px solid ' + _this.props.color;\n\t\n\t        return {\n\t          width: 0,\n\t          height: 0,\n\t          borderRight: s1,\n\t          borderTop: s2,\n\t          borderLeft: s2,\n\t          borderBottom: s2,\n\t          borderRadius: _this.props.size\n\t        };\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        width: 10,\n\t        height: 10,\n\t        transform: 'translate(0, ' + -_this.props.size / 4 + 'px)',\n\t        position: 'absolute',\n\t        top: 25,\n\t        left: 100\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var style = {\n\t          position: 'relative',\n\t          fontSize: 0\n\t        };\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(PacmanLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return PacmanLoader;\n\t}(_react.Component);\n\t\n\tPacmanLoader.propTypes = propTypes;\n\tPacmanLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  size: 25,\n\t  margin: 2 };\n\texports.default = PacmanLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=PacmanLoader.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  },\n\t  '45%': {\n\t    transform: 'scale(0.1)',\n\t    opacity: 0.7\n\t  },\n\t  '80%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar PulseLoader = function (_Component) {\n\t  _inherits(PulseLoader, _Component);\n\t\n\t  function PulseLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, PulseLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PulseLoader.__proto__ || Object.getPrototypeOf(PulseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.75s', i * 0.12 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(PulseLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return PulseLoader;\n\t}(_react.Component);\n\t\n\tPulseLoader.propTypes = propTypes;\n\tPulseLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = PulseLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=PulseLoader.js.map\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar rightRotateKeyframes = {\n\t  '0%': {\n\t    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\t\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(180deg) rotateY(360deg) rotateZ(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var leftRotateKeyframes = {\n\t  '0%': {\n\t    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(360deg) rotateY(180deg) rotateZ(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var rightRotateAnimationName = (0, _insertKeyframesRule2.default)(rightRotateKeyframes);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar leftRotateAnimationName = (0, _insertKeyframesRule2.default)(leftRotateKeyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RingLoader = function (_Component) {\n\t  _inherits(RingLoader, _Component);\n\t\n\t  function RingLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RingLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RingLoader.__proto__ || Object.getPrototypeOf(RingLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getCircleStyle = function (size) {\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        border: size / 10 + 'px solid ' + _this.props.color,\n\t        opacity: 0.4,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i | 0 === 1 ? rightRotateAnimationName : leftRotateAnimationName, '2s', '0s', 'infinite', 'linear'].join(' ');\n\t\n\t      var animationFillMode = 'forwards';\n\t      var perspective = '800px';\n\t\n\t      return {\n\t        perspective: perspective,\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = parseInt(_this.props.size, 10);\n\t\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getCircleStyle(size), _this.getAnimationStyle(i), {\n\t          position: 'absolute',\n\t          top: 0,\n\t          left: 0\n\t        });\n\t      }\n\t\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      };\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: _this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RingLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RingLoader;\n\t}(_react.Component);\n\t\n\tRingLoader.propTypes = propTypes;\n\tRingLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = RingLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RingLoader.js.map\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Number}\n\t */\n\tvar riseAmount = 30;\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframesEven = {\n\t  '0%': {\n\t    transform: 'scale(1.1)'\n\t  },\n\t  '25%': {\n\t    transform: 'translateY(-' + riseAmount + 'px)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(0.4)'\n\t  },\n\t  '75%': {\n\t    transform: 'translateY(' + riseAmount + 'px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0) scale(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var keyframesOdd = {\n\t  '0%': {\n\t    transform: 'scale(0.4)'\n\t  },\n\t  25: {\n\t    transform: 'translateY(' + riseAmount + 'px)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.1)'\n\t  },\n\t  '75%': {\n\t    transform: 'translateY(-' + riseAmount + 'px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0) scale(0.75)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationNameEven = (0, _insertKeyframesRule2.default)(keyframesEven);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar animationNameOdd = (0, _insertKeyframesRule2.default)(keyframesOdd);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RiseLoader = function (_Component) {\n\t  _inherits(RiseLoader, _Component);\n\t\n\t  function RiseLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RiseLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RiseLoader.__proto__ || Object.getPrototypeOf(RiseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i % 2 === 0 ? animationNameEven : animationNameOdd, '1s', '0s', 'infinite', 'cubic-bezier(.15,.46,.9,.6)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RiseLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RiseLoader;\n\t}(_react.Component);\n\t\n\tRiseLoader.propTypes = propTypes;\n\tRiseLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = RiseLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RiseLoader.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'rotate(0deg)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotate(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RotateLoader = function (_Component) {\n\t  _inherits(RotateLoader, _Component);\n\t\n\t  function RotateLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RotateLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RotateLoader.__proto__ || Object.getPrototypeOf(RotateLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '1s', '0s', 'infinite', 'cubic-bezier(.7,-.13,.22,.86)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), {\n\t          opacity: '0.8',\n\t          position: 'absolute',\n\t          top: 0,\n\t          left: i % 2 ? -28 : 25,\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: _this.getStyle() },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RotateLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RotateLoader;\n\t}(_react.Component);\n\t\n\tRotateLoader.propTypes = propTypes;\n\tRotateLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = RotateLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RotateLoader.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scaley(1.0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scaley(0.4)'\n\t  },\n\t  '100%': {\n\t    transform: 'scaley(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  radius: _propTypes2.default.string,\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar ScaleLoader = function (_Component) {\n\t  _inherits(ScaleLoader, _Component);\n\t\n\t  function ScaleLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, ScaleLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScaleLoader.__proto__ || Object.getPrototypeOf(ScaleLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        height: _this.props.height,\n\t        width: _this.props.width,\n\t        margin: _this.props.margin,\n\t        borderRadius: _this.props.radius,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '1s', i * 0.1 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(ScaleLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return ScaleLoader;\n\t}(_react.Component);\n\t\n\tScaleLoader.propTypes = propTypes;\n\tScaleLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  height: '35px',\n\t  width: '4px',\n\t  margin: '2px',\n\t  radius: '2px' };\n\texports.default = ScaleLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=ScaleLoader.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '25%': {\n\t    transform: 'perspective(100px) rotateX(180deg) rotateY(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'perspective(100px) rotateX(180deg) rotateY(180deg)'\n\t  },\n\t  '75%': {\n\t    transform: 'perspective(100px) rotateX(0) rotateY(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'perspective(100px) rotateX(0) rotateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SkewLoader = function (_Component) {\n\t  _inherits(SkewLoader, _Component);\n\t\n\t  function SkewLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SkewLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SkewLoader.__proto__ || Object.getPrototypeOf(SkewLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSharpStyle = function () {\n\t      return {\n\t        width: 0,\n\t        height: 0,\n\t        borderLeft: _this.props.size + ' solid transparent',\n\t        borderRight: _this.props.size + ' solid transparent',\n\t        borderBottom: _this.props.size + ' solid ' + _this.props.color,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getSharpStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block'\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SkewLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SkewLoader;\n\t}(_react.Component);\n\t\n\tSkewLoader.propTypes = propTypes;\n\tSkewLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  size: '20px' };\n\texports.default = SkewLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SkewLoader.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '25%': {\n\t    transform: 'rotateX(180deg) rotateY(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotateX(180deg) rotateY(180deg)'\n\t  },\n\t  '75%': {\n\t    transform: 'rotateX(0) rotateY(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(0) rotateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SquareLoader = function (_Component) {\n\t  _inherits(SquareLoader, _Component);\n\t\n\t  function SquareLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SquareLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SquareLoader.__proto__ || Object.getPrototypeOf(SquareLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSquareStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n\t      var animationFillMode = 'both';\n\t      var perspective = '100px';\n\t\n\t      return {\n\t        perspective: perspective,\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getSquareStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SquareLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SquareLoader;\n\t}(_react.Component);\n\t\n\tSquareLoader.propTypes = propTypes;\n\tSquareLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '50px' };\n\texports.default = SquareLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SquareLoader.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '33%': {\n\t    transform: 'translateY(10px)'\n\t  },\n\t  '66%': {\n\t    transform: 'translateY(-10px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SyncLoader = function (_Component) {\n\t  _inherits(SyncLoader, _Component);\n\t\n\t  function SyncLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SyncLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SyncLoader.__proto__ || Object.getPrototypeOf(SyncLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.6s', i * 0.07 + 's', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SyncLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SyncLoader;\n\t}(_react.Component);\n\t\n\tSyncLoader.propTypes = propTypes;\n\tSyncLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = SyncLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SyncLoader.js.map\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = __webpack_require__(33);\n\t\n\tfunction emptyFunction() {}\n\tfunction emptyFunctionWithReset() {}\n\temptyFunctionWithReset.resetWarningCache = emptyFunction;\n\t\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    var err = new Error(\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t    err.name = 'Invariant Violation';\n\t    throw err;\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\t\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    elementType: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim,\n\t    exact: getShim,\n\t\n\t    checkPropTypes: emptyFunctionWithReset,\n\t    resetWarningCache: emptyFunction\n\t  };\n\t\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.8.6\n\t * react-dom.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t/*\n\t Modernizr 3.0.0pre (Custom Build) | MIT\n\t*/\n\t'use strict';var aa=__webpack_require__(1),n=__webpack_require__(5),r=__webpack_require__(37);function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\n\tfunction x(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:x(\"227\");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}\n\tvar da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x(\"198\"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};\n\tfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x(\"96\",a);if(!oa[c]){b.extractEvents?void 0:x(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x(\"99\",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x(\"98\",d,a)}}}}\n\tfunction qa(a,b,c){ra[a]?x(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\n\tfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\n\tvar Ba={injectEventPluginOrder:function(a){la?x(\"101\"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}};\n\tfunction Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?x(\"231\",b,typeof c):void 0;\n\treturn c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x(\"95\"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa=\"__reactInternalInstance$\"+Ea,Ga=\"__reactEventHandlers$\"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}\n\tfunction Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x(\"33\")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\n\tfunction Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],\"captured\",a);for(b=0;b<c.length;b++)Ma(c[b],\"bubbled\",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}\n\tfunction Qa(a){ya(a,Na)}var Ra=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ta={animationend:Sa(\"Animation\",\"AnimationEnd\"),animationiteration:Sa(\"Animation\",\"AnimationIteration\"),animationstart:Sa(\"Animation\",\"AnimationStart\"),transitionend:Sa(\"Transition\",\"TransitionEnd\")},Ua={},Va={};\n\tRa&&(Va=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),\"TransitionEvent\"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}\n\tvar Xa=Wa(\"animationend\"),Ya=Wa(\"animationiteration\"),Za=Wa(\"animationstart\"),$a=Wa(\"transitionend\"),ab=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bb=null,cb=null,db=null;\n\tfunction eb(){if(db)return db;var a,b=cb,c=b.length,d,e=\"value\"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}\n\tfunction y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}\n\tn(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,\n\tb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\n\ty.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\n\tfunction hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&\"CompositionEvent\"in window,ob=null;Ra&&\"documentMode\"in document&&(ob=document.documentMode);\n\tvar pb=Ra&&\"TextEvent\"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\n\tcaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},tb=!1;\n\tfunction ub(a,b){switch(a){case \"keyup\":return-1!==mb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function vb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case \"compositionend\":return vb(b);case \"keypress\":if(32!==b.which)return null;tb=!0;return rb;case \"textInput\":return a=b.data,a===rb&&tb?null:a;default:return null}}\n\tfunction yb(a,b){if(wb)return\"compositionend\"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return qb&&\"ko\"!==b.locale?null:b.data;default:return null}}\n\tvar zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case \"compositionstart\":e=sb.compositionStart;break b;case \"compositionend\":e=sb.compositionEnd;break b;case \"compositionupdate\":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&\"ko\"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb=\"value\"in bb?bb.value:bb.textContent,wb=\n\t!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){\"function\"!==typeof Ab?x(\"280\"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}\n\tfunction Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Lb[a.type]:\"textarea\"===b?!0:!1}\n\tfunction Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\n\tfunction Qb(a){var b=Pb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\n\tnull;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Pb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty(\"ReactCurrentDispatcher\")||(Tb.ReactCurrentDispatcher={current:null});\n\tvar Ub=/^(.*)[\\\\\\/]/,z=\"function\"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for(\"react.element\"):60103,Wb=z?Symbol.for(\"react.portal\"):60106,Xb=z?Symbol.for(\"react.fragment\"):60107,Yb=z?Symbol.for(\"react.strict_mode\"):60108,Zb=z?Symbol.for(\"react.profiler\"):60114,$b=z?Symbol.for(\"react.provider\"):60109,ac=z?Symbol.for(\"react.context\"):60110,bc=z?Symbol.for(\"react.concurrent_mode\"):60111,cc=z?Symbol.for(\"react.forward_ref\"):60112,dc=z?Symbol.for(\"react.suspense\"):60113,ec=z?Symbol.for(\"react.memo\"):\n\t60115,fc=z?Symbol.for(\"react.lazy\"):60116,gc=\"function\"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||\"object\"!==typeof a)return null;a=gc&&a[gc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\n\tfunction ic(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case bc:return\"ConcurrentMode\";case Xb:return\"Fragment\";case Wb:return\"Portal\";case Zb:return\"Profiler\";case Yb:return\"StrictMode\";case dc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ac:return\"Context.Consumer\";case $b:return\"Context.Provider\";case cc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\t\")\":\"ForwardRef\");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ub,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\n\tvar kc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};\n\tfunction oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\n\tfunction qc(a,b,c,d){if(null===b||\"undefined\"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};\n\t\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});\n\t[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});\n\t[\"capture\",\"download\"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}\n\t\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(rc,\n\tsc);D[b]=new C(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});\n\tfunction tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\n\tfunction uc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\n\tfunction wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,\"checked\",b,!1)}\n\tfunction yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?zc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\n\tfunction Ac(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\n\tfunction zc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Bc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type=\"change\";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}\n\tfunction Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if(\"change\"===a)return b}var Ic=!1;Ra&&(Ic=Ob(\"input\")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent(\"onpropertychange\",Kc),Ec=Dc=null)}function Kc(a){\"value\"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){\"focus\"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent(\"onpropertychange\",Kc)):\"blur\"===a&&Jc()}function Mc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Gc(Ec)}\n\tfunction Nc(a,b){if(\"click\"===a)return Gc(b)}function Oc(a,b){if(\"input\"===a||\"change\"===a)return Gc(b)}\n\tvar Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&zc(e,\"number\",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:\"altKey\",\n\tControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}\n\tvar Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?\"mousemove\"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\n\tvar b=Vc;Vc=a.screenY;return Xc?\"mousemove\"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\n\tdependencies:[\"pointerout\",\"pointerover\"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k=\"mouse\";\n\telse if(\"pointerout\"===a||\"pointerover\"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k=\"pointer\";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=\n\tf.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Oa(f[d],\"captured\",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;\n\tfunction dd(a,b){if(bd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x(\"188\"):void 0}\n\tfunction gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\n\tvoid 0:x(\"189\")}}c.alternate!==d?x(\"190\"):void 0}3!==c.tag?x(\"188\"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\n\tvar id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\n\tvar md={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n\t116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=ld(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?nd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return\"keypress\"===\n\ta.type?ld(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?ld(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\n\ta?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"abort\",\"abort\"],[Xa,\"animationEnd\"],[Ya,\"animationIteration\"],[Za,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n\t[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n\t[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[$a,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}\n\t[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n\t[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});\n\tvar xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===ld(c))return null;case \"keydown\":case \"keyup\":a=od;break;case \"blur\":case \"focus\":a=kd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=Yc;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\n\tpd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case \"scroll\":a=Qc;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,\n\tzd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;\n\tfunction E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}\n\tfunction Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||\"number\"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\n\tfunction Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\n\tfunction Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\n\tfunction Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\n\tfunction Pd(){var a=Nd();if(Od(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);\n\tif(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}\n\tfunction Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,\n\td);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\n\tvar Rd=Ra&&\"documentMode\"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Td=null,Ud=null,Vd=null,Wd=!1;\n\tfunction Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;\"selectionStart\"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type=\"select\",a.target=Td,Qa(a),a)}\n\tvar Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case \"focus\":if(Mb(e)||\"true\"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case \"blur\":Vd=Ud=Td=null;break;case \"mousedown\":Wd=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return Wd=!1,Xd(c,d);case \"selectionchange\":if(Rd)break;\n\tcase \"keydown\":case \"keyup\":return Xd(c,d)}return null}};Ba.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\n\tfunction $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\n\tfunction be(a,b){null!=b.dangerouslySetInnerHTML?x(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:uc(c)}}\n\tfunction de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\n\tfunction ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function he(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\n\tvar ie=void 0,je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{ie=ie||document.createElement(\"div\");ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\n\tfunction ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\n\tvar le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\n\tfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(\"\"+b).trim():b+\"px\"}\n\tfunction oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ne(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\n\tfunction qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:x(\"61\")),null!=b.style&&\"object\"!==typeof b.style?x(\"62\",\"\"):void 0)}\n\tfunction re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\n\tfunction se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Ed(\"scroll\",a);break;case \"focus\":case \"blur\":Ed(\"focus\",a);Ed(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Ob(e)&&Ed(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;\n\tfunction we(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function xe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\n\tvar ye=\"function\"===typeof setTimeout?setTimeout:void 0,ze=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;\n\tfunction Ce(a,b,c,d,e){a[Ga]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?oe(a,h):\"dangerouslySetInnerHTML\"===g?je(a,h):\"children\"===g?ke(a,h):tc(a,g,h,d)}switch(c){case \"input\":yc(a,e);break;case \"textarea\":de(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,\n\t!0):ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;\n\tfunction Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}\n\tfunction Me(a,b,c){H.current!==He?x(\"168\"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x(\"108\",ic(b)||\"Unknown\",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}\n\tfunction Pe(a,b,c){var d=a.stateNode;d?void 0:x(\"169\");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}\n\tfunction Te(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\n\tfunction Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}\n\tfunction Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if(\"function\"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}\n\tfunction Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;\n\tc.index=a.index;c.ref=a.ref;return c}\n\tfunction Ye(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ve(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=\n\t14;break a;case fc:g=16;d=null;break a}x(\"130\",null==a?a:typeof a,\"\")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}\n\tfunction bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}\n\tfunction ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):\n\tb>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}\n\tfunction gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\n\tfunction hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;\n\tfunction kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\n\tvar tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=\n\tsf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}\n\tfunction vf(a,b,c){var d=!1,e=He;var f=b.contextType;\"object\"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\n\tfunction wf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}\n\tfunction xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\n\ttypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;\n\tfunction Af(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x(\"309\"):void 0,d=c.stateNode);d?void 0:x(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?x(\"284\"):void 0;c._owner?void 0:x(\"290\",a)}return a}\n\tfunction Bf(a,b){\"textarea\"!==a.type&&x(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\n\tfunction Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n\t2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\n\tc.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=af(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||\n\thc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\n\ta.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&\n\tq&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);\"function\"!==typeof l?x(\"150\"):void 0;h=l.call(h);null==h?x(\"151\"):void 0;\n\tfor(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:\n\tw.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\n\tk.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\t\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x(\"174\"):void 0;return a}\n\tfunction Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}\n\tvar Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x(\"321\")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}\n\tfunction hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x(\"300\"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}\n\tfunction mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x(\"310\"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return\"function\"===typeof b?b(a):b}\n\tfunction pg(a){var b=ng(),c=b.queue;null===c?x(\"311\"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\n\td){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\n\tfunction rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}\n\tfunction tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}\n\tfunction wg(a,b,c){25>eg?void 0:x(\"301\");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===\n\td||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}\n\tvar kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},\n\tuseMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,\n\tlastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,\n\tb){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;\n\tfunction Ag(a,b){var c=K(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\n\tfunction Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}\n\tvar Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}\n\tfunction Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\n\tfunction Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}\n\tfunction Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\t\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\n\tg.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p=\"function\"===\n\ttypeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===\n\ttypeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=\n\tt),g.props=d,g.state=t,g.context=k,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}\n\tfunction Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}\n\tfunction Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\n\tb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\n\tfunction Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x(\"153\"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\n\tfunction Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=\n\tb.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,\n\tc)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,\n\te=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,\n\tg=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\n\tc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==\n\t(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?\n\tnull:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===\n\td?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x(\"156\")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}\n\tfunction M(a,b){if(Yg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x(\"308\"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\n\tfunction ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\n\tfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}\n\tfunction eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}\n\tfunction gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}\n\tfunction yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=\n\t32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}\n\tfunction hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?x(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\n\tfunction jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};\n\tnh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case \"input\":f=vc(g,f);d=vc(g,d);a=[];break;case \"option\":f=$d(g,f);d=$d(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=be(g,f);d=be(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\n\tc){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if(\"style\"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||\n\t(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else\"dangerouslySetInnerHTML\"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,\"\"+k)):\"children\"===c?l===k||\"string\"!==typeof k&&\"number\"!==typeof k||(a=a||[]).push(c,\"\"+k):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};\n\tvar ph=\"function\"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}\n\tfunction th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\n\tfunction uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=ne(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\n\tc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\n\tfunction vh(a){\"function\"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}\n\tfunction xh(a){return 5===a.tag||3===a.tag||4===a.tag}\n\tfunction yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x(\"161\")}c.effectTag&16&&(ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&\n\t2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);\n\telse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\n\tfunction wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n\t(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\n\tfunction zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=\n\tb.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x(\"163\")}}var Bh=\"function\"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}\n\tfunction Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\n\tfunction Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}\n\tvar Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}\n\tfunction Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,\"\");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&(\"function\"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}\n\tfunction Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x(\"163\")}}V=V.nextEffect}}\n\tfunction Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=\n\te.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x(\"163\")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,\"function\"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}\n\tfunction Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}\n\tfunction Zh(a,b){Oh=Kh=!0;a.current===b?x(\"177\"):void 0;var c=a.pendingCommitExpirationTime;0===c?x(\"261\"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;\n\tf=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;\"function\"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=\n\tb>c?b:c;0===b&&(Fh=null);$h(a,b)}\n\tfunction ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n\t128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case \"iframe\":case \"object\":E(\"load\",e);break;case \"video\":case \"audio\":for(k=0;k<ab.length;k++)E(ab[k],e);break;case \"source\":E(\"error\",e);break;case \"img\":case \"image\":case \"link\":E(\"error\",e);E(\"load\",e);break;case \"form\":E(\"reset\",e);E(\"submit\",e);break;case \"details\":E(\"toggle\",e);break;case \"input\":wc(e,m);E(\"invalid\",e);se(p,\"onChange\");break;case \"select\":e._wrapperState=\n\t{wasMultiple:!!m.multiple};E(\"invalid\",e);se(p,\"onChange\");break;case \"textarea\":ce(e,m),E(\"invalid\",e),se(p,\"onChange\")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],\"children\"===f?\"string\"===typeof l?e.textContent!==l&&(k=[\"children\",l]):\"number\"===typeof l&&e.textContent!==\"\"+l&&(k=[\"children\",\"\"+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case \"input\":Rb(e);Ac(e,m,!0);break;case \"textarea\":Rb(e);ee(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n\t(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?\"script\"===p?(e=k.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",k=e.removeChild(e.firstChild)):\"string\"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),\"select\"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case \"iframe\":case \"object\":E(\"load\",\n\tp);h=m;break;case \"video\":case \"audio\":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case \"source\":E(\"error\",p);h=m;break;case \"img\":case \"image\":case \"link\":E(\"error\",p);E(\"load\",p);h=m;break;case \"form\":E(\"reset\",p);E(\"submit\",p);h=m;break;case \"details\":E(\"toggle\",p);h=m;break;case \"input\":wc(p,m);h=vc(p,m);E(\"invalid\",p);se(t,\"onChange\");break;case \"option\":h=$d(p,m);break;case \"select\":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E(\"invalid\",p);se(t,\"onChange\");break;case \"textarea\":ce(p,\n\tm);h=be(p,m);E(\"invalid\",p);se(t,\"onChange\");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];\"style\"===l?oe(R,q):\"dangerouslySetInnerHTML\"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):\"children\"===l?\"string\"===typeof q?(\"textarea\"!==v||\"\"!==q)&&ke(R,q):\"number\"===typeof q&&ke(R,\"\"+q):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case \"input\":Rb(p);\n\tAc(p,m,!1);break;case \"textarea\":Rb(p);ee(p,m);break;case \"option\":null!=m.value&&p.setAttribute(\"value\",\"\"+uc(m.value));break;case \"select\":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):(\"string\"!==\n\ttypeof g&&(null===b.stateNode?x(\"166\"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\n\tb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x(\"156\")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&\n\t(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\n\tfunction bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}\n\tfunction ci(a,b){Kh?x(\"243\"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x(\"271\"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==\n\tm&&\"object\"===typeof m&&\"function\"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if(\"number\"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=\n\t64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||\"A React component\")+\n\t\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==k&&\"function\"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;\n\th.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x(\"281\"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;\n\tb=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}\n\tfunction sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}\n\tfunction mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x(\"313\")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&\n\t(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}\n\tfunction hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\n\tfunction qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x(\"185\")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}\n\tfunction yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}\n\tfunction lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}\n\tfunction Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x(\"244\"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===\n\ta)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}\n\tfunction Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x(\"253\"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}\n\tfunction Di(a,b,c){W?x(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}\n\tfunction Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x(\"246\"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}\n\tfunction Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}\n\tfunction Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\n\tof();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\n\tAb=function(a,b,c){switch(b){case \"input\":yc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x(\"90\");Sb(d);yc(d,e)}}}break;case \"textarea\":de(a,c);break;case \"select\":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};\n\tfunction Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};\n\tNi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\n\tNi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\n\tnull,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\n\tOi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?x(\"191\",c):void 0;c()}}};\n\tfunction Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\n\tPi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};\n\tPi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};\n\tfunction Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}\n\tfunction Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}\n\tfunction Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x(\"200\");return Mi(a,b,null,c)}\n\tvar Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?x(\"188\"):x(\"268\",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x(\"200\");null==a||void 0===a._reactInternalFiber?\n\tx(\"38\"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x(\"40\");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x(\"187\"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=\n\tX;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x(\"299\",\"unstable_createRoot\");return new Pi(a,!0,null!=b&&!0===b.hydrate)}\n\t(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:\"16.8.6\",rendererPackageName:\"react-dom\"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.8.6\n\t * react.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';var k=__webpack_require__(5),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n\t60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\n\tfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\n\tfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\n\tH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\n\tfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\n\tfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\n\tfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\n\tfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n\t0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\n\tfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"321\"):void 0;return a}\n\tvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n\t_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\n\tb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\n\tb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.6\",\n\tunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/** @license React v0.13.6\n\t * scheduler.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\n\tfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if(\"function\"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=\n\tb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}\n\tvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\n\tif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\n\tif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\t\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};\n\tvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\n\texports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};\n\texports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());\n\tb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};\n\texports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(36);\n\t} else {\n\t  module.exports = require('./cjs/scheduler.development.js');\n\t}\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(THREE) {\n\t\tvar MOUSE = THREE.MOUSE\n\t\tif (!MOUSE)\n\t\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\t\n\t\t/**\n\t\t * @author qiao / https://github.com/qiao\n\t\t * @author mrdoob / http://mrdoob.com\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author erich666 / http://erichaines.com\n\t\t */\n\t\t/*global THREE, console */\n\t\n\t\tfunction OrbitConstraint ( object ) {\n\t\n\t\t\tthis.object = object;\n\t\n\t\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t\t// and where it pans with respect to.\n\t\t\tthis.target = new THREE.Vector3();\n\t\n\t\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\t\tthis.minDistance = 0;\n\t\t\tthis.maxDistance = Infinity;\n\t\n\t\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\t\tthis.minZoom = 0;\n\t\t\tthis.maxZoom = Infinity;\n\t\n\t\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t\t// Range is 0 to Math.PI radians.\n\t\t\tthis.minPolarAngle = 0; // radians\n\t\t\tthis.maxPolarAngle = Math.PI; // radians\n\t\n\t\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\t\tthis.maxAzimuthAngle = Infinity; // radians\n\t\n\t\t\t// Set to true to enable damping (inertia)\n\t\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.enableDamping = false;\n\t\t\tthis.dampingFactor = 0.25;\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar EPS = 0.000001;\n\t\n\t\t\t// Current position in spherical coordinate system.\n\t\t\tvar theta;\n\t\t\tvar phi;\n\t\n\t\t\t// Pending changes\n\t\t\tvar phiDelta = 0;\n\t\t\tvar thetaDelta = 0;\n\t\t\tvar scale = 1;\n\t\t\tvar panOffset = new THREE.Vector3();\n\t\t\tvar zoomChanged = false;\n\t\n\t\t\t// API\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn phi;\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn theta;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateLeft = function ( angle ) {\n\t\n\t\t\t\tthetaDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateUp = function ( angle ) {\n\t\n\t\t\t\tphiDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\t// pass in distance in world space to move left\n\t\t\tthis.panLeft = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panLeft ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get X column of matrix\n\t\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\t\tv.multiplyScalar( - distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in distance in world space to move up\n\t\t\tthis.panUp = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panUp ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get Y column of matrix\n\t\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\t\tv.multiplyScalar( distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\t// perspective\n\t\t\t\t\tvar position = scope.object.position;\n\t\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\t\tvar targetDistance = offset.length();\n\t\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\t\n\t\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\t// orthographic\n\t\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyIn = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale /= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyOut = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale *= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.update = function() {\n\t\n\t\t\t\tvar offset = new THREE.Vector3();\n\t\n\t\t\t\t// so camera.up is the orbit axis\n\t\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\t\tvar quatInverse = quat.clone().inverse();\n\t\n\t\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\t\n\t\t\t\treturn function () {\n\t\n\t\t\t\t\tvar position = this.object.position;\n\t\n\t\t\t\t\toffset.copy( position ).sub( this.target );\n\t\n\t\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quat );\n\t\n\t\t\t\t\t// angle from z-axis around y-axis\n\t\n\t\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\t\n\t\t\t\t\t// angle from y-axis\n\t\n\t\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\t\n\t\t\t\t\ttheta += thetaDelta;\n\t\t\t\t\tphi += phiDelta;\n\t\n\t\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\t\n\t\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\t\n\t\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\t\n\t\t\t\t\tvar radius = offset.length() * scale;\n\t\n\t\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\t\n\t\t\t\t\t// move target to panned location\n\t\t\t\t\tthis.target.add( panOffset );\n\t\n\t\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\t\n\t\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quatInverse );\n\t\n\t\t\t\t\tposition.copy( this.target ).add( offset );\n\t\n\t\t\t\t\tthis.object.lookAt( this.target );\n\t\n\t\t\t\t\tif ( this.enableDamping === true ) {\n\t\n\t\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\t\tphiDelta = 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tscale = 1;\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\t\n\t\t\t\t\t// update condition is:\n\t\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\t\n\t\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\t\n\t\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\t\tzoomChanged = false;\n\t\n\t\t\t\t\t\treturn true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn false;\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t};\n\t\n\t\n\t\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t\t// supported.\n\t\t//\n\t\t//    Orbit - left mouse / touch: one finger move\n\t\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\t\n\t\tfunction OrbitControls ( object, domElement ) {\n\t\n\t\t\tvar constraint = new OrbitConstraint( object );\n\t\n\t\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\t\n\t\t\t// API\n\t\n\t\t\tObject.defineProperty( this, 'constraint', {\n\t\n\t\t\t\tget: function() {\n\t\n\t\t\t\t\treturn constraint;\n\t\n\t\t\t\t}\n\t\n\t\t\t} );\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn constraint.getPolarAngle();\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn constraint.getAzimuthalAngle();\n\t\n\t\t\t};\n\t\n\t\t\t// Set to false to disable this control\n\t\t\tthis.enabled = true;\n\t\n\t\t\t// center is old, deprecated; use \"target\" instead\n\t\t\tthis.center = this.target;\n\t\n\t\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t\t// backwards compatibility.\n\t\t\t// Set to false to disable zooming\n\t\t\tthis.enableZoom = true;\n\t\t\tthis.zoomSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable rotating\n\t\t\tthis.enableRotate = true;\n\t\t\tthis.rotateSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable panning\n\t\t\tthis.enablePan = true;\n\t\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\n\t\t\t// Set to true to automatically rotate around the target\n\t\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.autoRotate = false;\n\t\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\t\n\t\t\t// Set to false to disable use of the keys\n\t\t\tthis.enableKeys = true;\n\t\n\t\t\t// The four arrow keys\n\t\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\t\n\t\t\t// Mouse buttons\n\t\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar rotateStart = new THREE.Vector2();\n\t\t\tvar rotateEnd = new THREE.Vector2();\n\t\t\tvar rotateDelta = new THREE.Vector2();\n\t\n\t\t\tvar panStart = new THREE.Vector2();\n\t\t\tvar panEnd = new THREE.Vector2();\n\t\t\tvar panDelta = new THREE.Vector2();\n\t\n\t\t\tvar dollyStart = new THREE.Vector2();\n\t\t\tvar dollyEnd = new THREE.Vector2();\n\t\t\tvar dollyDelta = new THREE.Vector2();\n\t\n\t\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\t\n\t\t\tvar state = STATE.NONE;\n\t\n\t\t\t// for reset\n\t\n\t\t\tthis.target0 = this.target.clone();\n\t\t\tthis.position0 = this.object.position.clone();\n\t\t\tthis.zoom0 = this.object.zoom;\n\t\n\t\t\t// events\n\t\n\t\t\tvar changeEvent = { type: 'change' };\n\t\t\tvar startEvent = { type: 'start' };\n\t\t\tvar endEvent = { type: 'end' };\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tfunction pan( deltaX, deltaY ) {\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\t\n\t\t\t}\n\t\n\t\t\tthis.update = function () {\n\t\n\t\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\t\n\t\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( constraint.update() === true ) {\n\t\n\t\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.reset = function () {\n\t\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\tthis.target.copy( this.target0 );\n\t\t\t\tthis.object.position.copy( this.position0 );\n\t\t\t\tthis.object.zoom = this.zoom0;\n\t\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\tthis.update();\n\t\n\t\t\t};\n\t\n\t\t\tfunction getAutoRotationAngle() {\n\t\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\t\n\t\t\t}\n\t\n\t\t\tfunction getZoomScale() {\n\t\n\t\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\tstate = STATE.ROTATE;\n\t\n\t\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tstate = STATE.DOLLY;\n\t\n\t\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tstate = STATE.PAN;\n\t\n\t\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) {\n\t\n\t\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\t\tscope.dispatchEvent( startEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseMove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tif ( state === STATE.ROTATE ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t} else if ( state === STATE.DOLLY ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t} else if ( state === STATE.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.update();\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseUp( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseWheel( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar delta = 0;\n\t\n\t\t\t\tif ( event.wheelDelta !== undefined ) {\n\t\n\t\t\t\t\t// WebKit / Opera / Explorer 9\n\t\n\t\t\t\t\tdelta = event.wheelDelta;\n\t\n\t\t\t\t} else if ( event.detail !== undefined ) {\n\t\n\t\t\t\t\t// Firefox\n\t\n\t\t\t\t\tdelta = - event.detail;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( delta > 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t} else if ( delta < 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.update();\n\t\t\t\tscope.dispatchEvent( startEvent );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onKeyDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\t\n\t\t\t\tswitch ( event.keyCode ) {\n\t\n\t\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchstart( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\t\n\t\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\t\n\t\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchmove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1: // one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\t\n\t\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2: // two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\n\t\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\t\n\t\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchend( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction contextmenu( event ) {\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t}\n\t\n\t\t\tthis.dispose = function() {\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\n\t\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t}\n\t\n\t\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\t\n\t\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t// force an update at start\n\t\t\tthis.update();\n\t\n\t\t};\n\t\n\t\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\t\tOrbitControls.prototype.constructor = OrbitControls;\n\t\n\t\tObject.defineProperties( OrbitControls.prototype, {\n\t\n\t\t\tobject: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.object;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ttarget: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.target;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\t\tthis.constraint.target.copy( value );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tenableDamping : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.enableDamping = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t// backward compatibility\n\t\n\t\t\tnoZoom: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\treturn ! this.enableZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\tthis.enableZoom = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoRotate: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\treturn ! this.enableRotate;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\tthis.enableRotate = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoPan: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\treturn ! this.enablePan;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\tthis.enablePan = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoKeys: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\treturn ! this.enableKeys;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\tthis.enableKeys = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tstaticMoving : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\treturn ! this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\tthis.constraint.enableDamping = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdynamicDampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\treturn OrbitControls;\n\t}\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var self = self || {};// File:src/Three.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tvar THREE = { REVISION: '72' };\r\n\t\r\n\t//\r\n\t\r\n\tif ( true ) {\r\n\t\r\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (THREE), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\t\r\n\t\t\tmodule.exports = THREE;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t// polyfills\r\n\t\r\n\tif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\t\r\n\t\t// Missing in Android stock browser.\r\n\t\r\n\t\t( function () {\r\n\t\r\n\t\t\tvar lastTime = 0;\r\n\t\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\t\r\n\t\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\t\r\n\t\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\t\tvar id = self.setTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tcallback( currTime + timeToCall );\r\n\t\r\n\t\t\t\t\t}, timeToCall );\r\n\t\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\t\treturn id;\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\t\r\n\t\t\t\t\tself.clearTimeout( id );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}() );\r\n\t\r\n\t}\r\n\t\r\n\tif ( Math.sign === undefined ) {\r\n\t\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\t\r\n\t\tMath.sign = function ( x ) {\r\n\t\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\t\r\n\t\t};\r\n\t\r\n\t}\r\n\t\r\n\tif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\t\r\n\t\t// Missing in IE9-11.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\t\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\t\r\n\t\t\tget: function () {\r\n\t\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} );\r\n\t\r\n\t}\r\n\t\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\t\r\n\tTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\t\r\n\t// GL STATE CONSTANTS\r\n\t\r\n\tTHREE.CullFaceNone = 0;\r\n\tTHREE.CullFaceBack = 1;\r\n\tTHREE.CullFaceFront = 2;\r\n\tTHREE.CullFaceFrontBack = 3;\r\n\t\r\n\tTHREE.FrontFaceDirectionCW = 0;\r\n\tTHREE.FrontFaceDirectionCCW = 1;\r\n\t\r\n\t// SHADOWING TYPES\r\n\t\r\n\tTHREE.BasicShadowMap = 0;\r\n\tTHREE.PCFShadowMap = 1;\r\n\tTHREE.PCFSoftShadowMap = 2;\r\n\t\r\n\t// MATERIAL CONSTANTS\r\n\t\r\n\t// side\r\n\t\r\n\tTHREE.FrontSide = 0;\r\n\tTHREE.BackSide = 1;\r\n\tTHREE.DoubleSide = 2;\r\n\t\r\n\t// shading\r\n\t\r\n\tTHREE.FlatShading = 1;\r\n\tTHREE.SmoothShading = 2;\r\n\t\r\n\t// colors\r\n\t\r\n\tTHREE.NoColors = 0;\r\n\tTHREE.FaceColors = 1;\r\n\tTHREE.VertexColors = 2;\r\n\t\r\n\t// blending modes\r\n\t\r\n\tTHREE.NoBlending = 0;\r\n\tTHREE.NormalBlending = 1;\r\n\tTHREE.AdditiveBlending = 2;\r\n\tTHREE.SubtractiveBlending = 3;\r\n\tTHREE.MultiplyBlending = 4;\r\n\tTHREE.CustomBlending = 5;\r\n\t\r\n\t// custom blending equations\r\n\t// (numbers start from 100 not to clash with other\r\n\t// mappings to OpenGL constants defined in Texture.js)\r\n\t\r\n\tTHREE.AddEquation = 100;\r\n\tTHREE.SubtractEquation = 101;\r\n\tTHREE.ReverseSubtractEquation = 102;\r\n\tTHREE.MinEquation = 103;\r\n\tTHREE.MaxEquation = 104;\r\n\t\r\n\t// custom blending destination factors\r\n\t\r\n\tTHREE.ZeroFactor = 200;\r\n\tTHREE.OneFactor = 201;\r\n\tTHREE.SrcColorFactor = 202;\r\n\tTHREE.OneMinusSrcColorFactor = 203;\r\n\tTHREE.SrcAlphaFactor = 204;\r\n\tTHREE.OneMinusSrcAlphaFactor = 205;\r\n\tTHREE.DstAlphaFactor = 206;\r\n\tTHREE.OneMinusDstAlphaFactor = 207;\r\n\t\r\n\t// custom blending source factors\r\n\t\r\n\t//THREE.ZeroFactor = 200;\r\n\t//THREE.OneFactor = 201;\r\n\t//THREE.SrcAlphaFactor = 204;\r\n\t//THREE.OneMinusSrcAlphaFactor = 205;\r\n\t//THREE.DstAlphaFactor = 206;\r\n\t//THREE.OneMinusDstAlphaFactor = 207;\r\n\tTHREE.DstColorFactor = 208;\r\n\tTHREE.OneMinusDstColorFactor = 209;\r\n\tTHREE.SrcAlphaSaturateFactor = 210;\r\n\t\r\n\t// depth modes\r\n\t\r\n\tTHREE.NeverDepth = 0;\r\n\tTHREE.AlwaysDepth = 1;\r\n\tTHREE.LessDepth = 2;\r\n\tTHREE.LessEqualDepth = 3;\r\n\tTHREE.EqualDepth = 4;\r\n\tTHREE.GreaterEqualDepth = 5;\r\n\tTHREE.GreaterDepth = 6;\r\n\tTHREE.NotEqualDepth = 7;\r\n\t\r\n\t\r\n\t// TEXTURE CONSTANTS\r\n\t\r\n\tTHREE.MultiplyOperation = 0;\r\n\tTHREE.MixOperation = 1;\r\n\tTHREE.AddOperation = 2;\r\n\t\r\n\t// Mapping modes\r\n\t\r\n\tTHREE.UVMapping = 300;\r\n\t\r\n\tTHREE.CubeReflectionMapping = 301;\r\n\tTHREE.CubeRefractionMapping = 302;\r\n\t\r\n\tTHREE.EquirectangularReflectionMapping = 303;\r\n\tTHREE.EquirectangularRefractionMapping = 304;\r\n\t\r\n\tTHREE.SphericalReflectionMapping = 305;\r\n\t\r\n\t// Wrapping modes\r\n\t\r\n\tTHREE.RepeatWrapping = 1000;\r\n\tTHREE.ClampToEdgeWrapping = 1001;\r\n\tTHREE.MirroredRepeatWrapping = 1002;\r\n\t\r\n\t// Filters\r\n\t\r\n\tTHREE.NearestFilter = 1003;\r\n\tTHREE.NearestMipMapNearestFilter = 1004;\r\n\tTHREE.NearestMipMapLinearFilter = 1005;\r\n\tTHREE.LinearFilter = 1006;\r\n\tTHREE.LinearMipMapNearestFilter = 1007;\r\n\tTHREE.LinearMipMapLinearFilter = 1008;\r\n\t\r\n\t// Data types\r\n\t\r\n\tTHREE.UnsignedByteType = 1009;\r\n\tTHREE.ByteType = 1010;\r\n\tTHREE.ShortType = 1011;\r\n\tTHREE.UnsignedShortType = 1012;\r\n\tTHREE.IntType = 1013;\r\n\tTHREE.UnsignedIntType = 1014;\r\n\tTHREE.FloatType = 1015;\r\n\tTHREE.HalfFloatType = 1025;\r\n\t\r\n\t// Pixel types\r\n\t\r\n\t//THREE.UnsignedByteType = 1009;\r\n\tTHREE.UnsignedShort4444Type = 1016;\r\n\tTHREE.UnsignedShort5551Type = 1017;\r\n\tTHREE.UnsignedShort565Type = 1018;\r\n\t\r\n\t// Pixel formats\r\n\t\r\n\tTHREE.AlphaFormat = 1019;\r\n\tTHREE.RGBFormat = 1020;\r\n\tTHREE.RGBAFormat = 1021;\r\n\tTHREE.LuminanceFormat = 1022;\r\n\tTHREE.LuminanceAlphaFormat = 1023;\r\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\n\tTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\t\r\n\t// DDS / ST3C Compressed texture formats\r\n\t\r\n\tTHREE.RGB_S3TC_DXT1_Format = 2001;\r\n\tTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\n\tTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\n\tTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\t\r\n\t\r\n\t// PVRTC compressed texture formats\r\n\t\r\n\tTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\n\tTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\n\tTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\n\tTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\t\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.Projector = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\t\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.pickingRay = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasRenderer = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\t\r\n\t\tthis.domElement = document.createElement( 'canvas' );\r\n\t\tthis.clear = function () {};\r\n\t\tthis.render = function () {};\r\n\t\tthis.setClearColor = function () {};\r\n\t\tthis.setSize = function () {};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Color.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Color = function ( color ) {\r\n\t\r\n\t\tif ( arguments.length === 3 ) {\r\n\t\r\n\t\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.set( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Color.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Color,\r\n\t\r\n\t\tr: 1, g: 1, b: 1,\r\n\t\r\n\t\tset: function ( value ) {\r\n\t\r\n\t\t\tif ( value instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\tthis.copy( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\t\r\n\t\t\t\tthis.setHex( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\t\r\n\t\t\t\tthis.setStyle( value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHex: function ( hex ) {\r\n\t\r\n\t\t\thex = Math.floor( hex );\r\n\t\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\t\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHSL: function () {\r\n\t\r\n\t\t\tfunction hue2rgb ( p, q, t ) {\r\n\t\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( h, s, l ) {\r\n\t\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\t\r\n\t\t\t\tif ( s === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\t\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetStyle: function ( style ) {\r\n\t\r\n\t\t\tvar parseAlpha = function ( strAlpha ) {\r\n\t\r\n\t\t\t\tvar alpha = parseFloat( strAlpha );\r\n\t\r\n\t\t\t\tif ( alpha < 1 ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn alpha;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar m;\r\n\t\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// rgb / hsl\r\n\t\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\t\r\n\t\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\t\tcase 'rgb':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'rgba':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsl':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsla':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// hex color\r\n\t\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\t\r\n\t\t\t\tif ( size === 3 ) {\r\n\t\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\t\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\t\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\t\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\t\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( color ) {\r\n\t\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertGammaToLinear: function () {\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tthis.r = r * r;\r\n\t\t\tthis.g = g * g;\r\n\t\t\tthis.b = b * b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertLinearToGamma: function () {\r\n\t\r\n\t\t\tthis.r = Math.sqrt( this.r );\r\n\t\t\tthis.g = Math.sqrt( this.g );\r\n\t\t\tthis.b = Math.sqrt( this.b );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHex: function () {\r\n\t\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHexString: function () {\r\n\t\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHSL: function ( optionalTarget ) {\r\n\t\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\r\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\t\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\t\r\n\t\t\tif ( min === max ) {\r\n\t\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar delta = max - min;\r\n\t\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\t\r\n\t\t\t\tswitch ( max ) {\r\n\t\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thue /= 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\thsl.h = hue;\r\n\t\t\thsl.s = saturation;\r\n\t\t\thsl.l = lightness;\r\n\t\r\n\t\t\treturn hsl;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetStyle: function () {\r\n\t\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\t\r\n\t\t},\r\n\t\r\n\t\toffsetHSL: function ( h, s, l ) {\r\n\t\r\n\t\t\tvar hsl = this.getHSL();\r\n\t\r\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\t\r\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( color ) {\r\n\t\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddColors: function ( color1, color2 ) {\r\n\t\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( color ) {\r\n\t\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( color, alpha ) {\r\n\t\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( c ) {\r\n\t\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.r = array[ 0 ];\r\n\t\t\tthis.g = array[ 1 ];\r\n\t\t\tthis.b = array[ 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\t\r\n\t// File:src/math/Quaternion.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Quaternion = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Quaternion,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget w () {\r\n\t\r\n\t\t\treturn this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset w ( value ) {\r\n\t\r\n\t\t\tthis._w = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( quaternion ) {\r\n\t\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\t\r\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\t\r\n\t\t\tvar order = euler.order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\t\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\t\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\t\r\n\t\t\tif ( trace > 0 ) {\r\n\t\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\t\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\t\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\t\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\t\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromUnitVectors: function () {\r\n\t\r\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\t\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\t\r\n\t\t\tvar v1, r;\r\n\t\r\n\t\t\tvar EPS = 0.000001;\r\n\t\r\n\t\t\treturn function ( vFrom, vTo ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\t\r\n\t\t\t\tif ( r < EPS ) {\r\n\t\r\n\t\t\t\t\tr = 0;\r\n\t\r\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\t\r\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._x = v1.x;\r\n\t\t\t\tthis._y = v1.y;\r\n\t\t\t\tthis._z = v1.z;\r\n\t\t\t\tthis._w = r;\r\n\t\r\n\t\t\t\tthis.normalize();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tinverse: function () {\r\n\t\r\n\t\t\tthis.conjugate().normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconjugate: function () {\r\n\t\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tvar l = this.length();\r\n\t\r\n\t\t\tif ( l === 0 ) {\r\n\t\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tl = 1 / l;\r\n\t\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( q, p ) {\r\n\t\r\n\t\t\tif ( p !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\t\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\t\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\t\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\t\treturn vector.applyQuaternion( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tslerp: function ( qb, t ) {\r\n\t\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\t\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\t\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\t\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\t\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.copy( qb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\t\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\t\r\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\t\r\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\t\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( quaternion ) {\r\n\t\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\t\r\n\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.Vector2 = function ( x, y ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector2,\r\n\t\r\n\t\tset: function ( x, y ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v ) {\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x *= s;\r\n\t\t\tthis.y *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\t\tmax = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function() {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author *kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector3 = function ( x, y, z ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector3,\r\n\t\r\n\t\tset: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyEuler: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyEuler( euler ) {\r\n\t\r\n\t\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyAxisAngle: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix3: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyProjection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 projection matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\t\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar qx = q.x;\r\n\t\t\tvar qy = q.y;\r\n\t\t\tvar qz = q.z;\r\n\t\t\tvar qw = q.w;\r\n\t\r\n\t\t\t// calculate quat * vector\r\n\t\r\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\t\r\n\t\t\t// calculate result * inverse quat\r\n\t\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function project( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tunproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function unproject( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttransformDirection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\t\r\n\t\t\tthis.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\t\tmax = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcross: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tthis.x = y * v.z - z * v.y;\r\n\t\t\tthis.y = z * v.x - x * v.z;\r\n\t\t\tthis.z = x * v.y - y * v.x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVectors: function ( a, b ) {\r\n\t\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\t\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectOnVector: function () {\r\n\t\r\n\t\t\tvar v1, dot;\r\n\t\r\n\t\t\treturn function projectOnVector( vector ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( vector ).normalize();\r\n\t\r\n\t\t\t\tdot = this.dot( v1 );\r\n\t\r\n\t\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tprojectOnPlane: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\t\r\n\t\t\t\treturn this.sub( v1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\treflect: function () {\r\n\t\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function reflect( normal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tangleTo: function ( v ) {\r\n\t\r\n\t\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\t\r\n\t\t\t// clamp, to handle numerical problems\r\n\t\r\n\t\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x;\r\n\t\t\tvar dy = this.y - v.y;\r\n\t\t\tvar dz = this.z - v.z;\r\n\t\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromQuaternion: function ( q, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPositionFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetScaleFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\t\r\n\t\t\tthis.x = m.elements[ 12 ];\r\n\t\t\tthis.y = m.elements[ 13 ];\r\n\t\t\tthis.z = m.elements[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\t\r\n\t\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\t\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\t\r\n\t\t\tvar offset = index * 4;\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tthis.x = me[ offset ];\r\n\t\t\tthis.y = me[ offset + 1 ];\r\n\t\t\tthis.z = me[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector4.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector4 = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector4,\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( w ) {\r\n\t\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\t\tvar w = this.w;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\t\t\tthis.w *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t\tthis.w = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\t\r\n\t\t\t// q is assumed to be normalized\r\n\t\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\t\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\t\r\n\t\t\tif ( s < 0.0001 ) {\r\n\t\r\n\t\t\t\t this.x = 1;\r\n\t\t\t\t this.y = 0;\r\n\t\t\t\t this.z = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t this.x = q.x / s;\r\n\t\t\t\t this.y = q.y / s;\r\n\t\t\t\t this.z = q.z / s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\t\r\n\t\t\t\tte = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\t\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\t\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\t\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\t\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\t\r\n\t\t\t\tangle = Math.PI;\r\n\t\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\t\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\t\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\t\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\t\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\t\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\t\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\t\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\t\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\t\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w > v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < min.w ) {\r\n\t\r\n\t\t\t\tthis.w = min.w;\r\n\t\r\n\t\t\t} else if ( this.w > max.w ) {\r\n\t\r\n\t\t\t\tthis.w = max.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\t\tmax = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\t\tthis.w = attribute.array[ index + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Euler.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Euler = function ( x, y, z, order ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\t\r\n\tTHREE.Euler.DefaultOrder = 'XYZ';\r\n\t\r\n\tTHREE.Euler.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Euler,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget order () {\r\n\t\r\n\t\t\treturn this._order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset order ( value ) {\r\n\t\r\n\t\t\tthis._order = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, order ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( euler ) {\r\n\t\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\t\r\n\t\t\tvar clamp = THREE.Math.clamp;\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\torder = order || this._order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._order = order;\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromQuaternion: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function ( q, order, update ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\t\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treorder: function () {\r\n\t\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\t\r\n\t\t\tvar q = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( newOrder ) {\r\n\t\r\n\t\t\t\tq.setFromEuler( this );\r\n\t\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tequals: function ( euler ) {\r\n\t\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\t\r\n\t\t\tif ( optionalResult ) {\r\n\t\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Line3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Line3 = function ( start, end ) {\r\n\t\r\n\t\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Line3,\r\n\t\r\n\t\tset: function ( start, end ) {\r\n\t\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( line ) {\r\n\t\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdelta: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.end, this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSq: function () {\r\n\t\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistance: function () {\r\n\t\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclosestPointToPointParameter: function () {\r\n\t\r\n\t\t\tvar startP = new THREE.Vector3();\r\n\t\t\tvar startEnd = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point, clampToLine ) {\r\n\t\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\t\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\t\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\t\r\n\t\t\t\tif ( clampToLine ) {\r\n\t\r\n\t\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn t;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( line ) {\r\n\t\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box2.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Box2 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box2,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Box3 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box3,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromObject: function () {\r\n\t\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\t\tobject.traverse( function ( node ) {\r\n\t\r\n\t\t\t\t\tvar geometry = node.geometry;\r\n\t\r\n\t\t\t\t\tif ( geometry !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetBoundingSphere: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\t\r\n\t\t\t\tresult.center = this.center();\r\n\t\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar points = [\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3()\r\n\t\t\t];\r\n\t\r\n\t\t\treturn function ( matrix ) {\r\n\t\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\t\t\tthis.setFromPoints( points );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix3.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Matrix3 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix3,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\t\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\t\r\n\t\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\t\r\n\t\t\t// no inverse\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1.0 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar tmp, m = this.elements;\r\n\t\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMatrix: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\r\n\t\t\tthis.getInverse( m ).transpose();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\t\r\n\t\t\tvar m = this.elements;\r\n\t\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Matrix4 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix4,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tthis.elements.set( m.elements );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractPosition: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyPosition: function ( m ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0,       0,       0,       1\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractRotation: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( m ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\t\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\t\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\t\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\t\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\t\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\t\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\t\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\t\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\t\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\t\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\t\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\t\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\t\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\t\r\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\t\tte[ 4 ] = xy - wz;\r\n\t\t\tte[ 8 ] = xz + wy;\r\n\t\r\n\t\t\tte[ 1 ] = xy + wz;\r\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\t\tte[ 9 ] = yz - wx;\r\n\t\r\n\t\t\tte[ 2 ] = xz - wy;\r\n\t\t\tte[ 6 ] = yz + wx;\r\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar x, y, z;\r\n\t\r\n\t\t\treturn function ( eye, target, up ) {\r\n\t\r\n\t\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tz.subVectors( eye, target ).normalize();\r\n\t\r\n\t\t\t\tif ( z.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.z = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\tif ( x.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.x += 0.0001;\r\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ty.crossVectors( z, x );\r\n\t\r\n\t\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiply: function ( m, n ) {\r\n\t\r\n\t\t\tif ( n !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\t\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\t\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\t\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\t\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\t\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyToArray: function ( a, b, r ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tthis.multiplyMatrices( a, b );\r\n\t\r\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\t\treturn vector.applyProjection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector4: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateAxis: function ( v ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\r\n\t\t\tv.transformDirection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVector: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\t\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\t\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\t\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\t\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\t\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPosition: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetPosition: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( m, throwOnInvertible ) {\r\n\t\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\t\r\n\t\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( v ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateY: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateZ: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateByAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tscale: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\t\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\t\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationX: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0,  0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s,  c, 0,\r\n\t\t\t\t0, 0,  0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationY: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts,  c, 0, 0,\r\n\t\t\t\t0,  0, 1, 0,\r\n\t\t\t\t0,  0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\t\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\t return this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\t\tthis.scale( scale );\r\n\t\t\tthis.setPosition( position );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdecompose: function () {\r\n\t\r\n\t\t\tvar vector, matrix;\r\n\t\r\n\t\t\treturn function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\t\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) {\r\n\t\r\n\t\t\t\t\tsx = - sx;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\t\r\n\t\t\t\t// scale the rotation part\r\n\t\r\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\t\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\t\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\t\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\t\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\t\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\t\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\t\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\t\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\t\r\n\t\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\t\tvar ymin = - ymax;\r\n\t\t\tvar xmin = ymin * aspect;\r\n\t\t\tvar xmax = ymax * aspect;\r\n\t\r\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = right - left;\r\n\t\t\tvar h = top - bottom;\r\n\t\t\tvar p = far - near;\r\n\t\r\n\t\t\tvar x = ( right + left ) / w;\r\n\t\t\tvar y = ( top + bottom ) / h;\r\n\t\t\tvar z = ( far + near ) / p;\r\n\t\r\n\t\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( matrix ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\t\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Ray.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Ray = function ( origin, direction ) {\r\n\t\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Ray.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Ray,\r\n\t\r\n\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( ray ) {\r\n\t\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trecast: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( t ) {\r\n\t\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.subVectors( point, this.origin );\r\n\t\t\tvar directionDistance = result.dot( this.direction );\r\n\t\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\treturn result.copy( this.origin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSqToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\t\r\n\t\t\t\t// point behind the ray\r\n\t\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tdistanceSqToSegment: function () {\r\n\t\r\n\t\t\tvar segCenter = new THREE.Vector3();\r\n\t\t\tvar segDir = new THREE.Vector3();\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\t\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\t\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\t\r\n\t\t\t\tif ( det > 0 ) {\r\n\t\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\t\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\t\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\t\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 1\r\n\t\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 5\r\n\t\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 4\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 3\r\n\t\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 2\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\t\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn sqrDist;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectSphere: function () {\r\n\t\r\n\t\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( sphere, optionalTarget ) {\r\n\t\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\t\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\t\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\t\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\t\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\t\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\t\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\t\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, optionalTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisIntersectionPlane: function ( plane ) {\r\n\t\r\n\t\t\t// check if the ray lies on the plane first\r\n\t\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\t\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\t\r\n\t\t\t\t\treturn 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\t\r\n\t\t\t// Return if the ray never intersects the plane\r\n\t\r\n\t\t\treturn t >= 0 ? t :  null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectPlane: function ( plane, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\t\r\n\t\t\tif ( t === null ) {\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.at( t, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function () {\r\n\t\r\n\t\t\tvar v = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectBox: function ( box, optionalTarget ) {\r\n\t\r\n\t\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\t\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\t\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\t\r\n\t\t\tvar origin = this.origin;\r\n\t\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\t\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\t\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\t\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\t\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\t\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\t\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\t\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\t\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\t\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\t\r\n\t\t\t//return point closest to the ray (positive side)\r\n\t\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\t\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectTriangle: function () {\r\n\t\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\t\tvar edge1 = new THREE.Vector3();\r\n\t\t\tvar edge2 = new THREE.Vector3();\r\n\t\t\tvar normal = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\t\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\t\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\t\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\t\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\t\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\t\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\t\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\t\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\t\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\t\r\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.sub( this.origin );\r\n\t\t\tthis.direction.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( ray ) {\r\n\t\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Sphere.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Sphere = function ( center, radius ) {\r\n\t\r\n\t\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sphere.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Sphere,\r\n\t\r\n\t\tset: function ( center, radius ) {\r\n\t\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\t\treturn function ( points, optionalCenter ) {\r\n\t\r\n\t\t\t\tvar center = this.center;\r\n\t\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( sphere ) {\r\n\t\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\treturn ( this.radius <= 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\t\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.copy( point );\r\n\t\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\t\r\n\t\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetBoundingBox: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar box = optionalTarget || new THREE.Box3();\r\n\t\r\n\t\t\tbox.set( this.center, this.center );\r\n\t\t\tbox.expandByScalar( this.radius );\r\n\t\r\n\t\t\treturn box;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.center.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( sphere ) {\r\n\t\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Frustum.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\tthis.planes = [\r\n\t\r\n\t\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\t\r\n\t\t];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Frustum.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Frustum,\r\n\t\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( frustum ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\t\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsObject: function () {\r\n\t\r\n\t\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\t\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function () {\r\n\t\r\n\t\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\t\tp2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\t\r\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\t\r\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\t\r\n\t\t\t\t\t// if both outside plane, no intersection\r\n\t\r\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Plane.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Plane = function ( normal, constant ) {\r\n\t\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Plane.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Plane,\r\n\t\r\n\t\tset: function ( normal, constant ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCoplanarPoints: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\t\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( plane ) {\r\n\t\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\t\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\t\r\n\t\t},\r\n\t\r\n\t\torthoPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionLine: function ( line ) {\r\n\t\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\t\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\t\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectLine: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( line, optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\t\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\t\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn result.copy( line.start );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\t\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\t\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcoplanarPoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\t\tvar m1 = new THREE.Matrix3();\r\n\t\r\n\t\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\t\r\n\t\t\t\t// compute new normal based on theory here:\r\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\t\r\n\t\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( plane ) {\r\n\t\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Math.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Math = {\r\n\t\r\n\t\tgenerateUUID: function () {\r\n\t\r\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\t\r\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\t\tvar uuid = new Array( 36 );\r\n\t\t\tvar rnd = 0, r;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '-';\r\n\t\r\n\t\t\t\t\t} else if ( i === 14 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '4';\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn uuid.join( '' );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\t// Clamp value to range <a, b>\r\n\t\r\n\t\tclamp: function ( x, a, b ) {\r\n\t\r\n\t\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Clamp value to range <a, inf)\r\n\t\r\n\t\tclampBottom: function ( x, a ) {\r\n\t\r\n\t\t\treturn x < a ? a : x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\t\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\t\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\t\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\t\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\t\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <0, 1> with 16 bits of randomness\r\n\t\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\t\r\n\t\trandom16: function () {\r\n\t\r\n\t\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random integer from <low, high> interval\r\n\t\r\n\t\trandInt: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <low, high> interval\r\n\t\r\n\t\trandFloat: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\t\r\n\t\trandFloatSpread: function ( range ) {\r\n\t\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdegToRad: function () {\r\n\t\r\n\t\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\t\r\n\t\t\treturn function ( degrees ) {\r\n\t\r\n\t\t\t\treturn degrees * degreeToRadiansFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tradToDeg: function () {\r\n\t\r\n\t\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\t\r\n\t\t\treturn function ( radians ) {\r\n\t\r\n\t\t\t\treturn radians * radianToDegreesFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\tvalue --;\r\n\t\t\tvalue |= value >> 1;\r\n\t\t\tvalue |= value >> 2;\r\n\t\t\tvalue |= value >> 4;\r\n\t\t\tvalue |= value >> 8;\r\n\t\t\tvalue |= value >> 16;\r\n\t\t\tvalue ++;\r\n\t\r\n\t\t\treturn value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Spline.js\r\n\t\r\n\t/**\r\n\t * Spline from Tween.js, slightly optimized (and trashed)\r\n\t * http://sole.github.com/tween.js/examples/05_spline.html\r\n\t *\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Spline = function ( points ) {\r\n\t\r\n\t\tthis.points = points;\r\n\t\r\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\t\tpoint, intPoint, weight, w2, w3,\r\n\t\tpa, pb, pc, pd;\r\n\t\r\n\t\tthis.initFromArray = function ( a ) {\r\n\t\r\n\t\t\tthis.points = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPoint = function ( k ) {\r\n\t\r\n\t\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\t\r\n\t\t\tpa = this.points[ c[ 0 ] ];\r\n\t\t\tpb = this.points[ c[ 1 ] ];\r\n\t\t\tpc = this.points[ c[ 2 ] ];\r\n\t\t\tpd = this.points[ c[ 3 ] ];\r\n\t\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\t\r\n\t\t\treturn v3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getControlPointsArray = function () {\r\n\t\r\n\t\t\tvar i, p, l = this.points.length,\r\n\t\t\t\tcoords = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tp = this.points[ i ];\r\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn coords;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// approximate length by summing linear segments\r\n\t\r\n\t\tthis.getLength = function ( nSubDivisions ) {\r\n\t\r\n\t\t\tvar i, index, nSamples, position,\r\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tchunkLengths = [],\r\n\t\t\t\ttotalLength = 0;\r\n\t\r\n\t\t\t// first point has 0 length\r\n\t\r\n\t\t\tchunkLengths[ 0 ] = 0;\r\n\t\r\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\t\r\n\t\t\tnSamples = this.points.length * nSubDivisions;\r\n\t\r\n\t\t\toldPosition.copy( this.points[ 0 ] );\r\n\t\r\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\t\r\n\t\t\t\tindex = i / nSamples;\r\n\t\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\ttmpVec.copy( position );\r\n\t\r\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\t\r\n\t\t\t\toldPosition.copy( position );\r\n\t\r\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\r\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\t\r\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\t\toldIntPoint = intPoint;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last point ends with total length\r\n\t\r\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\t\r\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\t\r\n\t\t\tvar i, j,\r\n\t\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\t\trealDistance,\r\n\t\t\t\tsampling, position,\r\n\t\t\t\tnewpoints = [],\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tsl = this.getLength();\r\n\t\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\t\r\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\t\r\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\t\r\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\t\r\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\t\r\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\t\r\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\t\r\n\t\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.points = newpoints;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Triangle.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Triangle = function ( a, b, c ) {\r\n\t\r\n\t\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Triangle.normal = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tresult.subVectors( c, b );\r\n\t\t\tv0.subVectors( a, b );\r\n\t\t\tresult.cross( v0 );\r\n\t\r\n\t\t\tvar resultLengthSq = result.lengthSq();\r\n\t\t\tif ( resultLengthSq > 0 ) {\r\n\t\r\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.set( 0, 0, 0 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tTHREE.Triangle.barycoordFromPoint = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tv0.subVectors( c, a );\r\n\t\t\tv1.subVectors( b, a );\r\n\t\t\tv2.subVectors( point, a );\r\n\t\r\n\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\tvar dot12 = v1.dot( v2 );\r\n\t\r\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t// collinear or singular triangle\r\n\t\t\tif ( denom === 0 ) {\r\n\t\r\n\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar invDenom = 1 / denom;\r\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\t\r\n\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\treturn result.set( 1 - u - v, v, u );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.containsPoint = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c ) {\r\n\t\r\n\t\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\t\r\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Triangle,\r\n\t\r\n\t\tset: function ( a, b, c ) {\r\n\t\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\t\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( triangle ) {\r\n\t\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tarea: function () {\r\n\t\r\n\t\t\tvar v0 = new THREE.Vector3();\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\t\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmidpoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormal: function ( optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplane: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Plane();\r\n\t\r\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( triangle ) {\r\n\t\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Clock.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Clock = function ( autoStart ) {\r\n\t\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\t\r\n\t\tthis.running = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Clock.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Clock,\r\n\t\r\n\t\tstart: function () {\r\n\t\r\n\t\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.running = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetElapsedTime: function () {\r\n\t\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetDelta: function () {\r\n\t\r\n\t\t\tvar diff = 0;\r\n\t\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\t\r\n\t\t\t\tthis.start();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.running ) {\r\n\t\r\n\t\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\t\tthis.oldTime = newTime;\r\n\t\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn diff;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/EventDispatcher.js\r\n\t\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\t\r\n\tTHREE.EventDispatcher = function () {};\r\n\t\r\n\tTHREE.EventDispatcher.prototype = {\r\n\t\r\n\t\tconstructor: THREE.EventDispatcher,\r\n\t\r\n\t\tapply: function ( object ) {\r\n\t\r\n\t\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\t\r\n\t\t\t\tlisteners[ type ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\t\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\thasEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\t\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispatchEvent: function ( event ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tevent.target = this;\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar length = listenerArray.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Raycaster.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://exocortex.com/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\t\r\n\t( function ( THREE ) {\r\n\t\r\n\t\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\t\r\n\t\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\tthis.near = near || 0;\r\n\t\t\tthis.far = far || Infinity;\r\n\t\r\n\t\t\tthis.params = {\r\n\t\t\t\tMesh: {},\r\n\t\t\t\tLine: {},\r\n\t\t\t\tLOD: {},\r\n\t\t\t\tPoints: { threshold: 1 },\r\n\t\t\t\tSprite: {}\r\n\t\t\t};\r\n\t\r\n\t\t\tObject.defineProperties( this.params, {\r\n\t\t\t\tPointCloud: {\r\n\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\t\treturn this.Points;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction descSort( a, b ) {\r\n\t\r\n\t\t\treturn a.distance - b.distance;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tobject.raycast( raycaster, intersects );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tvar children = object.children;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tTHREE.Raycaster.prototype = {\r\n\t\r\n\t\t\tconstructor: THREE.Raycaster,\r\n\t\r\n\t\t\tlinePrecision: 1,\r\n\t\r\n\t\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\t\tthis.ray.set( origin, direction );\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tsetFromCamera: function ( coords, camera ) {\r\n\t\r\n\t\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\r\n\t\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObject: function ( object, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tintersectObject( object, this, intersects, recursive );\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObjects: function ( objects, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}( THREE ) );\r\n\t\r\n\t// File:src/core/Object3D.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\t\r\n\tTHREE.Object3D = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\t\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\t\r\n\t\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar rotation = new THREE.Euler();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\t\r\n\t\tvar onRotationChange = function () {\r\n\t\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar onQuaternionChange = function () {\r\n\t\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t\tthis.rotationAutoUpdate = true;\r\n\t\r\n\t\tthis.matrix = new THREE.Matrix4();\r\n\t\tthis.matrixWorld = new THREE.Matrix4();\r\n\t\r\n\t\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\t\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\t\r\n\t\tthis.userData = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\t\r\n\tTHREE.Object3D.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Object3D,\r\n\t\r\n\t\tget eulerOrder () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\treturn this.rotation.order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset eulerOrder ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\tthis.rotation.order = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget useQuaternion () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset useQuaternion ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset renderDepth ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\t\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// assumes q is normalized\r\n\t\r\n\t\t\tthis.quaternion.copy( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateOnAxis: function () {\r\n\t\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar q1 = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( axis, angle ) {\r\n\t\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateOnAxis: function () {\r\n\t\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( axis, distance ) {\r\n\t\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\t\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( distance, axis ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlocalToWorld: function ( vector ) {\r\n\t\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tworldToLocal: function () {\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tadd: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object === this ) {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Object3D ) {\r\n\t\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\t\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\t\r\n\t\t\t\tthis.children.push( object );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tobject.parent = null;\r\n\t\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\t\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetChildByName: function ( name ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectById: function ( id ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByName: function ( name ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\t\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\t\r\n\t\t\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn object;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn undefined;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldPosition: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldQuaternion: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldRotation: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldScale: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldDirection: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\traycast: function () {},\r\n\t\r\n\t\ttraverse: function ( callback ) {\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseVisible: function ( callback ) {\r\n\t\r\n\t\t\tif ( this.visible === false ) return;\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\t\r\n\t\t\tvar parent = this.parent;\r\n\t\r\n\t\t\tif ( parent !== null ) {\r\n\t\r\n\t\t\t\tcallback( parent );\r\n\t\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrix: function () {\r\n\t\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\t\r\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\t\r\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\t\r\n\t\t\t\tif ( this.parent === null ) {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\t\t\tforce = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// update children\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar isRootObject = ( meta === undefined );\r\n\t\r\n\t\t\tvar data = {};\r\n\t\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tdata.metadata = {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// standard Object3D serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\t\r\n\t\t\tdata.matrix = this.matrix.toArray();\r\n\t\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.children = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {};\r\n\t\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.object = data;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache ( cache ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\t\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( recursive ) {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source, recursive ) {\r\n\t\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.up.copy( source.up );\r\n\t\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\t\r\n\t\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\t\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\t\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\t\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\t\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\t\r\n\tTHREE.Object3DIdCount = 0;\r\n\t\r\n\t// File:src/core/Face3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\t\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\r\n\t\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\t\r\n\t\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\t\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Face3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Face3,\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\t\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\t\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Face4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/BufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.array.length / this.itemSize;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyArray: function ( array ) {\r\n\t\r\n\t\t\tthis.array.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar color = colors[ i ];\r\n\t\r\n\t\t\t\tif ( color === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new THREE.Color();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyIndicesArray: function ( indices ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar index = indices[ i ];\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\t\tarray[ offset ++ ] = index.c;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Deprecated\r\n\t\r\n\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\n\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InterleavedBuffer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBuffer,\r\n\t\r\n\t\tget length () {\r\n\t\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count () {\r\n\t\r\n\t\t\treturn this.array.length / this.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedInterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\n\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.InterleavedBufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.data.array.length / this.data.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Geometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Geometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\t\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphColors = [];\r\n\t\tthis.morphNormals = [];\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\tthis.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Geometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Geometry,\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tvar vertices = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\t\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\t\r\n\t\t\tvar tempNormals = [];\r\n\t\t\tvar tempUVs = [];\r\n\t\t\tvar tempUVs2 = [];\r\n\t\r\n\t\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\t\r\n\t\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t\t\tif ( normals !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar addFace = function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\t\r\n\t\t\t\tscope.faces.push( face );\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( indices !== undefined ) {\r\n\t\r\n\t\t\t\tvar groups = geometry.groups;\r\n\t\r\n\t\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\t\r\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\t\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\t\r\n\t\t\tthis.applyMatrix( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\tcb.normalize();\r\n\t\r\n\t\t\t\tface.normal.copy( cb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\t\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\t\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( areaWeighted ) {\r\n\t\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\t\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ].normalize();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeMorphNormals: function () {\r\n\t\r\n\t\t\tvar i, il, f, fl, face;\r\n\t\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\t\r\n\t\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t// create on first access\r\n\t\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\t\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\t\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\t\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\t\r\n\t\t\t\t// set vertices to morph target\r\n\t\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t// compute morph normals\r\n\t\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\t\r\n\t\t\t\t// store morph normals\r\n\t\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore original normals\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeLineDistances: function () {\r\n\t\r\n\t\t\tvar d = 0;\r\n\t\t\tvar vertices = this.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tif ( i > 0 ) {\r\n\t\r\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lineDistances[ i ] = d;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normalMatrix,\r\n\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\tvertices1 = this.vertices,\r\n\t\t\tvertices2 = geometry.vertices,\r\n\t\t\tfaces1 = this.faces,\r\n\t\t\tfaces2 = geometry.faces,\r\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\t\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\t\r\n\t\t\tif ( matrix !== undefined ) {\r\n\t\r\n\t\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// vertices\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\t\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\t\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// faces\r\n\t\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\t\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\t\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\t\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uvs\r\n\t\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\t\r\n\t\t\t\tif ( uv === undefined ) {\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmergeMesh: function ( mesh ) {\r\n\t\r\n\t\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\t\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\t\r\n\t\tmergeVertices: function () {\r\n\t\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\t\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\t\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ i ];\r\n\t\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\t\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\t\r\n\t\t\t\tvar dupIndex = - 1;\r\n\t\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\t\r\n\t\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\t\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\t\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Use unique set of vertices\r\n\t\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Geometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertices = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\r\n\t\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\t\r\n\t\t\t\tvar faceType = 0;\r\n\t\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\t\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\t\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\t\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\t\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\t\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getColorIndex( color ) {\r\n\t\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\t\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\t\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\t\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\t\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\t\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = {};\r\n\t\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\t\tvar vertices = source.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = source.faces;\r\n\t\r\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\t\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\t\r\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\t\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\t\r\n\tTHREE.GeometryIdCount = 0;\r\n\t\r\n\t// File:src/core/DirectGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'DirectGeometry';\r\n\t\r\n\t\tthis.indices = [];\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.morphTargets = {};\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\t// this.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.DirectGeometry,\r\n\t\r\n\t\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\t\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\t\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex;\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t// materials\r\n\t\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\t\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\t\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.groups = groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\t\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsPosition = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\t\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsNormal = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skins\r\n\t\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\t\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar color = face.color;\r\n\t\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// morphs\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// skins\r\n\t\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\t\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\t\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeGroups( geometry );\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\t\r\n\t// File:src/core/BufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\t\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\r\n\t\tthis.morphAttributes = {};\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometry,\r\n\t\r\n\t\taddIndex: function ( index ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetIndex: function () {\r\n\t\r\n\t\t\treturn this.index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetIndex: function ( index ) {\r\n\t\r\n\t\t\tthis.index = index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\t\r\n\t\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( name === 'index' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetAttribute: function ( name ) {\r\n\t\r\n\t\t\treturn this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveAttribute: function ( name ) {\r\n\t\r\n\t\t\tdelete this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget drawcalls() {\r\n\t\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget offsets() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddDrawCall: function ( start, count, indexOffset ) {\r\n\t\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearDrawCalls: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\t\r\n\t\t\tthis.groups.push( {\r\n\t\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearGroups: function () {\r\n\t\r\n\t\t\tthis.groups = [];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\t\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar position = this.attributes.position;\r\n\t\r\n\t\t\tif ( position !== undefined ) {\r\n\t\r\n\t\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normal = this.attributes.normal;\r\n\t\r\n\t\t\tif ( normal !== undefined ) {\r\n\t\r\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromObject: function ( object ) {\r\n\t\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\t\r\n\t\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateFromObject: function ( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\t\r\n\t\t\t\tif ( direct === undefined ) {\r\n\t\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t\tgeometry = direct;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.position;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.normal;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.color;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.lineDistance;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\t\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\t\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\t\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\t\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\t\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.indices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// groups\r\n\t\r\n\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\r\n\t\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\t\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning\r\n\t\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\t\tbb.makeEmpty();\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbb.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tbox.makeEmpty();\r\n\t\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbox.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tbox.center( center );\r\n\t\r\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\t\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\t// backwards compatibility\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( attributes.position ) {\r\n\t\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// reset existing normals to zero\r\n\t\r\n\t\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\tvar vA, vB, vC,\r\n\t\r\n\t\t\t\tpA = new THREE.Vector3(),\r\n\t\t\t\tpB = new THREE.Vector3(),\r\n\t\t\t\tpC = new THREE.Vector3(),\r\n\t\r\n\t\t\t\tcb = new THREE.Vector3(),\r\n\t\t\t\tab = new THREE.Vector3();\r\n\t\r\n\t\t\t\t// indexed elements\r\n\t\r\n\t\t\t\tif ( index ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tif ( groups.length === 0 ) {\r\n\t\r\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ j ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\t\r\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.normalizeNormals();\r\n\t\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeOffsets: function ( size ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, offset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\t\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\t\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\t\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalizeNormals: function () {\r\n\t\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\r\n\t\t\tvar x, y, z, n;\r\n\t\r\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\tx = normals[ i ];\r\n\t\t\t\ty = normals[ i + 1 ];\r\n\t\t\t\tz = normals[ i + 2 ];\r\n\t\r\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\t\r\n\t\t\t\tnormals[ i ] *= n;\r\n\t\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\t\tnormals[ i + 2 ] *= n;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard BufferGeometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = { attributes: {} };\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\t\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\t\r\n\t\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tvar index = source.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = source.attributes;\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = source.groups;\r\n\t\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\t\r\n\tTHREE.BufferGeometry.MaxIndex = 65535;\r\n\t\r\n\t// File:src/core/InstancedBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferGeometry = function () {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\t\r\n\t\tthis.groups.push( {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tinstances: instances\r\n\t\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tvar index = source.index;\r\n\t\r\n\t\tif ( index !== null ) {\r\n\t\r\n\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar attributes = source.attributes;\r\n\t\r\n\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar groups = source.groups;\r\n\t\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\t\r\n\t// File:src/cameras/Camera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.Camera = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Camera';\r\n\t\r\n\t\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\t\tthis.projectionMatrix = new THREE.Matrix4();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\t\r\n\tTHREE.Camera.prototype.getWorldDirection = function () {\r\n\t\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.lookAt = function () {\r\n\t\r\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\t\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\treturn function ( vector ) {\r\n\t\r\n\t\t\tm1.lookAt( this.position, vector, this.up );\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/CubeCamera.js\r\n\t\r\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'CubeCamera';\r\n\t\r\n\t\tvar fov = 90, aspect = 1;\r\n\t\r\n\t\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\t\r\n\t\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\t\r\n\t\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\t\r\n\t\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\t\r\n\t\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\t\r\n\t\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\t\r\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\t\r\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\t\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\t\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = false;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 0;\r\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 1;\r\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 2;\r\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 3;\r\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 4;\r\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 5;\r\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\t\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\t\r\n\t// File:src/cameras/OrthographicCamera.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'OrthographicCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\t\r\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/PerspectiveCamera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\t\r\n\t\r\n\t/**\r\n\t * Uses Focal Length (in mm) to estimate and set FOV\r\n\t * 35mm (full-frame) camera is used if frame size is not specified;\r\n\t * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\t\r\n\t\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\t\r\n\t\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   var w = 1920;\r\n\t *   var h = 1080;\r\n\t *   var fullWidth = w * 3;\r\n\t *   var fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\t\r\n\t\tthis.fullWidth = fullWidth;\r\n\t\tthis.fullHeight = fullHeight;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\t\r\n\t\tif ( this.fullWidth ) {\r\n\t\r\n\t\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\t\tvar bottom = - top;\r\n\t\t\tvar left = aspect * bottom;\r\n\t\t\tvar right = aspect * top;\r\n\t\t\tvar width = Math.abs( right - left );\r\n\t\t\tvar height = Math.abs( top - bottom );\r\n\t\r\n\t\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\t\tthis.near,\r\n\t\t\t\tthis.far\r\n\t\t\t);\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.aspect = this.aspect;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/Light.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Light = function ( color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Light';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Light.prototype.constructor = THREE.Light;\r\n\t\r\n\tTHREE.Light.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/lights/AmbientLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AmbientLight = function ( color ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'AmbientLight';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\t\r\n\tTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/DirectionalLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLight = function ( color, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'DirectionalLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\r\n\t\tthis.shadowCameraLeft = - 500;\r\n\t\tthis.shadowCameraRight = 500;\r\n\t\tthis.shadowCameraTop = 500;\r\n\t\tthis.shadowCameraBottom = - 500;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\t\r\n\tTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\r\n\t\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\t\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\t\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\t\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/HemisphereLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, skyColor );\r\n\t\r\n\t\tthis.type = 'HemisphereLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.groundColor = new THREE.Color( groundColor );\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\t\r\n\tTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\t\tthis.intensity = source.intensity;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.groundColor = this.groundColor.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/PointLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'PointLight';\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\t\r\n\tTHREE.PointLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/SpotLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'SpotLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\tthis.shadowCameraFov = 50;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\t\r\n\tTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.exponent = source.exponent;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.angle = this.angle;\r\n\t\tdata.object.exponent = this.exponent;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Cache.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Cache = {\r\n\t\r\n\t\tenabled: false,\r\n\t\r\n\t\tfiles: {},\r\n\t\r\n\t\tadd: function ( key, file ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\t\r\n\t\t\tthis.files[ key ] = file;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( key ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\t\r\n\t\t\treturn this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( key ) {\r\n\t\r\n\t\t\tdelete this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclear: function () {\r\n\t\r\n\t\t\tthis.files = {};\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Loader.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Loader = function () {\r\n\t\r\n\t\tthis.onLoadStart = function () {};\r\n\t\tthis.onLoadProgress = function () {};\r\n\t\tthis.onLoadComplete = function () {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Loader,\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\textractUrlBase: function ( url ) {\r\n\t\r\n\t\t\tvar parts = url.split( '/' );\r\n\t\r\n\t\t\tif ( parts.length === 1 ) return './';\r\n\t\r\n\t\t\tparts.pop();\r\n\t\r\n\t\t\treturn parts.join( '/' ) + '/';\r\n\t\r\n\t\t},\r\n\t\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\tvar array = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\t\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcreateMaterial: ( function () {\r\n\t\r\n\t\t\tvar imageLoader;\r\n\t\r\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\t\r\n\t\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\t\r\n\t\t\t\tfunction nearest_pow2( n ) {\r\n\t\r\n\t\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\t\r\n\t\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\t\r\n\t\t\t\t\tvar texture;\r\n\t\r\n\t\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\t\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\t\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture = new THREE.Texture();\r\n\t\r\n\t\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\t\r\n\t\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = canvas;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = image;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.sourceFile = sourceFile;\r\n\t\r\n\t\t\t\t\tif ( repeat ) {\r\n\t\r\n\t\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\t\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( offset ) {\r\n\t\r\n\t\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( wrap ) {\r\n\t\r\n\t\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( anisotropy ) {\r\n\t\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\twhere[ name ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction rgb2hex( rgb ) {\r\n\t\r\n\t\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// defaults\r\n\t\r\n\t\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\t\tvar mpars = {};\r\n\t\r\n\t\t\t\t// parameters from model file\r\n\t\r\n\t\t\t\tif ( m.shading ) {\r\n\t\r\n\t\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\t\r\n\t\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.transparent !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = m.transparent;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthTest !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthTest = m.depthTest;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthWrite !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.visible !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.visible = m.visible;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.flipSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.BackSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.doubleSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.wireframe = m.wireframe;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.vertexColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\t\r\n\t\t\t\t\t} else if ( m.vertexColors ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// colors\r\n\t\r\n\t\t\t\tif ( m.colorDiffuse ) {\r\n\t\r\n\t\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\t\r\n\t\t\t\t} else if ( m.DbgColor ) {\r\n\t\r\n\t\t\t\t\tmpars.color = m.DbgColor;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.colorEmissive ) {\r\n\t\r\n\t\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\t\r\n\t\t\t\t\tif ( m.colorSpecular ) {\r\n\t\r\n\t\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.specularCoef ) {\r\n\t\r\n\t\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// modifiers\r\n\t\r\n\t\t\t\tif ( m.transparency !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\t\tm.opacity = m.transparency;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.opacity = m.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// textures\r\n\t\r\n\t\t\t\tif ( texturePath ) {\r\n\t\r\n\t\t\t\t\tif ( m.mapDiffuse ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapLight ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAO ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapBump ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapNormal ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapSpecular ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAlpha ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( m.mapBumpScale ) {\r\n\t\r\n\t\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.mapNormalFactor ) {\r\n\t\r\n\t\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\t\r\n\t\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\t\r\n\t\t\t\treturn material;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.Handlers = {\r\n\t\r\n\t\thandlers: [],\r\n\t\r\n\t\tadd: function ( regex, loader ) {\r\n\t\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( file ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\t\r\n\t\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\t\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\t\r\n\t\t\t\t\treturn loader;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/XHRLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.XHRLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.XHRLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.XHRLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\trequest.open( 'GET', url, true );\r\n\t\r\n\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this.response );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this.response );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\t\r\n\t\t\trequest.send( null );\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\treturn request;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetResponseType: function ( value ) {\r\n\t\r\n\t\t\tthis.responseType = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetWithCredentials: function ( value ) {\r\n\t\r\n\t\t\tthis.withCredentials = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ImageLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ImageLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImageLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ImageLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar image = document.createElement( 'img' );\r\n\t\r\n\t\t\timage.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\timage.src = url;\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/JSONLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.JSONLoader = function ( manager ) {\r\n\t\r\n\t\tif ( typeof manager === 'boolean' ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\t\tmanager = undefined;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\tthis.withCredentials = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.JSONLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.JSONLoader,\r\n\t\r\n\t\t// Deprecated\r\n\t\t\r\n\t\tget statusDomElement () {\r\n\t\r\n\t\t\tif ( this._statusDomElement === undefined ) {\r\n\t\r\n\t\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\t\treturn this._statusDomElement;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tload: function( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tvar json = JSON.parse( text );\r\n\t\t\t\tvar metadata = json.metadata;\r\n\t\r\n\t\t\t\tif ( metadata !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'object' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\t\tonLoad( object.geometry, object.materials );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, texturePath ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.Geometry(),\r\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\t\r\n\t\t\tparseModel( scale );\r\n\t\r\n\t\t\tparseSkin();\r\n\t\t\tparseMorphing( scale );\r\n\t\r\n\t\t\tgeometry.computeFaceNormals();\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t\t\tfunction parseModel( scale ) {\r\n\t\r\n\t\t\t\tfunction isBitSet( value, position ) {\r\n\t\r\n\t\t\t\t\treturn value & ( 1 << position );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar i, j, fi,\r\n\t\r\n\t\t\t\toffset, zLength,\r\n\t\r\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\t\r\n\t\t\t\ttype,\r\n\t\t\t\tisQuad,\r\n\t\t\t\thasMaterial,\r\n\t\t\t\thasFaceVertexUv,\r\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\t\thasFaceColor, hasFaceVertexColor,\r\n\t\r\n\t\t\tvertex, face, faceA, faceB, hex, normal,\r\n\t\r\n\t\t\t\tuvLayer, uv, u, v,\r\n\t\r\n\t\t\t\tfaces = json.faces,\r\n\t\t\t\tvertices = json.vertices,\r\n\t\t\t\tnormals = json.normals,\r\n\t\t\t\tcolors = json.colors,\r\n\t\r\n\t\t\t\tnUvLayers = 0;\r\n\t\r\n\t\t\t\tif ( json.uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t// disregard empty arrays\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = vertices.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\tvertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\t\r\n\t\t\t\t\tgeometry.vertices.push( vertex );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = faces.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\ttype = faces[ offset ++ ];\r\n\t\r\n\t\r\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\t\r\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\t\r\n\t\t\t\t\tif ( isQuad ) {\r\n\t\r\n\t\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\toffset += 4;\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\t\tgeometry.faces.push( faceB );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( face );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseSkin() {\r\n\t\r\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\t\r\n\t\t\t\tif ( json.skinWeights ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.skinIndices ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.bones = json.bones;\r\n\t\r\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// could change this to json.animations[0] or remove completely\r\n\t\r\n\t\t\t\tgeometry.animation = json.animation;\r\n\t\t\t\tgeometry.animations = json.animations;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseMorphing( scale ) {\r\n\t\r\n\t\t\t\tif ( json.morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\t\r\n\t\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\t\r\n\t\t\t\t\t\t\tdstVertices.push( vertex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.morphColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\t\r\n\t\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\t\r\n\t\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\t\tdstColors.push( color );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\t\r\n\t\t\t\treturn { geometry: geometry };\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\t\r\n\t\t\t\treturn { geometry: geometry, materials: materials };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/LoadingManager.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\t\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\t\r\n\t\tthis.itemStart = function ( url ) {\r\n\t\r\n\t\t\titemsTotal ++;\r\n\t\r\n\t\t\tif ( isLoading === false ) {\r\n\t\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tisLoading = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemEnd = function ( url ) {\r\n\t\r\n\t\t\titemsLoaded ++;\r\n\t\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\t\r\n\t\t\t\tisLoading = false;\r\n\t\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onLoad();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemError = function ( url ) {\r\n\t\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onError( url );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\t\r\n\t// File:src/loaders/BufferGeometryLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometryLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometryLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometryLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\t\tvar index = json.data.index;\r\n\t\r\n\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = json.data.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\t\r\n\t\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\t\r\n\t\t\tif ( groups !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\t\r\n\t\t\t\tvar center = new THREE.Vector3();\r\n\t\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/MaterialLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MaterialLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MaterialLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MaterialLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTextures: function ( value ) {\r\n\t\r\n\t\t\tthis.textures = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTexture: function ( name ) {\r\n\t\r\n\t\t\tvar textures = this.textures;\r\n\t\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar material = new THREE[ json.type ];\r\n\t\t\tmaterial.uuid = json.uuid;\r\n\t\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\r\n\t\t\t// for PointsMaterial\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\t\r\n\t\t\t// maps\r\n\t\r\n\t\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\t\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\t\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\t\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\t\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\t\r\n\t\t\tif ( json.envMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\t\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\t\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\t\r\n\t\t\t// MeshFaceMaterial\r\n\t\r\n\t\t\tif ( json.materials !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ObjectLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ObjectLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.texturePath = '';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ObjectLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ObjectLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tif ( this.texturePath === '' ) {\r\n\t\r\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\t\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\t\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn object;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseGeometries: function ( json ) {\r\n\t\r\n\t\t\tvar geometries = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TextGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\t\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometries;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\t\r\n\t\t\tvar materials = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\t\tmaterials[ material.uuid ] = material;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn materials;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\t\r\n\t\t\tfunction loadImage( url ) {\r\n\t\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\t\treturn loader.load( url, function () {\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\t\r\n\t\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\t\r\n\t\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\t\r\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn images;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseTextures: function ( json, images ) {\r\n\t\r\n\t\t\tfunction parseConstant( value ) {\r\n\t\r\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\t\r\n\t\t\t\treturn THREE[ value ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar textures = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\t\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseObject: function () {\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( data, geometries, materials ) {\r\n\t\r\n\t\t\t\tvar object;\r\n\t\r\n\t\t\t\tvar getGeometry = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn geometries[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tvar getMaterial = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn materials[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\tcase 'Scene':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Scene();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PerspectiveCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'OrthographicCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'AmbientLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Mesh':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'LOD':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.LOD();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Line':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointCloud':\r\n\t\t\t\t\tcase 'Points':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Sprite':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Group':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Group();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Object3D();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.uuid = data.uuid;\r\n\t\r\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\t\tif ( data.matrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\t\r\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\r\n\t\t\t\tif ( data.children !== undefined ) {\r\n\t\r\n\t\t\t\t\tfor ( var child in data.children ) {\r\n\t\r\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.type === 'LOD' ) {\r\n\t\r\n\t\t\t\t\tvar levels = data.levels;\r\n\t\r\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\t\r\n\t\t\t\t\t\tif ( child !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn object;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/TextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.TextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.TextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tonLoad( texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/BinaryTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\t\r\n\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BinaryTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BinaryTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture();\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\t\r\n\t\t\t\tif ( ! texData ) return;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.image ) {\r\n\t\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\t\r\n\t\t\t\t} else if ( undefined !== texData.data ) {\r\n\t\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.format ) {\r\n\t\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\tif ( undefined !== texData.type ) {\r\n\t\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\t\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\t\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/CompressedTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\t\r\n\tTHREE.CompressedTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.CompressedTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.CompressedTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar texture = new THREE.CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\t\r\n\t\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\t\r\n\t\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\t\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\t\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\t\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\t\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/Material.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Material = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\t\r\n\t\tthis.side = THREE.FrontSide;\r\n\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\t\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = THREE.AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\r\n\t\tthis.depthFunc = THREE.LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\t\r\n\t\tthis.colorWrite = true;\r\n\t\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\t\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\t\r\n\t\tthis.alphaTest = 0;\r\n\t\r\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis._needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Material.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Material,\r\n\t\r\n\t\tget needsUpdate () {\r\n\t\r\n\t\t\treturn this._needsUpdate;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.update();\r\n\t\r\n\t\t\tthis._needsUpdate = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetValues: function ( values ) {\r\n\t\r\n\t\t\tif ( values === undefined ) return;\r\n\t\r\n\t\t\tfor ( var key in values ) {\r\n\t\r\n\t\t\t\tvar newValue = values[ key ];\r\n\t\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\t\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\t\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\t\r\n\t\t\t\t} else if ( key === 'overdraw' ) {\r\n\t\r\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\r\n\t\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\t\r\n\t\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\t\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.side = source.side;\r\n\t\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\t\r\n\t\t\tthis.blending = source.blending;\r\n\t\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\t\r\n\t\t\tthis.precision = source.precision;\r\n\t\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\t\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\r\n\t\t\tthis.overdraw = source.overdraw;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'update' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Deprecated\r\n\t\r\n\t\tget wrapAround () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset wrapAround ( boolean ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget wrapRGB () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\treturn new THREE.Color();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\t\r\n\tTHREE.MaterialIdCount = 0;\r\n\t\r\n\t// File:src/materials/LineBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\",\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/LineDashedMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>,\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineDashedMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\t\r\n\t\tthis.vertexColors = false;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshLambertMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshPhongMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\tthis.specular = new THREE.Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\t\r\n\t\tthis.metal = false;\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.emissiveMap = null;\r\n\t\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\t\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\t\r\n\t\tthis.metal = source.metal;\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\t\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\t\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshDepthMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshNormalMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  shading: THREE.FlatShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MultiMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MultiMaterial = function ( materials ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.type = 'MultiMaterial';\r\n\t\r\n\t\tthis.materials = materials instanceof Array ? materials : [];\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MultiMaterial.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MultiMaterial,\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.2,\r\n\t\t\t\t\ttype: 'material',\r\n\t\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t\t},\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tmaterials: []\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.visible = this.visible;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\tvar material = new this.constructor();\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\t\r\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterial.visible = this.visible;\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\t\r\n\t// File:src/materials/PointsMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  vertexColors: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.PointsMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'PointsMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\t\r\n\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.PointCloudMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/ShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.ShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'ShaderMaterial';\r\n\t\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\t\r\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\t\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\t\r\n\t\tthis.derivatives = false; // set to use derivatives\r\n\t\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\t\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\r\n\t\tif ( parameters !== undefined ) {\r\n\t\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setValues( parameters );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\t\r\n\t\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\t\r\n\t\tthis.attributes = source.attributes;\r\n\t\tthis.defines = source.defines;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.lights = source.lights;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\tthis.derivatives = source.derivatives;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.uniforms = this.uniforms;\r\n\t\tdata.attributes = this.attributes;\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/RawShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.RawShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.ShaderMaterial.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\n\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\t// File:src/materials/SpriteMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *\tuvOffset: new THREE.Vector2(),\r\n\t *\tuvScale: new THREE.Vector2(),\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.SpriteMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'SpriteMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.rotation = 0;\r\n\t\r\n\t\tthis.fog = false;\r\n\t\r\n\t\t// set parameters\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\t\r\n\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.rotation = source.rotation;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/textures/Texture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.sourceFile = '';\r\n\t\r\n\t\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\t\r\n\t\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\t\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\t\r\n\t\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\t\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Texture.DEFAULT_IMAGE = undefined;\r\n\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\t\r\n\tTHREE.Texture.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Texture,\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\t\r\n\t\t\tthis.mapping = source.mapping;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getDataURL( image ) {\r\n\t\r\n\t\t\t\tvar canvas;\r\n\t\r\n\t\t\t\tif ( image.toDataURL !== undefined ) {\r\n\t\r\n\t\t\t\t\tcanvas = image;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\t\tcanvas.height = image.height;\r\n\t\r\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\t\r\n\t\t\t\tmapping: this.mapping,\r\n\t\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\t\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( this.image !== undefined ) {\r\n\t\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\t\r\n\t\t\t\tvar image = this.image;\r\n\t\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\t\r\n\t\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toutput.image = image.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransformUv: function ( uv ) {\r\n\t\r\n\t\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\t\r\n\t\t\tuv.multiply( this.repeat );\r\n\t\t\tuv.add( this.offset );\r\n\t\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.flipY ) {\r\n\t\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\t\r\n\tTHREE.TextureIdCount = 0;\r\n\t\r\n\t// File:src/textures/CanvasTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\t\r\n\t// File:src/textures/CubeTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\t\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.images = images;\r\n\t\tthis.flipY = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\t\r\n\tTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.images = source.images;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/textures/CompressedTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\t\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\t\r\n\t\tthis.flipY = false;\r\n\t\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\t\r\n\t// File:src/textures/DataTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\t\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps  = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\t\r\n\t// File:src/textures/VideoTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar update = function () {\r\n\t\r\n\t\t\trequestAnimationFrame( update );\r\n\t\r\n\t\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\t\r\n\t\t\t\tscope.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tupdate();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\t\r\n\t// File:src/objects/Group.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Group = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Group';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Group.prototype.constructor = THREE.Group;\r\n\t// File:src/objects/Points.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Points = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Points';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Points.prototype.constructor = THREE.Points;\r\n\t\r\n\tTHREE.Points.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar object = this;\r\n\t\t\tvar geometry = object.geometry;\r\n\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\t\tfunction testPoint( point, index ) {\r\n\t\r\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\t\r\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\t\r\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tobject: object\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Points.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.PointCloud = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystem = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Line.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Line = function ( geometry, material, mode ) {\r\n\t\r\n\t\tif ( mode === 1 ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\t\treturn new THREE.LineSegments( geometry, material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Line';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Line.prototype.constructor = THREE.Line;\r\n\t\r\n\tTHREE.Line.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tvar vStart = new THREE.Vector3();\r\n\t\t\tvar vEnd = new THREE.Vector3();\r\n\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\t\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\t\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Line.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.LineStrip = 0;\r\n\tTHREE.LinePieces = 1;\r\n\t\r\n\t// File:src/objects/LineSegments.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LineSegments = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Line.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'LineSegments';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\n\tTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\t\r\n\t// File:src/objects/Mesh.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\t\r\n\tTHREE.Mesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Mesh';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t\tthis.updateMorphTargets();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\t\r\n\tTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\t\r\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\t\r\n\t\t\tthis.morphTargetBase = - 1;\r\n\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\tthis.morphTargetDictionary = {};\r\n\t\r\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\t\r\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\t\r\n\t\t\treturn this.morphTargetDictionary[ name ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\t\r\n\t\treturn 0;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Mesh.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\tvar vA = new THREE.Vector3();\r\n\t\tvar vB = new THREE.Vector3();\r\n\t\tvar vC = new THREE.Vector3();\r\n\t\r\n\t\tvar tempA = new THREE.Vector3();\r\n\t\tvar tempB = new THREE.Vector3();\r\n\t\tvar tempC = new THREE.Vector3();\r\n\t\r\n\t\tvar uvA = new THREE.Vector2();\r\n\t\tvar uvB = new THREE.Vector2();\r\n\t\tvar uvC = new THREE.Vector2();\r\n\t\r\n\t\tvar barycoord = new THREE.Vector3();\r\n\t\r\n\t\tvar intersectionPoint = new THREE.Vector3();\r\n\t\tvar intersectionPointWorld = new THREE.Vector3();\r\n\t\r\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\t\r\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\t\r\n\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\t\r\n\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\t\r\n\t\t\treturn uv1.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\r\n\t\t\tif ( material === undefined ) return;\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check boundingBox before continuing\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar a, b, c;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\t\tc = indices[ i + 2 ];\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\t\tc = a + 2;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\t\r\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\t\r\n\t\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\t\tc = vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\t\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\t\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\t\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\t\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\t\r\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\t\tvC.add( c );\r\n\t\r\n\t\t\t\t\t\ta = vA;\r\n\t\t\t\t\t\tb = vB;\r\n\t\t\t\t\t\tc = vC;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: face,\r\n\t\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Mesh.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Bone.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Bone = function ( skin ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Bone';\r\n\t\r\n\t\tthis.skin = skin;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\t\r\n\tTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.skin = source.skin;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Skeleton.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\t\r\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\t\r\n\t\tthis.identityMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t// copy the bone array\r\n\t\r\n\t\tbones = bones || [];\r\n\t\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\r\n\t\t// create a bone texture or an array of floats\r\n\t\r\n\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\t\r\n\t\t\t\r\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\t\tsize = Math.max( size, 4 );\r\n\t\r\n\t\t\tthis.boneTextureWidth = size;\r\n\t\t\tthis.boneTextureHeight = size;\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\t\r\n\t\tif ( boneInverses === undefined ) {\r\n\t\r\n\t\t\tthis.calculateInverses();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\t\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\t\r\n\t\t\t\tthis.boneInverses = [];\r\n\t\r\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\t\r\n\t\tthis.boneInverses = [];\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tvar inverse = new THREE.Matrix4();\r\n\t\r\n\t\t\tif ( this.bones[ b ] ) {\r\n\t\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.pose = function () {\r\n\t\r\n\t\tvar bone;\r\n\t\r\n\t\t// recover the bind-time world matrices\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tif ( bone.parent ) {\r\n\t\r\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.update = ( function () {\r\n\t\r\n\t\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\t// flatten bone matrices to array\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\t\r\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\t\r\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Skeleton.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/SkinnedMesh.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'SkinnedMesh';\r\n\t\r\n\t\tthis.bindMode = \"attached\";\r\n\t\tthis.bindMatrix = new THREE.Matrix4();\r\n\t\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\t\r\n\t\t// init bones\r\n\t\r\n\t\t// TODO: remove bone creation as there is no reason (other than\r\n\t\t// convenience) for THREE.SkinnedMesh to do this.\r\n\t\r\n\t\tvar bones = [];\r\n\t\r\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\t\r\n\t\t\tvar bone, gbone;\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tbone = new THREE.Bone( this );\r\n\t\t\t\tbones.push( bone );\r\n\t\r\n\t\t\t\tbone.name = gbone.name;\r\n\t\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tif ( gbone.parent !== - 1 ) {\r\n\t\r\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.add( bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.normalizeSkinWeights();\r\n\t\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\t\r\n\t\tthis.skeleton = skeleton;\r\n\t\r\n\t\tif ( bindMatrix === undefined ) {\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\t\t\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\t\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.pose = function () {\r\n\t\r\n\t\tthis.skeleton.pose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\t\r\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\t\r\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\t\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\t\r\n\t\t\t\t\tsw.multiplyScalar( scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\t\r\n\t\tif ( this.bindMode === \"attached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\t\r\n\t\t} else if ( this.bindMode === \"detached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.clone = function() {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/MorphAnimMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'MorphAnimMesh';\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.duration = 1000; // milliseconds\r\n\t\tthis.mirroredLoop = false;\r\n\t\tthis.time = 0;\r\n\t\r\n\t\t// internals\r\n\t\r\n\t\tthis.lastKeyframe = 0;\r\n\t\tthis.currentKeyframe = 0;\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\t\r\n\t\tthis.startKeyframe = start;\r\n\t\tthis.endKeyframe = end;\r\n\t\r\n\t\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\t\r\n\t\tthis.direction = - 1;\r\n\t\tthis.directionBackwards = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tif ( ! geometry.animations ) geometry.animations = {};\r\n\t\r\n\t\tvar firstAnimation, animations = geometry.animations;\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar parts = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\t\r\n\t\t\t\tvar label = parts[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar animation = animations[ label ];\r\n\t\r\n\t\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\t\tif ( i > animation.end ) animation.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\t\r\n\t\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\t\r\n\t\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\t\r\n\t\tvar animation = this.geometry.animations[ label ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\t\tthis.time = 0;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\t\r\n\t\tvar frameTime = this.duration / this.length;\r\n\t\r\n\t\tthis.time += this.direction * delta;\r\n\t\r\n\t\tif ( this.mirroredLoop ) {\r\n\t\r\n\t\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\t\r\n\t\t\t\tthis.direction *= - 1;\r\n\t\r\n\t\t\t\tif ( this.time > this.duration ) {\r\n\t\r\n\t\t\t\t\tthis.time = this.duration;\r\n\t\t\t\t\tthis.directionBackwards = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.time < 0 ) {\r\n\t\r\n\t\t\t\t\tthis.time = 0;\r\n\t\t\t\t\tthis.directionBackwards = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.time = this.time % this.duration;\r\n\t\r\n\t\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tif ( keyframe !== this.currentKeyframe ) {\r\n\t\r\n\t\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\t\tinfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\t\tthis.currentKeyframe = keyframe;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\t\r\n\t\tif ( this.directionBackwards ) {\r\n\t\r\n\t\t\tmix = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinfluences[ this.currentKeyframe ] = mix;\r\n\t\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tinfluences[ i ] = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\t\tif ( b > - 1 ) influences[ b ] = t;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.duration = source.duration;\r\n\t\tthis.mirroredLoop = source.mirroredLoop;\r\n\t\tthis.time = source.time;\r\n\t\r\n\t\tthis.lastKeyframe = source.lastKeyframe;\r\n\t\tthis.currentKeyframe = source.currentKeyframe;\r\n\t\r\n\t\tthis.direction = source.direction;\r\n\t\tthis.directionBackwards = source.directionBackwards;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/LOD.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LOD = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'LOD';\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tobjects: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\t\treturn this.levels;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\t\r\n\tTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\t\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\r\n\t\tdistance = Math.abs( distance );\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\t\r\n\t\tthis.add( object );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ i ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn levels[ i - 1 ].object;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\t\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.LOD.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function update( camera ) {\r\n\t\r\n\t\t\tvar levels = this.levels;\r\n\t\r\n\t\t\tif ( levels.length > 1 ) {\r\n\t\r\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\t\r\n\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\t\r\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\t\r\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.LOD.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\t\r\n\t\tvar levels = source.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.levels = [];\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Sprite.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Sprite = ( function () {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\t\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\t\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\treturn function Sprite( material ) {\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tthis.type = 'Sprite';\r\n\t\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\t\r\n\tTHREE.Sprite.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\t\r\n\t\t\tif ( distanceSq > guessSizeSq ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\t\tpoint: this.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Sprite.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.Particle = THREE.Sprite;\r\n\t\r\n\t// File:src/objects/LensFlare.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.lensFlares = [];\r\n\t\r\n\t\tthis.positionScreen = new THREE.Vector3();\r\n\t\tthis.customUpdateCallback = undefined;\r\n\t\r\n\t\tif ( texture !== undefined ) {\r\n\t\r\n\t\t\tthis.add( texture, size, distance, blending, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\t\r\n\t\r\n\t/*\r\n\t * Add: adds another flare\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\t\r\n\t\tif ( size === undefined ) size = - 1;\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\tif ( opacity === undefined ) opacity = 1;\r\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\t\r\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\t\r\n\t\tthis.lensFlares.push( {\r\n\t\t\ttexture: texture,\t// THREE.Texture\r\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\t\tscale: 1, \t\t// scale\r\n\t\t\trotation: 0, \t\t// rotation\r\n\t\t\topacity: opacity,\t// opacity\r\n\t\t\tcolor: color,\t\t// color\r\n\t\t\tblending: blending\t// blending\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\t * Update lens flares update positions on all flares based on the screen position\r\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\t\r\n\t\tvar f, fl = this.lensFlares.length;\r\n\t\tvar flare;\r\n\t\tvar vecX = - this.positionScreen.x * 2;\r\n\t\tvar vecY = - this.positionScreen.y * 2;\r\n\t\r\n\t\tfor ( f = 0; f < fl; f ++ ) {\r\n\t\r\n\t\t\tflare = this.lensFlares[ f ];\r\n\t\r\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\t\r\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.positionScreen.copy( source.positionScreen );\r\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\t\r\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Scene.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Scene = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Scene';\r\n\t\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\t\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\t\r\n\tTHREE.Scene.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\t\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Fog.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Fog = function ( color, near, far ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Fog.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/FogExp2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.FogExp2 = function ( color, density ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FogExp2.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk.js\r\n\t\r\n\tTHREE.ShaderChunk = {};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/UniformsUtils.js\r\n\t\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\t\r\n\tTHREE.UniformsUtils = {\r\n\t\r\n\t\tmerge: function ( uniforms ) {\r\n\t\r\n\t\t\tvar merged = {};\r\n\t\r\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\t\r\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\t\r\n\t\t\t\tfor ( var p in tmp ) {\r\n\t\r\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn merged;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( uniforms_src ) {\r\n\t\r\n\t\t\tvar uniforms_dst = {};\r\n\t\r\n\t\t\tfor ( var u in uniforms_src ) {\r\n\t\r\n\t\t\t\tuniforms_dst[ u ] = {};\r\n\t\r\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\t\r\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\t\r\n\t\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\t\r\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms_dst;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/UniformsLib.js\r\n\t\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\t\r\n\tTHREE.UniformsLib = {\r\n\t\r\n\t\tcommon: {\r\n\t\r\n\t\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\taomap: {\r\n\t\r\n\t\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlightmap: {\r\n\t\r\n\t\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\temissivemap: {\r\n\t\r\n\t\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbumpmap: {\r\n\t\r\n\t\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalmap: {\r\n\t\r\n\t\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdisplacementmap: {\r\n\t\r\n\t\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfog : {\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlights: {\r\n\t\r\n\t\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpoints: {\r\n\t\r\n\t\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tshadowmap: {\r\n\t\r\n\t\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\t\r\n\t\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib.js\r\n\t\r\n\t/**\r\n\t * Webgl Shader Library for three.js\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\t\r\n\tTHREE.ShaderLib = {\r\n\t\r\n\t\t'basic': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'lambert': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define LAMBERT\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\t\"\t\telse\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'phong': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"varying vec3 vViewPosition;\",\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vNormal;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\t\"uniform float shininess;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'points': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float size;\",\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\t\"\t#else\",\r\n\t\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'dashed': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\t\t\t\"attribute float lineDistance;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\t\"uniform float totalSize;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\t\r\n\t\t\t\t\"\t\tdiscard;\",\r\n\t\r\n\t\t\t\t\"\t}\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'depth': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float mNear;\",\r\n\t\t\t\t\"uniform float mFar;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'normal': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'cube': {\r\n\t\r\n\t\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'equirect': {\r\n\t\r\n\t\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* Depth encoding into RGBA texture\r\n\t\t *\r\n\t\t * based on SpiderGL shadow map example\r\n\t\t * http://spidergl.org/example.php?id=6\r\n\t\t *\r\n\t\t * originally from\r\n\t\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t\t *\r\n\t\t * see also\r\n\t\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t\t */\r\n\t\r\n\t\t'depthRGBA': {\r\n\t\r\n\t\t\tuniforms: {},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\t\r\n\t\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\t\"\treturn res;\",\r\n\t\r\n\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderer.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderer = function ( parameters ) {\r\n\t\r\n\t\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\t\r\n\t\t_width = _canvas.width,\r\n\t\t_height = _canvas.height,\r\n\t\r\n\t\tpixelRatio = 1,\r\n\t\r\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\r\n\t\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t\t_clearAlpha = 0;\r\n\t\r\n\t\tvar lights = [];\r\n\t\r\n\t\tvar opaqueObjects = [];\r\n\t\tvar opaqueObjectsLastIndex = -1;\r\n\t\tvar transparentObjects = [];\r\n\t\tvar transparentObjectsLastIndex = -1;\r\n\t\r\n\t\tvar opaqueImmediateObjects = [];\r\n\t\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\t\tvar transparentImmediateObjects = [];\r\n\t\tvar transparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\t\r\n\t\r\n\t\tvar sprites = [];\r\n\t\tvar lensFlares = [];\r\n\t\r\n\t\t// public properties\r\n\t\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\t\r\n\t\t// clearing\r\n\t\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\t\r\n\t\t// scene graph\r\n\t\r\n\t\tthis.sortObjects = true;\r\n\t\r\n\t\t// physically based shading\r\n\t\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\t\r\n\t\t// morphs\r\n\t\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\t\r\n\t\t// flags\r\n\t\r\n\t\tthis.autoScaleCubemaps = true;\r\n\t\r\n\t\t// internal properties\r\n\t\r\n\t\tvar _this = this,\r\n\t\r\n\t\t// internal state cache\r\n\t\r\n\t\t_currentProgram = null,\r\n\t\t_currentFramebuffer = null,\r\n\t\t_currentMaterialId = - 1,\r\n\t\t_currentGeometryProgram = '',\r\n\t\t_currentCamera = null,\r\n\t\r\n\t\t_usedTextureUnits = 0,\r\n\t\r\n\t\t_viewportX = 0,\r\n\t\t_viewportY = 0,\r\n\t\t_viewportWidth = _canvas.width,\r\n\t\t_viewportHeight = _canvas.height,\r\n\t\t_currentWidth = 0,\r\n\t\t_currentHeight = 0,\r\n\t\r\n\t\t// frustum\r\n\t\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\r\n\t\t // camera matrices cache\r\n\t\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_vector3 = new THREE.Vector3(),\r\n\t\r\n\t\t// light arrays cache\r\n\t\r\n\t\t_direction = new THREE.Vector3(),\r\n\t\r\n\t\t_lightsNeedUpdate = true,\r\n\t\r\n\t\t_lights = {\r\n\t\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// info\r\n\t\r\n\t\t_infoMemory = {\r\n\t\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_infoRender = {\r\n\t\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.info = {\r\n\t\r\n\t\t\trender: _infoRender,\r\n\t\t\tmemory: _infoMemory,\r\n\t\t\tprograms: null\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\t// initialize\r\n\t\r\n\t\tvar _gl;\r\n\t\r\n\t\ttry {\r\n\t\r\n\t\t\tvar attributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t\t};\r\n\t\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\t\r\n\t\t\tif ( _gl === null ) {\r\n\t\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context.';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t} catch ( error ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\t\r\n\t\textensions.get( 'OES_texture_float' );\r\n\t\textensions.get( 'OES_texture_float_linear' );\r\n\t\textensions.get( 'OES_texture_half_float' );\r\n\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\t\r\n\t\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\t\tvar properties = new THREE.WebGLProperties();\r\n\t\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\t\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\t\r\n\t\tthis.info.programs = programCache.programs;\r\n\t\r\n\t\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\t\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction glClearColor( r, g, b, a ) {\r\n\t\r\n\t\t\tif ( _premultipliedAlpha === true ) {\r\n\t\r\n\t\t\t\tr *= a; g *= a; b *= a;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_gl.clearColor( r, g, b, a );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setDefaultGLState() {\r\n\t\r\n\t\t\tstate.init();\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction resetGLState() {\r\n\t\r\n\t\t\t_currentProgram = null;\r\n\t\t\t_currentCamera = null;\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\tstate.reset();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tsetDefaultGLState();\r\n\t\r\n\t\tthis.context = _gl;\r\n\t\tthis.capabilities = capabilities;\r\n\t\tthis.extensions = extensions;\r\n\t\tthis.state = state;\r\n\t\r\n\t\t// shadow map\r\n\t\r\n\t\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\t\r\n\t\tthis.shadowMap = shadowMap;\r\n\t\r\n\t\r\n\t\t// Plugins\r\n\t\r\n\t\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\t\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.getContext = function () {\r\n\t\r\n\t\t\treturn _gl;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getContextAttributes = function () {\r\n\t\r\n\t\t\treturn _gl.getContextAttributes();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.forceContextLoss = function () {\r\n\t\r\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getMaxAnisotropy = ( function () {\r\n\t\r\n\t\t\tvar value;\r\n\t\r\n\t\t\treturn function getMaxAnisotropy() {\r\n\t\r\n\t\t\t\tif ( value !== undefined ) return value;\r\n\t\r\n\t\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvalue = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )();\r\n\t\r\n\t\tthis.getPrecision = function () {\r\n\t\r\n\t\t\treturn capabilities.precision;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPixelRatio = function () {\r\n\t\r\n\t\t\treturn pixelRatio;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\t\r\n\t\t\tif ( value !== undefined ) pixelRatio = value;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getSize = function () {\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width,\r\n\t\t\t\theight: _height\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\t\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\r\n\t\t\t_canvas.width = width * pixelRatio;\r\n\t\t\t_canvas.height = height * pixelRatio;\r\n\t\r\n\t\t\tif ( updateStyle !== false ) {\r\n\t\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_viewportX = x * pixelRatio;\r\n\t\t\t_viewportY = y * pixelRatio;\r\n\t\r\n\t\t\t_viewportWidth = width * pixelRatio;\r\n\t\t\t_viewportHeight = height * pixelRatio;\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_gl.scissor(\r\n\t\t\t\tx * pixelRatio,\r\n\t\t\t\ty * pixelRatio,\r\n\t\t\t\twidth * pixelRatio,\r\n\t\t\t\theight * pixelRatio\r\n\t\t\t);\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableScissorTest = function ( boolean ) {\r\n\t\r\n\t\t\tstate.setScissorTest( boolean );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Clearing\r\n\t\r\n\t\tthis.getClearColor = function () {\r\n\t\r\n\t\t\treturn _clearColor;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearColor = function ( color, alpha ) {\r\n\t\r\n\t\t\t_clearColor.set( color );\r\n\t\r\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getClearAlpha = function () {\r\n\t\r\n\t\t\treturn _clearAlpha;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearAlpha = function ( alpha ) {\r\n\t\r\n\t\t\t_clearAlpha = alpha;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\t\r\n\t\t\tvar bits = 0;\r\n\t\r\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\t\r\n\t\t\t_gl.clear( bits );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearColor = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearDepth = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearStencil = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Reset\r\n\t\r\n\t\tthis.resetGLState = resetGLState;\r\n\t\r\n\t\tthis.dispose = function() {\r\n\t\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Events\r\n\t\r\n\t\tfunction onContextLost( event ) {\r\n\t\r\n\t\t\tevent.preventDefault();\r\n\t\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\t\r\n\t\t\tproperties.clear();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction onTextureDispose( event ) {\r\n\t\r\n\t\t\tvar texture = event.target;\r\n\t\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\tdeallocateTexture( texture );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\t\r\n\t\t\tvar renderTarget = event.target;\r\n\t\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onMaterialDispose( event ) {\r\n\t\r\n\t\t\tvar material = event.target;\r\n\t\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\tdeallocateMaterial( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer deallocation\r\n\t\r\n\t\tfunction deallocateTexture( texture ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t// cube texture\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// 2D texture\r\n\t\r\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove all webgl properties\r\n\t\t\tproperties.delete( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\t\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\t\r\n\t\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tproperties.delete( renderTarget );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateMaterial( material ) {\r\n\t\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\tproperties.delete( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\t\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\t\r\n\t\t\tmaterial.program = undefined;\r\n\t\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\t\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer rendering\r\n\t\r\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar buffers = properties.get( object );\r\n\t\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( object.hasPositions ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasNormals ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\t\r\n\t\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvar array = object.normalArray;\r\n\t\r\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.normal );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasUvs && material.map ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.color );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\t\r\n\t\t\tobject.count = 0;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\t\r\n\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\tvar updateBuffers = false;\r\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\t\r\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\t\r\n\t\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( morphTargetInfluences !== undefined ) {\r\n\t\r\n\t\t\t\tvar activeInfluences = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tactiveInfluences.sort( numericalSort );\r\n\t\r\n\t\t\t\tif ( activeInfluences.length > 8 ) {\r\n\t\r\n\t\t\t\t\tactiveInfluences.length = 8;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\t\r\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar index = influence[ 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar uniforms = program.getUniforms();\r\n\t\r\n\t\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar renderer;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( index );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderer = bufferRenderer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( updateBuffers ) {\r\n\t\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group === undefined ) {\r\n\t\r\n\t\t\t\tvar count;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tcount = index.count;\r\n\t\r\n\t\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\tcount = position.data.array.length / 3;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcount = position.count;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar drawRange = geometry.drawRange;\r\n\t\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: drawRange.start,\r\n\t\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\t\r\n\t\t\t\t\trenderer.renderInstances( geometry );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\t\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\t\r\n\t\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\t\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\t\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\t\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\t\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\t\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\t\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\t\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\t\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\t\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\t\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\t\r\n\t\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\t\r\n\t\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\t\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Sorting\r\n\t\r\n\t\tfunction numericalSort ( a, b ) {\r\n\t\r\n\t\t\treturn b[ 0 ] - a[ 0 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} else if ( a.material.id !== b.material.id ) {\r\n\t\r\n\t\t\t\treturn a.material.id - b.material.id;\r\n\t\r\n\t\t\t} else if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn a.z - b.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction reversePainterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Rendering\r\n\t\r\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\t\r\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\t// reset caching for this frame\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\t// update scene graph\r\n\t\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\t\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\t\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\tlights.length = 0;\r\n\t\r\n\t\t\topaqueObjectsLastIndex = -1;\r\n\t\t\ttransparentObjectsLastIndex = -1;\r\n\t\r\n\t\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\t\tsprites.length = 0;\r\n\t\t\tlensFlares.length = 0;\r\n\t\r\n\t\t\tprojectObject( scene );\r\n\t\r\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\t\r\n\t\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\t\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tshadowMap.render( scene, camera );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\t_infoRender.calls = 0;\r\n\t\t\t_infoRender.vertices = 0;\r\n\t\t\t_infoRender.faces = 0;\r\n\t\t\t_infoRender.points = 0;\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\r\n\t\t\tif ( this.autoClear || forceClear ) {\r\n\t\r\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\t\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\t\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// custom render plugins (post pass)\r\n\t\r\n\t\t\tspritePlugin.render( scene, camera );\r\n\t\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\t\r\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\t\r\n\t\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\t\r\n\t\t\tstate.setDepthTest( true );\r\n\t\t\tstate.setDepthWrite( true );\r\n\t\t\tstate.setColorWrite( true );\r\n\t\r\n\t\t\t// _gl.finish();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction pushImmediateRenderItem( object ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( object.material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentImmediateObjects;\r\n\t\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing position or grow the array\r\n\t\r\n\t\t\tif ( index < array.length ) {\r\n\t\r\n\t\t\t\tarray[ index ] = object;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentObjects;\r\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueObjects;\r\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing render item or grow the array\r\n\t\r\n\t\t\tvar renderItem = array[ index ];\r\n\t\r\n\t\t\tif ( renderItem !== undefined ) {\r\n\t\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.z = _vector3.z;\r\n\t\t\t\trenderItem.group = group;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tz: _vector3.z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( renderItem );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\t\r\n\t\t\t\tlights.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\t\r\n\t\t\t\tsprites.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\t\r\n\t\t\t\tlensFlares.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\t\r\n\t\t\t\tpushImmediateRenderItem( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tobject.skeleton.update();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\r\n\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\t\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tvar material = overrideMaterial;\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar object = renderList[ i ];\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\t\r\n\t\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\t\t_currentGeometryProgram = '';\r\n\t\r\n\t\t\t\tobject.render( function ( object ) {\r\n\t\r\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction initMaterial( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\t\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\t} else if ( program.code !== code ) {\r\n\t\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\t\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( programChange ) {\r\n\t\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\t\r\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\t\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( material.morphTargets ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.morphNormals ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterialProperties.uniformsList = [];\r\n\t\r\n\t\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\t\r\n\t\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\t\r\n\t\t\t\tvar location = uniformLocations[ u ];\r\n\t\r\n\t\t\t\tif ( location ) {\r\n\t\r\n\t\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterial( material ) {\r\n\t\r\n\t\t\tsetMaterialFaces( material );\r\n\t\r\n\t\t\tif ( material.transparent === true ) {\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\t\tstate.setColorWrite( material.colorWrite );\r\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterialFaces( material ) {\r\n\t\r\n\t\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\t\r\n\t\t\t_usedTextureUnits = 0;\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\t\r\n\t\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\t\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\t\r\n\t\t\tif ( program.id !== _currentProgram ) {\r\n\t\r\n\t\t\t\t_gl.useProgram( program.program );\r\n\t\t\t\t_currentProgram = program.id;\r\n\t\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\t\r\n\t\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\t\r\n\t\t\t\trefreshMaterial = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\t\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material.envMap ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material.skinning ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\t\r\n\t\t\tif ( material.skinning ) {\r\n\t\r\n\t\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshMaterial ) {\r\n\t\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\t\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material.lights ) {\r\n\t\r\n\t\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\t\r\n\t\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t\t_lightsNeedUpdate = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( refreshLights ) {\r\n\t\r\n\t\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// refresh single material specific uniforms\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// load common uniforms\r\n\t\r\n\t\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tloadUniformsMatrices( p_uniforms, object );\r\n\t\r\n\t\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\t\r\n\t\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\r\n\t\t\tif ( material.emissive ) {\r\n\t\r\n\t\t\t\tuniforms.emissive.value = material.emissive;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\r\n\t\t\tif ( material.aoMap ) {\r\n\t\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\t\r\n\t\t\tvar uvScaleMap;\r\n\t\r\n\t\t\tif ( material.map ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\r\n\t\t\t} else if ( material.specularMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\t\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\t\r\n\t\t\t} else if ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\t\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\t\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\t\r\n\t\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\t\tvar repeat = uvScaleMap.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\t\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.psColor.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size;\r\n\t\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\r\n\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\tvar offset = material.map.offset;\r\n\t\t\t\tvar repeat = material.map.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\t\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\t\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\t\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = material.shininess;\r\n\t\r\n\t\t\tif ( material.lightMap ) {\r\n\t\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\t\r\n\t\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\t\r\n\t\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\t\r\n\t\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\t\r\n\t\t\tif ( uniforms.shadowMatrix ) {\r\n\t\r\n\t\t\t\tvar j = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar light = lights[ i ];\r\n\t\r\n\t\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\t\r\n\t\t\t\t\t\tj ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (load to GPU)\r\n\t\r\n\t\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\t\r\n\t\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\t\r\n\t\t\tif ( uniforms.normalMatrix ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTextureUnit() {\r\n\t\r\n\t\t\tvar textureUnit = _usedTextureUnits;\r\n\t\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_usedTextureUnits += 1;\r\n\t\r\n\t\t\treturn textureUnit;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction loadUniformsGeneric ( uniforms ) {\r\n\t\r\n\t\t\tvar texture, textureUnit;\r\n\t\r\n\t\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\t\r\n\t\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\t\r\n\t\t\t\tvar type = uniform.type;\r\n\t\t\t\tvar value = uniform.value;\r\n\t\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\t\r\n\t\t\t\tswitch ( type ) {\r\n\t\r\n\t\t\t\t\tcase '1i':\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1f':\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2f':\r\n\t\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3f':\r\n\t\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4f':\r\n\t\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1iv':\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3iv':\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1fv':\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2fv':\r\n\t\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3fv':\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4fv':\r\n\t\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t//\r\n\t\r\n\t\t\t\t\tcase 'i':\r\n\t\r\n\t\t\t\t\t\t// single integer\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'f':\r\n\t\r\n\t\t\t\t\t\t// single float\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'c':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector2\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 't':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\t\r\n\t\t\t\t\t\ttexture = value;\r\n\t\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\t\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'tv':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Texture (2d)\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = [];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\t\r\n\t\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\t\r\n\t\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupLights ( lights, camera ) {\r\n\t\r\n\t\t\tvar l, ll, light,\r\n\t\t\tr = 0, g = 0, b = 0,\r\n\t\t\tcolor, skyColor, groundColor,\r\n\t\t\tintensity,\r\n\t\t\tdistance,\r\n\t\r\n\t\t\tzlights = _lights,\r\n\t\r\n\t\t\tviewMatrix = camera.matrixWorldInverse,\r\n\t\r\n\t\t\tdirColors = zlights.directional.colors,\r\n\t\t\tdirPositions = zlights.directional.positions,\r\n\t\r\n\t\t\tpointColors = zlights.point.colors,\r\n\t\t\tpointPositions = zlights.point.positions,\r\n\t\t\tpointDistances = zlights.point.distances,\r\n\t\t\tpointDecays = zlights.point.decays,\r\n\t\r\n\t\t\tspotColors = zlights.spot.colors,\r\n\t\t\tspotPositions = zlights.spot.positions,\r\n\t\t\tspotDistances = zlights.spot.distances,\r\n\t\t\tspotDirections = zlights.spot.directions,\r\n\t\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\t\tspotExponents = zlights.spot.exponents,\r\n\t\t\tspotDecays = zlights.spot.decays,\r\n\t\r\n\t\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\t\themiPositions = zlights.hemi.positions,\r\n\t\r\n\t\t\tdirLength = 0,\r\n\t\t\tpointLength = 0,\r\n\t\t\tspotLength = 0,\r\n\t\t\themiLength = 0,\r\n\t\r\n\t\t\tdirCount = 0,\r\n\t\t\tpointCount = 0,\r\n\t\t\tspotCount = 0,\r\n\t\t\themiCount = 0,\r\n\t\r\n\t\t\tdirOffset = 0,\r\n\t\t\tpointOffset = 0,\r\n\t\t\tspotOffset = 0,\r\n\t\t\themiOffset = 0;\r\n\t\r\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tlight = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow ) continue;\r\n\t\r\n\t\t\t\tcolor = light.color;\r\n\t\t\t\tintensity = light.intensity;\r\n\t\t\t\tdistance = light.distance;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tr += color.r;\r\n\t\t\t\t\tg += color.g;\r\n\t\t\t\t\tb += color.b;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\tdirCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tdirOffset = dirLength * 3;\r\n\t\r\n\t\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\t\r\n\t\t\t\t\tdirLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\tpointCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tpointOffset = pointLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tpointLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\tspotCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tspotOffset = spotLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tspotLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\t\r\n\t\t\t\t\themiCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\themiOffset = hemiLength * 3;\r\n\t\r\n\t\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tskyColor = light.color;\r\n\t\t\t\t\tgroundColor = light.groundColor;\r\n\t\r\n\t\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\t\r\n\t\t\t\t\themiLength += 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// null eventual remains from removed lights\r\n\t\t\t// (this is to avoid if in shader)\r\n\t\r\n\t\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\t\r\n\t\t\tzlights.directional.length = dirLength;\r\n\t\t\tzlights.point.length = pointLength;\r\n\t\t\tzlights.spot.length = spotLength;\r\n\t\t\tzlights.hemi.length = hemiLength;\r\n\t\r\n\t\t\tzlights.ambient[ 0 ] = r;\r\n\t\t\tzlights.ambient[ 1 ] = g;\r\n\t\t\tzlights.ambient[ 2 ] = b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// GL state setting\r\n\t\r\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\t\r\n\t\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\t\r\n\t\t\t\tstate.disable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tstate.enable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Textures\r\n\t\r\n\t\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\t\r\n\t\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\t\r\n\t\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\tif ( extension ) {\r\n\t\r\n\t\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\t\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\t\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\t\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\t\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\r\n\t\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\t\r\n\t\t\tvar image = texture.image,\r\n\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\t\r\n\t\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\r\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setTexture = function ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\tvar image = texture.image;\r\n\t\r\n\t\t\t\tif ( image === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( image.complete === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction clampToMaxSize ( image, maxSize ) {\r\n\t\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\t\r\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t\t// premultiplied alpha.\r\n\t\r\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\t\r\n\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\t\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\t\r\n\t\t\t\treturn canvas;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTexture ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\t\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\t\r\n\t\t\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\r\n\t\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\t\r\n\t\t\t\t\tvar cubeImage = [];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Render targets\r\n\t\r\n\t\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\t\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\t\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t\t*/\r\n\t\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setRenderTarget = function ( renderTarget ) {\r\n\t\r\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\t\r\n\t\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t// Setup texture, create render and frame buffers\r\n\t\r\n\t\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Release everything\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar framebuffer, width, height, vx, vy;\r\n\t\r\n\t\t\tif ( renderTarget ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\twidth = renderTarget.width;\r\n\t\t\t\theight = renderTarget.height;\r\n\t\r\n\t\t\t\tvx = 0;\r\n\t\t\t\tvy = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tframebuffer = null;\r\n\t\r\n\t\t\t\twidth = _viewportWidth;\r\n\t\t\t\theight = _viewportHeight;\r\n\t\r\n\t\t\t\tvx = _viewportX;\r\n\t\t\t\tvy = _viewportY;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t\t_gl.viewport( vx, vy, width, height );\r\n\t\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_currentWidth = width;\r\n\t\t\t_currentHeight = height;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\t\r\n\t\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\t\r\n\t\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar restore = false;\r\n\t\r\n\t\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\t\r\n\t\t\t\t\trestore = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\t\r\n\t\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( restore ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\t\r\n\t\tfunction filterFallback ( f ) {\r\n\t\r\n\t\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\t\r\n\t\t\t\treturn _gl.NEAREST;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn _gl.LINEAR;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Map three.js constants to WebGL constants\r\n\t\r\n\t\tfunction paramThreeToGL ( p ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\t\r\n\t\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\t\r\n\t\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\t\r\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\t\r\n\t\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// DEPRECATED\r\n\t\r\n\t\tthis.supportsFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsHalfFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsStandardDerivatives = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTextureS3TC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTexturePVRTC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsBlendMinMax = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsVertexTextures = function () {\r\n\t\r\n\t\t\treturn capabilities.vertexTextures;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsInstancedArrays = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.initMaterial = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPrePlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPostPlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.updateShadowMap = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tshadowMapEnabled: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.enabled;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\t\tshadowMap.enabled = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapType: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.type;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\t\tshadowMap.type = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapCullFace: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.cullFace;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\t\tshadowMap.cullFace = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapDebug: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.debug;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\t\tshadowMap.debug = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderTarget.js\r\n\t\r\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\toptions = options || {};\r\n\t\r\n\t\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\t\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\r\n\t\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTarget.prototype = {\r\n\t\r\n\t\tconstructor: THREE.WebGLRenderTarget,\r\n\t\r\n\t\tsetSize: function ( width, height ) {\r\n\t\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\t\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\r\n\t\t\t\tthis.dispose();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\r\n\t\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\t\r\n\t// File:src/renderers/WebGLRenderTargetCube.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\t\r\n\t\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\t\r\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\n\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\t\r\n\t// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawArrays( mode, start, count );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar type, size;\r\n\t\r\n\t\tfunction setIndex( index ) {\r\n\t\r\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\tsize = 4;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\tsize = 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawElements( mode, count, type, start * size );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\r\n\t\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLExtensions.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLExtensions = function ( gl ) {\r\n\t\r\n\t\tvar extensions = {};\r\n\t\r\n\t\tthis.get = function ( name ) {\r\n\t\r\n\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn extensions[ name ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\textension = gl.getExtension( name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textensions[ name ] = extension;\r\n\t\r\n\t\t\treturn extension;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLCapabilities.js\r\n\t\r\n\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\t\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\t\r\n\t\t\tif ( precision === 'highp' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'highp';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tprecision = 'mediump';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'mediump';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 'lowp';\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getMaxPrecision = getMaxPrecision;\r\n\t\r\n\t\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\t\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\t\r\n\t\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\t\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\t\r\n\t\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\t\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\t\r\n\t\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\t\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\t\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\t\r\n\t\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\t\r\n\t\tif ( _maxPrecision !== this.precision ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\t\tthis.precision = _maxPrecision;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( this.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLGeometries.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = {};\r\n\t\r\n\t\tfunction get( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn geometries[ geometry.id ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tvar buffergeometry;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tbuffergeometry = geometry;\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\t\r\n\t\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\t\r\n\t\t\tinfo.memory.geometries ++;\r\n\t\r\n\t\t\treturn buffergeometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onGeometryDispose( event ) {\r\n\t\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\t\r\n\t\t\tdeleteAttributes( buffergeometry.attributes );\r\n\t\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\t\r\n\t\t\tinfo.memory.geometries --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttribute( attribute ) {\r\n\t\r\n\t\t\tvar buffer = getAttributeBuffer( attribute );\r\n\t\r\n\t\t\tif ( buffer !== undefined ) {\r\n\t\r\n\t\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\t\tremoveAttributeBuffer( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttributes( attributes ) {\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( attributes[ name ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction removeAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\tproperties.delete( attribute.data );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tproperties.delete( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.get = get;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLObjects.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction update( object ) {\r\n\t\r\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\t\r\n\t\t\tvar geometry = geometries.get( object );\r\n\t\r\n\t\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tgeometry.updateFromObject( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\t\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateAttribute( attribute, bufferType ) {\r\n\t\r\n\t\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\t\r\n\t\t\tvar attributeProperties = properties.get( data );\r\n\t\r\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\t\r\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\t\r\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\t\r\n\t\t\tgl.bufferData( bufferType, data.array, usage );\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\t\r\n\t\t\t\t// Not using update ranges\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\t\r\n\t\t\t} else if ( data.updateRange.count === 0 ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\t\r\n\t\t\t\tdata.updateRange.count = 0; // reset range\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\r\n\t\t\tif ( property.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\treturn property.wireframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar indices = [];\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar position = attributes.position;\r\n\t\r\n\t\t\t// console.time( 'wireframe' );\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar edges = {};\r\n\t\t\t\tvar array = index.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\t\r\n\t\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar array = attributes.position.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\t\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\t\r\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\t\r\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\tproperty.wireframe = attribute;\r\n\t\r\n\t\t\treturn attribute;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkEdge( edges, a, b ) {\r\n\t\r\n\t\t\tif ( a > b ) {\r\n\t\r\n\t\t\t\tvar tmp = a;\r\n\t\t\t\ta = b;\r\n\t\t\t\tb = tmp;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar list = edges[ a ];\r\n\t\r\n\t\t\tif ( list === undefined ) {\r\n\t\r\n\t\t\t\tedges[ a ] = [ b ];\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\t\r\n\t\t\t\tlist.push( b );\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\t\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\t\r\n\t\tthis.update = update;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProgram.js\r\n\t\r\n\tTHREE.WebGLProgram = ( function () {\r\n\t\r\n\t\tvar programIdCount = 0;\r\n\t\r\n\t\tfunction generateDefines( defines ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tfor ( var name in defines ) {\r\n\t\r\n\t\t\t\tvar value = defines[ name ];\r\n\t\r\n\t\t\t\tif ( value === false ) continue;\r\n\t\r\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar uniforms = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\t\r\n\t\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\t\r\n\t\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuniforms[ name ] = location;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar attributes = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\t\r\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn attributes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction filterEmptyLine( string ) {\r\n\t\r\n\t\t\treturn string !== '';\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\t\r\n\t\t\tvar gl = renderer.context;\r\n\t\r\n\t\t\tvar defines = material.defines;\r\n\t\r\n\t\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\t\r\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\t\r\n\t\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\t\r\n\t\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\r\n\t\t\tif ( parameters.envMap ) {\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.combine ) {\r\n\t\r\n\t\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\t\r\n\t\t\t// console.log( 'building new program ' );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar customDefines = generateDefines( defines );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar prefixVertex, prefixFragment;\r\n\t\r\n\t\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\t\r\n\t\t\t\tprefixVertex = '';\r\n\t\t\t\tprefixFragment = '';\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tprefixVertex = [\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\t\r\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\r\n\t\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_COLOR',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 color;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\t\r\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\t\r\n\t\t\t\t\t'\t#else',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\t\r\n\t\t\t\t\t'\t#endif',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_SKINNING',\r\n\t\r\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t\tprefixFragment = [\r\n\t\r\n\t\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\t\r\n\t\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\t\r\n\t\t\tgl.attachShader( program, glVertexShader );\r\n\t\t\tgl.attachShader( program, glFragmentShader );\r\n\t\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\r\n\t\t\tif ( material.index0AttributeName !== undefined ) {\r\n\t\r\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\t\r\n\t\t\t} else if ( parameters.morphTargets === true ) {\r\n\t\r\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\t\r\n\t\t\tvar runnable = true;\r\n\t\t\tvar haveDiagnostics = true;\r\n\t\r\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\t\r\n\t\t\t\trunnable = false;\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\t\r\n\t\t\t} else if ( programLog !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\t\r\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\t\r\n\t\t\t\thaveDiagnostics = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( haveDiagnostics ) {\r\n\t\r\n\t\t\t\tthis.diagnostics = {\r\n\t\r\n\t\t\t\t\trunnable: runnable,\r\n\t\t\t\t\tmaterial: material,\r\n\t\r\n\t\t\t\t\tprogramLog: programLog,\r\n\t\r\n\t\t\t\t\tvertexShader: {\r\n\t\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\t\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tfragmentShader: {\r\n\t\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// clean up\r\n\t\r\n\t\t\tgl.deleteShader( glVertexShader );\r\n\t\t\tgl.deleteShader( glFragmentShader );\r\n\t\r\n\t\t\t// set up caching for uniform locations\r\n\t\r\n\t\t\tvar cachedUniforms;\r\n\t\r\n\t\t\tthis.getUniforms = function() {\r\n\t\r\n\t\t\t\tif ( cachedUniforms === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedUniforms;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// set up caching for attribute locations\r\n\t\r\n\t\t\tvar cachedAttributes;\r\n\t\r\n\t\t\tthis.getAttributes = function() {\r\n\t\r\n\t\t\t\tif ( cachedAttributes === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedAttributes;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// free resource\r\n\t\r\n\t\t\tthis.destroy = function() {\r\n\t\r\n\t\t\t\tgl.deleteProgram( program );\r\n\t\t\t\tthis.program = undefined;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// DEPRECATED\r\n\t\r\n\t\t\tObject.defineProperties( this, {\r\n\t\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\t\treturn this.getUniforms();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\t\treturn this.getAttributes();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tthis.id = programIdCount ++;\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.usedTimes = 1;\r\n\t\t\tthis.program = program;\r\n\t\t\tthis.vertexShader = glVertexShader;\r\n\t\t\tthis.fragmentShader = glFragmentShader;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLPrograms.js\r\n\t\r\n\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\t\r\n\t\tvar programs = [];\r\n\t\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points'\r\n\t\t};\r\n\t\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\t\"flipSided\"\r\n\t\t];\r\n\t\r\n\t\r\n\t\tfunction allocateBones ( object ) {\r\n\t\r\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\treturn 1024;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\t\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\t\r\n\t\t\t\tvar maxBones = nVertexMatrices;\r\n\t\r\n\t\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\t\r\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn maxBones;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateLights( lights ) {\r\n\t\r\n\t\t\tvar dirLights = 0;\r\n\t\t\tvar pointLights = 0;\r\n\t\t\tvar spotLights = 0;\r\n\t\t\tvar hemiLights = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateShadows( lights ) {\r\n\t\r\n\t\t\tvar maxShadows = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn maxShadows;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\t\r\n\t\t\tvar maxLightCount = allocateLights( lights );\r\n\t\t\tvar maxShadows = allocateShadows( lights );\r\n\t\t\tvar maxBones = allocateBones( object );\r\n\t\t\tvar precision = renderer.getPrecision();\r\n\t\r\n\t\t\tif ( material.precision !== null ) {\r\n\t\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\t\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar parameters = {\r\n\t\r\n\t\t\t\tshaderID: shaderID,\r\n\t\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\t\r\n\t\t\t\tcombine: material.combine,\r\n\t\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\t\r\n\t\t\t\tfog: fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\t\r\n\t\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\t\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\t\r\n\t\t\t\tskinning: material.skinning,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\t\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\t\r\n\t\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\t\r\n\t\t\t\tmaxShadows: maxShadows,\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\t\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tmetal: material.metal,\r\n\t\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\t\tflipSided: material.side === THREE.BackSide\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn parameters;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\tchunks.push( parameters.shaderID );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\t\tchunks.push( material.vertexShader );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\t\r\n\t\t\t\t\tchunks.push( name );\r\n\t\t\t\t\tchunks.push( material.defines[ name ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\t\tchunks.push( parameterName );\r\n\t\t\t\tchunks.push( parameters[ parameterName ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\t\r\n\t\t\tvar program;\r\n\t\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\t\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\t\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\t\tprograms.push( program );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.releaseProgram = function( program ) {\r\n\t\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\t\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\t\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProperties.js\r\n\t\r\n\t/**\r\n\t* @author fordacious / fordacious.github.io\r\n\t*/\r\n\t\r\n\tTHREE.WebGLProperties = function () {\r\n\t\r\n\t\tvar properties = {};\r\n\t\r\n\t\tthis.get = function ( object ) {\r\n\t\r\n\t\t\tvar uuid = object.uuid;\r\n\t\t\tvar map = properties[ uuid ];\r\n\t\r\n\t\t\tif ( map === undefined ) {\r\n\t\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties[ uuid ] = map;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn map;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.delete = function ( object ) {\r\n\t\r\n\t\t\tdelete properties[ object.uuid ];\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function () {\r\n\t\r\n\t\t\tproperties = {};\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShader.js\r\n\t\r\n\tTHREE.WebGLShader = ( function () {\r\n\t\r\n\t\tvar addLineNumbers = function ( string ) {\r\n\t\r\n\t\t\tvar lines = string.split( '\\n' );\r\n\t\r\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\t\r\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn lines.join( '\\n' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function WebGLShader( gl, type, string ) {\r\n\t\r\n\t\t\tvar shader = gl.createShader( type );\r\n\t\r\n\t\t\tgl.shaderSource( shader, string );\r\n\t\t\tgl.compileShader( shader );\r\n\t\r\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// --enable-privileged-webgl-extension\r\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\t\r\n\t\t\treturn shader;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShadowMap.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\t\r\n\t\tvar _gl = _renderer.context,\r\n\t\t_state = _renderer.state,\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_min = new THREE.Vector3(),\r\n\t\t_max = new THREE.Vector3(),\r\n\t\r\n\t\t_matrixPosition = new THREE.Vector3(),\r\n\t\r\n\t\t_renderList = [];\r\n\t\r\n\t\t// init\r\n\t\r\n\t\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\t\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\t\r\n\t\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader\r\n\t\t } );\r\n\t\r\n\t\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\t_depthMaterial._shadowPass = true;\r\n\t\t_depthMaterialMorph._shadowPass = true;\r\n\t\t_depthMaterialSkin._shadowPass = true;\r\n\t\t_depthMaterialMorphSkin._shadowPass = true;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tthis.enabled = false;\r\n\t\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tthis.type = THREE.PCFShadowMap;\r\n\t\tthis.cullFace = THREE.CullFaceFront;\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\t\r\n\t\t\t// set GL state for depth map\r\n\t\r\n\t\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t\t_state.disable( _gl.BLEND );\r\n\t\r\n\t\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_state.setDepthTest( true );\r\n\t\r\n\t\t\t// render depth map\r\n\t\r\n\t\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar light = _lights[ i ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( ! light.shadowMap ) {\r\n\t\r\n\t\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\t\r\n\t\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\t\r\n\t\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! light.shadowCamera ) {\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tscene.add( light.shadowCamera );\r\n\t\r\n\t\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\t\r\n\t\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\t\tscene.add( light.cameraHelper );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\t\tvar shadowCamera = light.shadowCamera;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\r\n\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\t\r\n\t\t\t\t// compute shadow matrix\r\n\t\r\n\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\t\r\n\t\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\t\t// render shadow map\r\n\t\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\t\r\n\t\t\t\t// set object matrices & frustum culling\r\n\t\r\n\t\t\t\t_renderList.length = 0;\r\n\t\r\n\t\t\t\tprojectObject( scene, shadowCamera );\r\n\t\r\n\t\r\n\t\t\t\t// render regular objects\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore GL state\r\n\t\r\n\t\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\r\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t\t_state.enable( _gl.BLEND );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_renderer.resetGLState();\r\n\t\r\n\t\t\tscope.needsUpdate = false;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction getDepthMaterial( object, material ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\t\r\n\t\t\tvar depthMaterial;\r\n\t\r\n\t\t\tif ( object.customDepthMaterial ) {\r\n\t\r\n\t\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\t\r\n\t\t\t} else if ( useSkinning ) {\r\n\t\r\n\t\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\t\r\n\t\t\t} else if ( useMorphing ) {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterial;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdepthMaterial.visible = material.visible;\r\n\t\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\r\n\t\t\treturn depthMaterial;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object, camera ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t\t_renderList.push( object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ], camera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLState.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\t\r\n\t\tvar _this = this;\r\n\t\r\n\t\tvar newAttributes = new Uint8Array( 16 );\r\n\t\tvar enabledAttributes = new Uint8Array( 16 );\r\n\t\r\n\t\tvar capabilities = {};\r\n\t\r\n\t\tvar compressedTextureFormats = null;\r\n\t\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\r\n\t\tvar currentDepthFunc = null;\r\n\t\tvar currentDepthWrite = null;\r\n\t\r\n\t\tvar currentColorWrite = null;\r\n\t\r\n\t\tvar currentFlipSided = null;\r\n\t\r\n\t\tvar currentLineWidth = null;\r\n\t\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\t\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\r\n\t\tvar currentTextureSlot = undefined;\r\n\t\tvar currentBoundTextures = {};\r\n\t\r\n\t\tthis.init = function () {\r\n\t\r\n\t\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\t\tgl.clearDepth( 1 );\r\n\t\t\tgl.clearStencil( 0 );\r\n\t\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\tgl.frontFace( gl.CCW );\r\n\t\t\tgl.cullFace( gl.BACK );\r\n\t\t\tthis.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\tthis.enable( gl.BLEND );\r\n\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.initAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableAttribute = function ( attribute ) {\r\n\t\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\t\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disableUnusedAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== true ) {\r\n\t\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tcapabilities[ id ] = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== false ) {\r\n\t\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tcapabilities[ id ] = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getCompressedTextureFormats = function () {\r\n\t\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\t\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\t\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\t\r\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn compressedTextureFormats;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\t\r\n\t\t\tif ( blending !== currentBlending ) {\r\n\t\r\n\t\t\t\tif ( blending === THREE.NoBlending ) {\r\n\t\r\n\t\t\t\t\tthis.disable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentBlending = blending;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\t\r\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tcurrentBlendEquation = null;\r\n\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthFunc = function ( depthFunc ) {\r\n\t\r\n\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\t\r\n\t\t\t\tif ( depthFunc ) {\r\n\t\r\n\t\t\t\t\tswitch ( depthFunc ) {\r\n\t\r\n\t\t\t\t\t\tcase THREE.NeverDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.EqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthTest = function ( depthTest ) {\r\n\t\r\n\t\t\tif ( depthTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthWrite = function ( depthWrite ) {\r\n\t\r\n\t\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\t\r\n\t\t\t\tgl.depthMask( depthWrite );\r\n\t\t\t\tcurrentDepthWrite = depthWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setColorWrite = function ( colorWrite ) {\r\n\t\r\n\t\t\tif ( currentColorWrite !== colorWrite ) {\r\n\t\r\n\t\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\t\tcurrentColorWrite = colorWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setFlipSided = function ( flipSided ) {\r\n\t\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\t\r\n\t\t\t\tif ( flipSided ) {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setLineWidth = function ( width ) {\r\n\t\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\t\r\n\t\t\t\tgl.lineWidth( width );\r\n\t\r\n\t\t\t\tcurrentLineWidth = width;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\t\r\n\t\t\tif ( polygonOffset ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\t\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\t\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissorTest = function ( scissorTest ) {\r\n\t\r\n\t\t\tif ( scissorTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// texture\r\n\t\r\n\t\tthis.activeTexture = function ( webglSlot ) {\r\n\t\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\t\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\t\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\t\r\n\t\t\tif ( currentTextureSlot === undefined ) {\r\n\t\r\n\t\t\t\t_this.activeTexture();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\t\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\t\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\t\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\t\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.compressedTexImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.texImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.reset = function () {\r\n\t\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcapabilities = {};\r\n\t\r\n\t\t\tcompressedTextureFormats = null;\r\n\t\r\n\t\t\tcurrentBlending = null;\r\n\t\r\n\t\t\tcurrentDepthWrite = null;\r\n\t\t\tcurrentColorWrite = null;\r\n\t\r\n\t\t\tcurrentFlipSided = null;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\tvar hasVertexTexture;\r\n\t\r\n\t\tvar tempTexture, occlusionTexture;\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t\t 1, - 1,  1, 0,\r\n\t\t\t\t 1,  1,  1, 1,\r\n\t\t\t\t- 1,  1,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\t// buffers\r\n\t\r\n\t\t\tvertexBuffer     = gl.createBuffer();\r\n\t\t\telementBuffer    = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\t// textures\r\n\t\r\n\t\t\ttempTexture      = gl.createTexture();\r\n\t\t\tocclusionTexture = gl.createTexture();\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\t\r\n\t\t\tvar shader;\r\n\t\r\n\t\t\tif ( hasVertexTexture ) {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"precision mediump float;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tprogram = createProgram( shader );\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/*\r\n\t\t * Render lens flares\r\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t\t *         reads these back and calculates occlusion.\r\n\t\t */\r\n\t\r\n\t\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\t\r\n\t\t\tif ( flares.length === 0 ) return;\r\n\t\r\n\t\t\tvar tempPosition = new THREE.Vector3();\r\n\t\r\n\t\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\t\r\n\t\t\tvar size = 16 / viewportHeight,\r\n\t\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\t\r\n\t\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.vertex );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t\t// setup gl and common used attribs/uniforms\r\n\t\r\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 1 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tgl.depthMask( false );\r\n\t\r\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tsize = 16 / viewportHeight;\r\n\t\t\t\tscale.set( size * invAspect, size );\r\n\t\r\n\t\t\t\t// calc object screen position\r\n\t\r\n\t\t\t\tvar flare = flares[ i ];\r\n\t\r\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\t\r\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\t\r\n\t\t\t\t// setup arrays for gl programs\r\n\t\r\n\t\t\t\tscreenPosition.copy( tempPosition );\r\n\t\r\n\t\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\t\r\n\t\t\t\t// screen cull\r\n\t\r\n\t\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\t\r\n\t\t\t\t\t// save current RGB to temp texture\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// render pink quad\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\r\n\t\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// copy result to occlusionMap\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// restore graphics\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// update object positions\r\n\t\r\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\t\r\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\t\r\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tflare.updateLensFlares();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// render flares\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\t\r\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\t\r\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\t\r\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\t\r\n\t\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\t\tscale.y = size;\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\t\r\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\t\r\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthMask( true );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram ( shader ) {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\r\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\t\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\r\n\t\tvar texture;\r\n\t\r\n\t\t// decompose matrixWorld\r\n\t\r\n\t\tvar spritePosition = new THREE.Vector3();\r\n\t\tvar spriteRotation = new THREE.Quaternion();\r\n\t\tvar spriteScale = new THREE.Vector3();\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\tvertexBuffer  = gl.createBuffer();\r\n\t\t\telementBuffer = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tprogram = createProgram();\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\t\r\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\t\r\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\t\r\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\t\r\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\t\r\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t\t};\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = 8;\r\n\t\t\tcanvas.height = 8;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.fillStyle = 'white';\r\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\t\r\n\t\t\ttexture = new THREE.Texture( canvas );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( sprites.length === 0 ) return;\r\n\t\r\n\t\t\t// setup gl\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 0 );\r\n\t\r\n\t\t\tvar oldFogType = 0;\r\n\t\t\tvar sceneFogType = 0;\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\tif ( fog ) {\r\n\t\r\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\t\r\n\t\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\t\toldFogType = 1;\r\n\t\t\t\t\tsceneFogType = 1;\r\n\t\r\n\t\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\t\toldFogType = 2;\r\n\t\t\t\t\tsceneFogType = 2;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\t\toldFogType = 0;\r\n\t\t\t\tsceneFogType = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// update positions and sort\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\r\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsprites.sort( painterSortStable );\r\n\t\r\n\t\t\t// render all sprites\r\n\t\r\n\t\t\tvar scale = [];\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\t\t\tvar material = sprite.material;\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\t\r\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\t\r\n\t\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\t\tscale[ 1 ] = spriteScale.y;\r\n\t\r\n\t\t\t\tvar fogType = 0;\r\n\t\r\n\t\t\t\tif ( scene.fog && material.fog ) {\r\n\t\r\n\t\t\t\t\tfogType = sceneFogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( oldFogType !== fogType ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\t\toldFogType = fogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\r\n\t\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( texture, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram () {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\r\n\t\t\tgl.shaderSource( vertexShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform float rotation;',\r\n\t\t\t\t'uniform vec2 scale;',\r\n\t\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t\t'uniform vec2 uvScale;',\r\n\t\r\n\t\t\t\t'attribute vec2 position;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\t\r\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\t\r\n\t\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\t\r\n\t\t\t\t\t'vec4 finalPosition;',\r\n\t\r\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\t\r\n\t\t\t\t\t'gl_Position = finalPosition;',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform vec3 color;',\r\n\t\t\t\t'uniform sampler2D map;',\r\n\t\t\t\t'uniform float opacity;',\r\n\t\r\n\t\t\t\t'uniform int fogType;',\r\n\t\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t\t'uniform float fogDensity;',\r\n\t\t\t\t'uniform float fogNear;',\r\n\t\t\t\t'uniform float fogFar;',\r\n\t\t\t\t'uniform float alphaTest;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\t\r\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\t\r\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\t\r\n\t\t\t\t\t'if ( fogType > 0 ) {',\r\n\t\r\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t\t'float fogFactor = 0.0;',\r\n\t\r\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\t\r\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\t\r\n\t\t\t\t\t\t'} else {',\r\n\t\r\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\t\r\n\t\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\t\r\n\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn b.id - a.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/GeometryUtils.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GeometryUtils = {\r\n\t\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\t\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( geometry ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/ImageUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n\t */\r\n\t\r\n\tTHREE.ImageUtils = {\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\t\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\ttexture.image = image;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t}, undefined, function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\ttexture.sourceFile = url;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\t\r\n\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\tloader.load( array[ i ], function ( image ) {\r\n\t\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\t\r\n\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, undefined, onError );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTexture: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTextureCube: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMap: function ( image, depth ) {\r\n\t\r\n\t\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\t\r\n\t\t\tvar cross = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar subtract = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar normalize = function ( a ) {\r\n\t\r\n\t\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tdepth = depth | 1;\r\n\t\r\n\t\t\tvar width = image.width;\r\n\t\t\tvar height = image.height;\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0 );\r\n\t\r\n\t\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\t\tvar imageData = context.createImageData( width, height );\r\n\t\t\tvar output = imageData.data;\r\n\t\r\n\t\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\t\r\n\t\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\t\r\n\t\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\t\r\n\t\t\t\t\tvar points = [];\r\n\t\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\r\n\t\t\t\t\tvar normals = [];\r\n\t\t\t\t\tvar num_points = points.length;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\t\r\n\t\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\t\r\n\t\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 3 ] = 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcontext.putImageData( imageData, 0, 0 );\r\n\t\r\n\t\t\treturn canvas;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateDataTexture: function ( width, height, color ) {\r\n\t\r\n\t\t\tvar size = width * height;\r\n\t\t\tvar data = new Uint8Array( 3 * size );\r\n\t\r\n\t\t\tvar r = Math.floor( color.r * 255 );\r\n\t\t\tvar g = Math.floor( color.g * 255 );\r\n\t\t\tvar b = Math.floor( color.b * 255 );\r\n\t\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\t\r\n\t\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\t\tdata[ i * 3 + 2 ] = b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/SceneUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SceneUtils = {\r\n\t\r\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\t\r\n\t\t\tvar group = new THREE.Group();\r\n\t\r\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn group;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdetach: function ( child, parent, scene ) {\r\n\t\r\n\t\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\t\tparent.remove( child );\r\n\t\t\tscene.add( child );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tattach: function ( child, scene, parent ) {\r\n\t\r\n\t\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\t\tchild.applyMatrix( matrixWorldInverse );\r\n\t\r\n\t\t\tscene.remove( child );\r\n\t\t\tparent.add( child );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/FontUtils.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For Text operations in three.js (See TextGeometry)\r\n\t *\r\n\t * It uses techniques used in:\r\n\t *\r\n\t *\tTriangulation ported from AS3\r\n\t *\t\tSimple Polygon Triangulation\r\n\t *\t\thttp://actionsnippet.com/?p=1462\r\n\t *\r\n\t * \tA Method to triangulate shapes with holes\r\n\t *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.FontUtils = {\r\n\t\r\n\t\tfaces: {},\r\n\t\r\n\t\t// Just for now. face[weight][style]\r\n\t\r\n\t\tface: 'helvetiker',\r\n\t\tweight: 'normal',\r\n\t\tstyle: 'normal',\r\n\t\tsize: 150,\r\n\t\tdivisions: 10,\r\n\t\r\n\t\tgetFace: function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\t\r\n\t\t\t} catch ( e ) {\r\n\t\r\n\t\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadFace: function ( data ) {\r\n\t\r\n\t\t\tvar family = data.familyName.toLowerCase();\r\n\t\r\n\t\t\tvar ThreeFont = this;\r\n\t\r\n\t\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdrawText: function ( text ) {\r\n\t\r\n\t\t\t// RenderText\r\n\t\r\n\t\t\tvar i,\r\n\t\t\t\tface = this.getFace(),\r\n\t\t\t\tscale = this.size / face.resolution,\r\n\t\t\t\toffset = 0,\r\n\t\t\t\tchars = String( text ).split( '' ),\r\n\t\t\t\tlength = chars.length;\r\n\t\r\n\t\t\tvar fontPaths = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\tvar path = new THREE.Path();\r\n\t\r\n\t\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\t\toffset += ret.offset;\r\n\t\r\n\t\t\t\tfontPaths.push( ret.path );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// get the width\r\n\t\r\n\t\t\tvar width = offset / 2;\r\n\t\t\t//\r\n\t\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t\t//\r\n\t\t\t// \tallPts[ p ].x -= width;\r\n\t\t\t//\r\n\t\t\t// }\r\n\t\r\n\t\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t\t//extract.contour = allPts;\r\n\t\r\n\t\t\t//extract.paths = fontPaths;\r\n\t\t\t//extract.offset = width;\r\n\t\r\n\t\t\treturn { paths: fontPaths, offset: width };\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\t\r\n\t\t\tvar pts = [];\r\n\t\r\n\t\t\tvar i, i2, divisions,\r\n\t\t\t\toutline, action, length,\r\n\t\t\t\tscaleX, scaleY,\r\n\t\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\t\tlaste,\r\n\t\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\t\r\n\t\t\tif ( ! glyph ) return;\r\n\t\r\n\t\t\tif ( glyph.o ) {\r\n\t\r\n\t\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\t\tlength = outline.length;\r\n\t\r\n\t\t\t\tscaleX = scale;\r\n\t\t\t\tscaleY = scale;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < length; ) {\r\n\t\r\n\t\t\t\t\taction = outline[ i ++ ];\r\n\t\r\n\t\t\t\t\t//console.log( action );\r\n\t\r\n\t\t\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\t\t\tcase 'm':\r\n\t\r\n\t\t\t\t\t\t// Move To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'l':\r\n\t\r\n\t\t\t\t\t\t// Line To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'q':\r\n\t\r\n\t\t\t\t\t\t// QuadraticCurveTo\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'b':\r\n\t\r\n\t\t\t\t\t\t// Cubic Bezier Curve\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\t\r\n\t\t// Parameters\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\t\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\t\r\n\t\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\t\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\t\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\t\r\n\t\tTHREE.FontUtils.size = size;\r\n\t\tTHREE.FontUtils.divisions = curveSegments;\r\n\t\r\n\t\tTHREE.FontUtils.face = font;\r\n\t\tTHREE.FontUtils.weight = weight;\r\n\t\tTHREE.FontUtils.style = style;\r\n\t\r\n\t\t// Get a Font data json object\r\n\t\r\n\t\tvar data = THREE.FontUtils.drawText( text );\r\n\t\r\n\t\tvar paths = data.paths;\r\n\t\tvar shapes = [];\r\n\t\r\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This code is a quick port of code written in C++ which was submitted to\r\n\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t * See original code and more information here:\r\n\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t *\r\n\t * ported to actionscript by Zevan Rosser\r\n\t * www.actionsnippet.com\r\n\t *\r\n\t * ported to javascript by Joshua Koo\r\n\t * http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t( function ( namespace ) {\r\n\t\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t// takes in an contour array and returns\r\n\t\r\n\t\tvar process = function ( contour, indices ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\r\n\t\t\tif ( n < 3 ) return null;\r\n\t\r\n\t\t\tvar result = [],\r\n\t\t\t\tverts = [],\r\n\t\t\t\tvertIndices = [];\r\n\t\r\n\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\t\r\n\t\t\tvar u, v, w;\r\n\t\r\n\t\t\tif ( area( contour ) > 0.0 ) {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar nv = n;\r\n\t\r\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\t\r\n\t\t\tvar count = 2 * nv;   /* error detection */\r\n\t\r\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\t\r\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\t\r\n\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\t\r\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\t\r\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t//return null;\r\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\t\r\n\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\treturn result;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\t\r\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\t\r\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\t\r\n\t\t\t\t\tvar a, b, c, s, t;\r\n\t\r\n\t\t\t\t\t/* true names of the vertices */\r\n\t\r\n\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\tc = verts[ w ];\r\n\t\r\n\t\t\t\t\t/* output Triangle */\r\n\t\r\n\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\tcontour[ c ] ] );\r\n\t\r\n\t\r\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\t\r\n\t\t\t\t\t/* remove v from the remaining polygon */\r\n\t\r\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\t\r\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnv --;\r\n\t\r\n\t\t\t\t\t/* reset error detection counter */\r\n\t\r\n\t\t\t\t\tcount = 2 * nv;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( indices ) return vertIndices;\r\n\t\t\treturn result;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// calculate area of the contour polygon\r\n\t\r\n\t\tvar area = function ( contour ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\t\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\t\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn a * 0.5;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\t\r\n\t\t\tvar p;\r\n\t\t\tvar ax, ay, bx, by;\r\n\t\t\tvar cx, cy, px, py;\r\n\t\r\n\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\tay = contour[ verts[ u ] ].y;\r\n\t\r\n\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\tby = contour[ verts[ v ] ].y;\r\n\t\r\n\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\tcy = contour[ verts[ w ] ].y;\r\n\t\r\n\t\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\t\r\n\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\t\r\n\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\tcX = bx - ax;  cY = by - ay;\r\n\t\r\n\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\t\r\n\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\t\r\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\t\r\n\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\t\r\n\t\t\t\t// see if p is inside triangle abc\r\n\t\r\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\t\r\n\t\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\tnamespace.Triangulate = process;\r\n\t\tnamespace.Triangulate.area = area;\r\n\t\r\n\t\treturn namespace;\r\n\t\r\n\t} )( THREE.FontUtils );\r\n\t\r\n\t// To use the typeface.js face files, hook up the API\r\n\t\r\n\tTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\n\tif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\t\r\n\t// File:src/extras/audio/Audio.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Audio = function ( listener ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Audio';\r\n\t\r\n\t\tthis.context = listener.context;\r\n\t\tthis.source = this.context.createBufferSource();\r\n\t\tthis.source.onended = this.onEnded.bind( this );\r\n\t\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\t\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\t\r\n\t\tthis.autoplay = false;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\t\r\n\tTHREE.Audio.prototype.load = function ( file ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', file, true );\r\n\t\trequest.responseType = 'arraybuffer';\r\n\t\trequest.onload = function ( e ) {\r\n\t\r\n\t\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\t\r\n\t\t\t\tscope.source.buffer = buffer;\r\n\t\r\n\t\t\t\tif ( scope.autoplay ) scope.play();\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\trequest.send();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.play = function () {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar source = this.context.createBufferSource();\r\n\t\r\n\t\tsource.buffer = this.source.buffer;\r\n\t\tsource.loop = this.source.loop;\r\n\t\tsource.onended = this.source.onended;\r\n\t\tsource.start( 0, this.startTime );\r\n\t\tsource.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\tthis.isPlaying = true;\r\n\t\r\n\t\tthis.source = source;\r\n\t\r\n\t\tthis.connect();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.pause = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = this.context.currentTime;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.stop = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.connect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.connect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.disconnect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.disconnect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.connect();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.filter = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getFilter = function () {\r\n\t\r\n\t\treturn this.filter;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\t\r\n\t\tthis.playbackRate = value;\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\t\r\n\t\treturn this.playbackRate;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.onEnded = function() {\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\t\r\n\t\tthis.source.loop = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getLoop = function () {\r\n\t\r\n\t\treturn this.source.loop;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\t\r\n\t\tthis.panner.refDistance = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRefDistance = function () {\r\n\t\r\n\t\treturn this.panner.refDistance;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\t\r\n\t\tthis.panner.rolloffFactor = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\t\r\n\t\treturn this.panner.rolloffFactor;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\t\r\n\t\tthis.gain.gain.value = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getVolume = function () {\r\n\t\r\n\t\treturn this.gain.gain.value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/audio/AudioListener.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AudioListener = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'AudioListener';\r\n\t\r\n\t\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\t\r\n\tTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\tvar orientation = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tvar listener = this.context.listener;\r\n\t\t\tvar up = this.up;\r\n\t\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\t\r\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/core/Curve.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of Curve methods\r\n\t * .getPoint(t), getTangent(t)\r\n\t * .getPointAt(u), getTagentAt(u)\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following classes subclasses THREE.Curve:\r\n\t *\r\n\t * -- 2d classes --\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.SplineCurve\r\n\t * THREE.ArcCurve\r\n\t * THREE.EllipseCurve\r\n\t *\r\n\t * -- 3d classes --\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.SplineCurve3\r\n\t * THREE.ClosedSplineCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve = function () {\r\n\t\r\n\t};\r\n\t\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\treturn null;\r\n\t\r\n\t};\r\n\t\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t );\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPoint( t )\r\n\t\r\n\tTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPointAt( u )\r\n\t\r\n\tTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get total curve arc length\r\n\t\r\n\tTHREE.Curve.prototype.getLength = function () {\r\n\t\r\n\t\tvar lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Get list of cumulative segment lengths\r\n\t\r\n\tTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\t\r\n\t\tif ( this.cacheArcLengths\r\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t&& ! this.needsUpdate ) {\r\n\t\r\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\treturn this.cacheArcLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tvar cache = [];\r\n\t\tvar current, last = this.getPoint( 0 );\r\n\t\tvar p, sum = 0;\r\n\t\r\n\t\tcache.push( 0 );\r\n\t\r\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\t\r\n\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheArcLengths = cache;\r\n\t\r\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.updateArcLengths = function() {\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\t\r\n\t};\r\n\t\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\t\r\n\tTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\t\r\n\t\tvar arcLengths = this.getLengths();\r\n\t\r\n\t\tvar i = 0, il = arcLengths.length;\r\n\t\r\n\t\tvar targetArcLength; // The targeted u distance value to get\r\n\t\r\n\t\tif ( distance ) {\r\n\t\r\n\t\t\ttargetArcLength = distance;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//var time = Date.now();\r\n\t\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\t\r\n\t\tvar low = 0, high = il - 1, comparison;\r\n\t\r\n\t\twhile ( low <= high ) {\r\n\t\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\t\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\t\r\n\t\t\tif ( comparison < 0 ) {\r\n\t\r\n\t\t\t\tlow = i + 1;\r\n\t\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\t\r\n\t\t\t\thigh = i - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t// DONE\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\ti = high;\r\n\t\r\n\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\t\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\t\r\n\t\t\tvar t = i / ( il - 1 );\r\n\t\t\treturn t;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\t\r\n\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\t\r\n\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\t\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\t\r\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\t\r\n\t\t// add that fractional amount to t\r\n\t\r\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\t\r\n\t\treturn t;\r\n\t\r\n\t};\r\n\t\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\t\r\n\tTHREE.Curve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar delta = 0.0001;\r\n\t\tvar t1 = t - delta;\r\n\t\tvar t2 = t + delta;\r\n\t\r\n\t\t// Capping in case of danger\r\n\t\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\t\r\n\t\tvar pt1 = this.getPoint( t1 );\r\n\t\tvar pt2 = this.getPoint( t2 );\r\n\t\r\n\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\treturn vec.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve.Utils = {\r\n\t\r\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Puay Bing, thanks for helping with this derivative!\r\n\t\r\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t\t3 * t * t * p3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\t// To check if my formulas are correct\r\n\t\r\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\t\r\n\t\t\treturn h00 + h10 + h01 + h11;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t * t2;\r\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// TODO: Transformation for Curves?\r\n\t\r\n\t/**************************************************************\r\n\t *\t3D Curves\r\n\t **************************************************************/\r\n\t\r\n\t// A Factory method for creating new curve subclasses\r\n\t\r\n\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\t\r\n\t\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\t\tconstructor.prototype.constructor = constructor;\r\n\t\tconstructor.prototype.getPoint = getPointFunc;\r\n\t\r\n\t\treturn constructor;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/CurvePath.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CurvePath = function () {\r\n\t\r\n\t\tthis.curves = [];\r\n\t\tthis.bends = [];\r\n\t\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\t\r\n\tTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t\t// TODO\r\n\t\t// If the ending of curve is not connected to the starting\r\n\t\t// or the next curve, then, this is not a real path\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.closePath = function() {\r\n\t\r\n\t\t// TODO Test\r\n\t\t// and verify for vector3 (needs to implement equals)\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\t\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\t\r\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\t\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\t\r\n\tTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\t\r\n\t\tvar d = t * this.getLength();\r\n\t\tvar curveLengths = this.getCurveLengths();\r\n\t\tvar i = 0, diff, curve;\r\n\t\r\n\t\t// To think about boundaries points.\r\n\t\r\n\t\twhile ( i < curveLengths.length ) {\r\n\t\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\t\r\n\t\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\t\tcurve = this.curves[ i ];\r\n\t\r\n\t\t\t\tvar u = 1 - diff / curve.getLength();\r\n\t\r\n\t\t\t\treturn curve.getPointAt( u );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\ti ++;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n\t};*/\r\n\t\r\n\t\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\t\r\n\tTHREE.CurvePath.prototype.getLength = function() {\r\n\t\r\n\t\tvar lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\t\r\n\tTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\t\r\n\t\t// We use cache values if curves and cache array are same length\r\n\t\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\t\r\n\t\t\treturn this.cacheLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\t\r\n\t\tvar lengths = [], sums = 0;\r\n\t\tvar i, il = this.curves.length;\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheLengths = lengths;\r\n\t\r\n\t\treturn lengths;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t// Returns min and max coordinates\r\n\t\r\n\tTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\t\r\n\t\tvar points = this.getPoints();\r\n\t\r\n\t\tvar maxX, maxY, maxZ;\r\n\t\tvar minX, minY, minZ;\r\n\t\r\n\t\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\t\tminX = minY = Number.POSITIVE_INFINITY;\r\n\t\r\n\t\tvar p, i, il, sum;\r\n\t\r\n\t\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\t\r\n\t\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\t\r\n\t\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = points[ i ];\r\n\t\r\n\t\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\t\telse if ( p.x < minX ) minX = p.x;\r\n\t\r\n\t\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\t\telse if ( p.y < minY ) minY = p.y;\r\n\t\r\n\t\t\tif ( v3 ) {\r\n\t\r\n\t\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsum.add( p );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar ret = {\r\n\t\r\n\t\t\tminX: minX,\r\n\t\t\tminY: minY,\r\n\t\t\tmaxX: maxX,\r\n\t\t\tmaxY: maxY\r\n\t\r\n\t\t};\r\n\t\r\n\t\tif ( v3 ) {\r\n\t\r\n\t\t\tret.maxZ = maxZ;\r\n\t\t\tret.minZ = minZ;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn ret;\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tCreate Geometries Helpers\r\n\t **************************************************************/\r\n\t\r\n\t/// Generate geometry from path points (for Line or Points objects)\r\n\t\r\n\tTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\t// Generate geometry from equidistant sampling along the path\r\n\t\r\n\tTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getSpacedPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tBend / Wrap Helper Methods\r\n\t **************************************************************/\r\n\t\r\n\t// Wrap path / Bend modifiers?\r\n\t\r\n\tTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\t\r\n\t\tthis.bends.push( bendpath );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getSpacedPoints( segments );\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// This returns getPoints() bend/wrapped around the contour of a path.\r\n\t// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\t\r\n\tTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\t\r\n\t\tvar bounds = this.getBoundingBox();\r\n\t\r\n\t\tvar i, il, p, oldX, oldY, xNorm;\r\n\t\r\n\t\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = oldPts[ i ];\r\n\t\r\n\t\t\toldX = p.x;\r\n\t\t\toldY = p.y;\r\n\t\r\n\t\t\txNorm = oldX / bounds.maxX;\r\n\t\r\n\t\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\t\r\n\t\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\t\r\n\t\t\t// check for out of bounds?\r\n\t\r\n\t\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\t\tvar normal = path.getTangent( xNorm );\r\n\t\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\t\r\n\t\t\tp.x = pathPt.x + normal.x;\r\n\t\t\tp.y = pathPt.y + normal.y;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Path.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t *\r\n\t **/\r\n\t\r\n\tTHREE.Path = function ( points ) {\r\n\t\r\n\t\tTHREE.CurvePath.call( this );\r\n\t\r\n\t\tthis.actions = [];\r\n\t\r\n\t\tif ( points ) {\r\n\t\r\n\t\t\tthis.fromPoints( points );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\n\tTHREE.Path.prototype.constructor = THREE.Path;\r\n\t\r\n\tTHREE.PathActions = {\r\n\t\r\n\t\tMOVE_TO: 'moveTo',\r\n\t\tLINE_TO: 'lineTo',\r\n\t\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\t\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\t\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\t\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\t\tELLIPSE: 'ellipse'\r\n\t};\r\n\t\r\n\t// TODO Clean up PATH API\r\n\t\r\n\t// Create path using straight lines to connect all points\r\n\t// - vectors: array of Vector2\r\n\t\r\n\tTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\t\r\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\t\r\n\t\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\t\r\n\t\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// startPath() endPath()?\r\n\t\r\n\tTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\t//---\r\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\t\tArray.prototype.push.apply( npts, pts );\r\n\t\r\n\t\tvar curve = new THREE.SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\t// FUTURE: Change the API or follow canvas API?\r\n\t\r\n\tTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\t THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\r\n\t };\r\n\t\r\n\t\r\n\tTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar args = [\r\n\t\t\taX, aY,\r\n\t\t\txRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle,\r\n\t\t\taClockwise,\r\n\t\t\taRotation || 0 // aRotation is optional.\r\n\t\t];\r\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\targs.push( lastPoint.x );\r\n\t\targs.push( lastPoint.y );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 40;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\t\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\t\r\n\t\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// if ( closedPath ) {\r\n\t\t//\r\n\t\t// \tpoints.push( points[ 0 ] );\r\n\t\t//\r\n\t\t// }\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t/* Return an array of vectors based on contour of the path */\r\n\t\r\n\tTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdivisions = divisions || 12;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tvar i, il, item, action, args;\r\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\t\tlaste, j,\r\n\t\t\tt, tx, ty;\r\n\t\r\n\t\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\titem = this.actions[ i ];\r\n\t\r\n\t\t\taction = item.action;\r\n\t\t\targs = item.args;\r\n\t\r\n\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\tcase THREE.PathActions.MOVE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.LINE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 2 ];\r\n\t\t\t\tcpy  = args[ 3 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 4 ];\r\n\t\t\t\tcpy  = args[ 5 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tcpx2 = args[ 2 ];\r\n\t\t\t\tcpy2 = args[ 3 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\t\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\t\tvar spts = [ last ];\r\n\t\r\n\t\t\t\tvar n = divisions * args[ 0 ].length;\r\n\t\r\n\t\t\t\tspts = spts.concat( args[ 0 ] );\r\n\t\r\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\t\r\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ARC:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\t\taClockwise = !! args[ 5 ];\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ELLIPSE:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\t\taRotation = args[ 7 ];\r\n\t\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tvar cos, sin;\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\t\r\n\t\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\t\tsin = Math.sin( aRotation );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar x = tx, y = ty;\r\n\t\r\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t} // end switch\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t// Normalize to remove the closing point by default.\r\n\t\tvar lastPoint = points[ points.length - 1 ];\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\t\tpoints.splice( points.length - 1, 1 );\r\n\t\tif ( closedPath ) {\r\n\t\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// Breaks path into shapes\r\n\t//\r\n\t//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n\t//\t- solid shapes are defined clockwise (CW)\r\n\t//\t- holes are defined counterclockwise (CCW)\r\n\t//\r\n\t//\tIf parameter noHoles==true:\r\n\t//  - all subPaths are regarded as solid shapes\r\n\t//  - definition order CW/CCW has no relevance\r\n\t//\r\n\t\r\n\tTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\t\r\n\t\tfunction extractSubpaths( inActions ) {\r\n\t\r\n\t\t\tvar i, il, item, action, args;\r\n\t\r\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\t\r\n\t\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\titem = inActions[ i ];\r\n\t\r\n\t\t\t\targs = item.args;\r\n\t\t\t\taction = item.action;\r\n\t\r\n\t\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\t\r\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\t\tlastPath = new THREE.Path();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.log(subPaths);\r\n\t\r\n\t\t\treturn\tsubPaths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\t\r\n\t\t\tvar shapes = [];\r\n\t\r\n\t\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\t\r\n\t\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\tvar polyLen = inPolygon.length;\r\n\t\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tvar inside = false;\r\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\r\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\t\r\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\t\r\n\t\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\r\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\t\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\t\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tinside;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar subPaths = extractSubpaths( this.actions );\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\t\r\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\t\r\n\t\tif ( subPaths.length === 1 ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\t\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\t\tvar betterShapeHoles = [];\r\n\t\tvar newShapes = [];\r\n\t\tvar newShapeHoles = [];\r\n\t\tvar mainIdx = 0;\r\n\t\tvar tmpPoints;\r\n\t\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\t\r\n\t\t\tif ( solid ) {\r\n\t\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\t\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\t\t\t//console.log('cw', i);\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\t\r\n\t\t\t\t//console.log('ccw', i);\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tif ( newShapes.length > 1 ) {\r\n\t\r\n\t\t\tvar ambiguous = false;\r\n\t\t\tvar toChange = [];\r\n\t\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\t\r\n\t\t\t}\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\tif ( toChange.length > 0 ) {\r\n\t\r\n\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tmpHoles, j, jl;\r\n\t\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Shape.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\t\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\t\r\n\tTHREE.Shape = function () {\r\n\t\r\n\t\tTHREE.Path.apply( this, arguments );\r\n\t\tthis.holes = [];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\n\tTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\t\r\n\t// Convenience method to return ExtrudeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.extrude = function ( options ) {\r\n\t\r\n\t\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\t\treturn extruded;\r\n\t\r\n\t};\r\n\t\r\n\t// Convenience method to return ShapeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\t\r\n\t\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes\r\n\t\r\n\tTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Get points of shape and holes (keypoints based on segments parameter)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.extractAllSpacedPoints( divisions );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.extractAllPoints( divisions );\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n\t//\r\n\t// \treturn {\r\n\t//\r\n\t// \t\tshape: this.transform( bend, divisions ),\r\n\t// \t\tholes: this.getPointsHoles( divisions, bend )\r\n\t//\r\n\t// \t};\r\n\t//\r\n\t// };\r\n\t\r\n\t// Get points of shape and holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Shape.Utils = {\r\n\t\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\t\r\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\r\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\t\r\n\t\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\r\n\t\t\t\t\tvar perpSeg2;\r\n\t\t\t\t\tif ( limit > 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( perpSeg2 === limit ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\t\r\n\t\t\t\t\t// return real intersection point\r\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\t\r\n\t\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t\t// both segments are points\r\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#1  is a single point\r\n\t\t\t\t\tif ( seg1Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#2  is a single point\r\n\t\t\t\t\tif ( seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\t\tif ( seg1dx !== 0 ) {\r\n\t\r\n\t\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\r\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg2min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg1min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\r\n\t\t\t\t// The order of legs is important\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\t\r\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\t\r\n\t\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// angle != 180 deg.\r\n\t\r\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\t\r\n\t\t\t\t\tif ( from2toAngle > 0 ) {\r\n\t\r\n\t\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfunction removeHoles( contour, holes ) {\r\n\t\r\n\t\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\t\tvar hole;\r\n\t\r\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\r\n\t\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\t\r\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\t\r\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\t\r\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\t\r\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar indepHoles = [];\r\n\t\r\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\t\tshapePt, holePt,\r\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\t\ttmpHole1, tmpHole2;\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tindepHoles.push( h );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar minShapeIndex = 0;\r\n\t\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\r\n\t\t\t\t\tcounter --;\r\n\t\t\t\t\tif ( counter < 0 ) {\r\n\t\r\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t\t// which can be connected without intersections\r\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\t\r\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\t\tholeIndex\t= - 1;\r\n\t\r\n\t\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\t\r\n\t\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\t\r\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\t\r\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\t\r\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\t\r\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar i, il, f, face,\r\n\t\t\t\tkey, index,\r\n\t\t\t\tallPointsMap = {};\r\n\t\r\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\t\r\n\t\t\tvar allpoints = contour.concat();\r\n\t\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\t\r\n\t\t\t// prepare all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\t\r\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tallPointsMap[ key ] = i;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\t\r\n\t\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\t\r\n\t\t\t// check all face vertices against all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = triangles[ i ];\r\n\t\r\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\t\r\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\t\r\n\t\t\t\t\tindex = allPointsMap[ key ];\r\n\t\r\n\t\t\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tface[ f ] = index;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn triangles.concat();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisClockWise: function ( pts ) {\r\n\t\r\n\t\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Bezier Curves formulas obtained from\r\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\t\r\n\t\t// Quad Bezier Functions\r\n\t\r\n\t\tb2p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p1: function ( t, p ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p2: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Cubic Bezier Functions\r\n\t\r\n\t\tb3p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p1: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * k * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p2: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p3: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/LineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve = function ( v1, v2 ) {\r\n\t\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\t\r\n\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar point = this.v2.clone().sub( this.v1 );\r\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\t\r\n\t\treturn point;\r\n\t\r\n\t};\r\n\t\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\t\r\n\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\treturn this.getPoint( u );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\t\r\n\t\treturn tangent.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\t// returns unit vector\r\n\t\r\n\t\treturn vector.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\treturn new THREE.Vector2( tx, ty );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\tvar tangent = new THREE.Vector2( tx, ty );\r\n\t\ttangent.normalize();\r\n\t\r\n\t\treturn tangent;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/SplineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\t\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\t\r\n\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\t\r\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/EllipseCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tEllipse curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tthis.aX = aX;\r\n\t\tthis.aY = aY;\r\n\t\r\n\t\tthis.xRadius = xRadius;\r\n\t\tthis.yRadius = yRadius;\r\n\t\r\n\t\tthis.aStartAngle = aStartAngle;\r\n\t\tthis.aEndAngle = aEndAngle;\r\n\t\r\n\t\tthis.aClockwise = aClockwise;\r\n\t\t\r\n\t\tthis.aRotation = aRotation || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\t\r\n\tTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\r\n\t\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\t\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\t\r\n\t\tvar angle;\r\n\t\r\n\t\tif ( this.aClockwise === true ) {\r\n\t\r\n\t\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\t\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\t\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\t\r\n\t\t\tvar tx = x, ty = y;\r\n\t\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.Vector2( x, y );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/ArcCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tArc curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\n\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\t\r\n\t// File:src/extras/curves/LineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine3D\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v1, v2 ) {\r\n\t\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\t\tvector.multiplyScalar( t );\r\n\t\t\tvector.add( this.v1 );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/SplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.SplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\t\tvar point1 = points[ intPoint ];\r\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CatmullRomCurve3.js\r\n\t\r\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\t\r\n\tTHREE.CatmullRomCurve3 = ( function() {\r\n\t\r\n\t\tvar\r\n\t\t\ttmp = new THREE.Vector3(),\r\n\t\t\tpx = new CubicPoly(),\r\n\t\t\tpy = new CubicPoly(),\r\n\t\t\tpz = new CubicPoly();\r\n\t\r\n\t\t/*\r\n\t\tBased on an optimized c++ solution in\r\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t\t - http://ideone.com/NoEbVM\r\n\t\r\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\t\twhich can be placed in CurveUtils.\r\n\t\t*/\r\n\t\r\n\t\tfunction CubicPoly() {\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\t\r\n\t\t\tthis.c0 = x0;\r\n\t\t\tthis.c1 = t0;\r\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\t\r\n\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\t\r\n\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\tt1 *= dt1;\r\n\t\t\tt2 *= dt1;\r\n\t\r\n\t\t\t// initCubicPoly\r\n\t\t\tthis.init( x1, x2, t1, t2 );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\t\r\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.calc = function( t ) {\r\n\t\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t2 * t;\r\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Subclass Three.js curve\r\n\t\treturn THREE.Curve.create(\r\n\t\r\n\t\t\tfunction ( p /* array of Vector3 */ ) {\r\n\t\r\n\t\t\t\tthis.points = p || [];\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction ( t ) {\r\n\t\r\n\t\t\t\tvar points = this.points,\r\n\t\t\t\t\tpoint, intPoint, weight, l;\r\n\t\r\n\t\t\t\tl = points.length;\r\n\t\r\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\t\r\n\t\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\t\r\n\t\t\t\t\tintPoint = l - 2;\r\n\t\t\t\t\tweight = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar p0, p1, p2, p3;\r\n\t\r\n\t\t\t\tif ( intPoint === 0 ) {\r\n\t\r\n\t\t\t\t\t// extrapolate first point\r\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\t\tp0 = tmp;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tp1 = points[ intPoint ];\r\n\t\t\t\tp2 = points[ intPoint + 1 ];\r\n\t\r\n\t\t\t\tif ( intPoint + 2 < l ) {\r\n\t\r\n\t\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// extrapolate last point\r\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\t\tp3 = tmp;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\t\r\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\t\r\n\t\t\t\t\t// safety check for repeated points\r\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\t\r\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\t\r\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\t\r\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\t\tpx.calc( weight ),\r\n\t\t\t\t\tpy.calc( weight ),\r\n\t\t\t\t\tpz.calc( weight )\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\treturn v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t);\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/curves/ClosedSplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tClosed Spline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\t\r\n\t\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/animation/AnimationHandler.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\tTHREE.AnimationHandler = {\r\n\t\r\n\t\tLINEAR: 0,\r\n\t\tCATMULLROM: 1,\r\n\t\tCATMULLROM_FORWARD: 2,\r\n\t\r\n\t\t//\r\n\t\r\n\t\tadd: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tget: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tremove: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t//\r\n\t\r\n\t\tanimations: [],\r\n\t\r\n\t\tinit: function ( data ) {\r\n\t\r\n\t\t\tif ( data.initialized === true ) return data;\r\n\t\r\n\t\t\t// loop through all keys\r\n\t\r\n\t\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t// remove minus times\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\t\r\n\t\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// create quaternions\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\t\r\n\t\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// prepare morph target keys\r\n\t\r\n\t\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\t// get all used\r\n\t\r\n\t\t\t\t\tvar usedMorphTargets = {};\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\t\r\n\t\r\n\t\t\t\t\t// set all used on all frames\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar influences = {};\r\n\t\r\n\t\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// remove all keys that are on the same time\r\n\t\r\n\t\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\t\tk --;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// set index\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.initialized = true;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( root ) {\r\n\t\r\n\t\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\t\r\n\t\t\t\thierarchy.push( root );\r\n\t\r\n\t\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// setup hierarchy\r\n\t\r\n\t\t\tvar hierarchy = [];\r\n\t\r\n\t\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\t\r\n\t\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn hierarchy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplay: function ( animation ) {\r\n\t\r\n\t\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.push( animation );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function ( animation ) {\r\n\t\r\n\t\t\tvar index = this.animations.indexOf( animation );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( deltaTimeMS ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/Animation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Animation = function ( root, data ) {\r\n\t\r\n\t\tthis.root = root;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\t\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 1;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.loop = true;\r\n\t\tthis.weight = 0;\r\n\t\r\n\t\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Animation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Animation,\r\n\t\r\n\t\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\t\r\n\t\tplay: function ( startTime, weight ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\tthis.reset();\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function() {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treset: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( object.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\t\tanimations: {},\r\n\t\t\t\t\t\tblending: {\r\n\t\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar name = this.data.name;\r\n\t\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\t\tvar animationCache = animations[ name ];\r\n\t\r\n\t\t\t\tif ( animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tanimationCache = {\r\n\t\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tanimations[ name ] = animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Get keys to match our current time\r\n\t\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\tvar type = this.keyTypes[ t ];\r\n\t\r\n\t\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tresetBlendWeights: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache;\r\n\t\r\n\t\t\t\tif ( animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar blending = animationCache.blending;\r\n\t\r\n\t\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\t\tblending.scaleWeight = 0.0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: ( function() {\r\n\t\r\n\t\t\tvar points = [];\r\n\t\t\tvar target = new THREE.Vector3();\r\n\t\t\tvar newVector = new THREE.Vector3();\r\n\t\t\tvar newQuat = new THREE.Quaternion();\r\n\t\r\n\t\t\t// Catmull-Rom spline\r\n\t\r\n\t\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\t\r\n\t\t\t\tvar c = [], v3 = [],\r\n\t\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\t\tpa, pb, pc, pd;\r\n\t\r\n\t\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\t\tc[ 1 ] = intPoint;\r\n\t\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\t\r\n\t\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\t\tpd = points[ c[ 3 ] ];\r\n\t\r\n\t\t\t\tw2 = weight * weight;\r\n\t\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\t\r\n\t\t\t\treturn v3;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function ( delta ) {\r\n\t\r\n\t\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t\tif ( this.weight === 0 )\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\t\r\n\t\t\t\t\tif ( this.loop ) {\r\n\t\r\n\t\t\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\t\tthis.currentTime += duration;\r\n\t\r\n\t\t\t\t\t\tthis.reset();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tthis.stop();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\t\tvar blending = object.animationCache.blending;\r\n\t\r\n\t\t\t\t\t// loop through pos/rot/scl\r\n\t\r\n\t\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t// get keys\r\n\t\r\n\t\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\t\r\n\t\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\t\r\n\t\t\t\t\t\t// interpolate\r\n\t\r\n\t\t\t\t\t\tif ( type === \"pos\" ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\t\r\n\t\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\t\r\n\t\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\r\n\t\t\t\t\t\t\t\tvar vector = object.position;\r\n\t\r\n\t\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\t\r\n\t\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\t\r\n\t\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\t\ttarget.normalize();\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\t\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\t\r\n\t\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\t\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\tgetNextKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key > 0 ? key : 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/KeyFrameAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author khang duong\r\n\t * @author erik kitson\r\n\t */\r\n\t\r\n\tTHREE.KeyFrameAnimation = function ( data ) {\r\n\t\r\n\t\tthis.root = data.node;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 0.001;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused = true;\r\n\t\tthis.loop = true;\r\n\t\r\n\t\t// initialize to first keyframes\r\n\t\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\t\tobj = this.hierarchy[ h ];\r\n\t\r\n\t\t\tif ( keys.length && sids ) {\r\n\t\r\n\t\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\t\r\n\t\t\t\t\tif ( next ) {\r\n\t\r\n\t\t\t\t\t\tnext.apply( sid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.KeyFrameAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.KeyFrameAnimation,\r\n\t\r\n\t\tplay: function ( startTime ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) {\r\n\t\r\n\t\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\t\t// reset key cache\r\n\t\r\n\t\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\t\tobject,\r\n\t\t\t\t\tnode;\r\n\t\r\n\t\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\t\tif ( node.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\t\r\n\t\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.update( 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.isPaused = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\t\tthis.isPaused  = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t\t// reset JIT matrix and remove cache\r\n\t\r\n\t\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( node.animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\t\r\n\t\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\t\tobj.matrix = original;\r\n\t\r\n\t\t\t\t\tdelete node.animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tvar keys = node.keys,\r\n\t\t\t\t\tanimationCache = node.animationCache;\r\n\t\r\n\t\r\n\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\t\r\n\t\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNextKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/MorphAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com\r\n\t * @author willy-vvu / http://willy-vvu.github.io\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimation = function ( mesh ) {\r\n\t\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.frames = mesh.morphTargetInfluences.length;\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.duration = 1000;\r\n\t\tthis.loop = true;\r\n\t\tthis.lastFrame = 0;\r\n\t\tthis.currentFrame = 0;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MorphAnimation,\r\n\t\r\n\t\tplay: function () {\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpause: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= this.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\t\r\n\t\t\tvar frameTime = this.duration / this.frames;\r\n\t\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\t\r\n\t\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( frame !== this.currentFrame ) {\r\n\t\r\n\t\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\t\tinfluences[ frame ] = 0;\r\n\t\r\n\t\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\t\tthis.currentFrame = frame;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\t\r\n\t\t\tinfluences[ frame ] = mix;\r\n\t\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/BoxGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n\t */\r\n\t\r\n\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'BoxGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\t\r\n\t\tthis.widthSegments = widthSegments || 1;\r\n\t\tthis.heightSegments = heightSegments || 1;\r\n\t\tthis.depthSegments = depthSegments || 1;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\tvar depth_half = depth / 2;\r\n\t\r\n\t\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\t\r\n\t\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\t\r\n\t\t\tvar w, ix, iy,\r\n\t\t\tgridX = scope.widthSegments,\r\n\t\t\tgridY = scope.heightSegments,\r\n\t\t\twidth_half = width / 2,\r\n\t\t\theight_half = height / 2,\r\n\t\t\toffset = scope.vertices.length;\r\n\t\r\n\t\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'z';\r\n\t\r\n\t\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'y';\r\n\t\t\t\tgridY = scope.depthSegments;\r\n\t\r\n\t\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\t\r\n\t\t\t\tw = 'x';\r\n\t\t\t\tgridX = scope.depthSegments;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gridX1 = gridX + 1,\r\n\t\t\tgridY1 = gridY + 1,\r\n\t\t\tsegment_width = width / gridX,\r\n\t\t\tsegment_height = height / gridY,\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\r\n\t\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\t\tvector[ w ] = depth;\r\n\t\r\n\t\t\t\t\tscope.vertices.push( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\t\r\n\t\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\t\r\n\tTHREE.BoxGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.BoxGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.depth,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.depthSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\t\r\n\t// File:src/extras/geometries/CircleGeometry.js\r\n\t\r\n\t/**\r\n\t * @author hughes\r\n\t */\r\n\t\r\n\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar i, uvs = [],\r\n\t\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\t\r\n\t\tthis.vertices.push( center );\r\n\t\tuvs.push( centerUV );\r\n\t\r\n\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\t\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\t\r\n\tTHREE.CircleGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CircleBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar vertices = segments + 2;\r\n\t\r\n\t\tvar positions = new Float32Array( vertices * 3 );\r\n\t\tvar normals = new Float32Array( vertices * 3 );\r\n\t\tvar uvs = new Float32Array( vertices * 2 );\r\n\t\r\n\t\t// center data is already zero, but need to set a few extras\r\n\t\tnormals[ 3 ] = 1.0;\r\n\t\tuvs[ 0 ] = 0.5;\r\n\t\tuvs[ 1 ] = 0.5;\r\n\t\r\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\t\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\t\r\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\t\r\n\t\t\tnormals[ i + 2 ] = 1; // normal z\r\n\t\r\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tindices.push( i );\r\n\t\t\tindices.push( i + 1 );\r\n\t\t\tindices.push( 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CylinderGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CylinderGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\t\theight = height !== undefined ? height : 100;\r\n\t\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\theightSegments = heightSegments || 1;\r\n\t\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\t\r\n\t\tvar heightHalf = height / 2;\r\n\t\r\n\t\tvar x, y, vertices = [], uvs = [];\r\n\t\r\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\t\tvar uvsRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\t\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\t\tuvs.push( uvsRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\t\tvar na, nb;\r\n\t\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\tif ( radiusTop !== 0 ) {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\t\r\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\t\r\n\t\t\t\tvar n1 = na.clone();\r\n\t\t\t\tvar n2 = na.clone();\r\n\t\t\t\tvar n3 = nb.clone();\r\n\t\t\t\tvar n4 = nb.clone();\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// top cap\r\n\t\r\n\t\tif ( openEnded === false && radiusTop > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// bottom cap\r\n\t\r\n\t\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\t\r\n\tTHREE.CylinderGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry(\r\n\t\t\tthis.parameters.radiusTop,\r\n\t\t\tthis.parameters.radiusBottom,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.openEnded,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/EdgesGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\t\r\n\t\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tvar geometry2;\r\n\t\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tgeometry2 = new THREE.Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tgeometry2 = geometry.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\t\r\n\t\tvar vertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\thash[ key ].face2 = i;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar coords = [];\r\n\t\r\n\t\tfor ( var key in hash ) {\r\n\t\r\n\t\t\tvar h = hash[ key ];\r\n\t\r\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\t\r\n\t// File:src/extras/geometries/ExtrudeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  amount: <int>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n\t *\r\n\t *  uvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\r\n\t\t\tshapes = [];\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\t\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t// can't really use automatic vertex normals\r\n\t\t// as then front and back sides get smoothed too\r\n\t\t// should do separate smoothing just for sides\r\n\t\r\n\t\t//this.computeVertexNormals();\r\n\t\r\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tvar sl = shapes.length;\r\n\t\r\n\t\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\tvar shape = shapes[ s ];\r\n\t\t\tthis.addShape( shape, options );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\t\r\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\t\r\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\t\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\r\n\t\tvar extrudePath = options.extrudePath;\r\n\t\tvar extrudePts, extrudeByPath = false;\r\n\t\r\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\t\r\n\t\tvar splineTube, binormal, normal, position2;\r\n\t\tif ( extrudePath ) {\r\n\t\r\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\t\r\n\t\t\textrudeByPath = true;\r\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\t\r\n\t\t\t// SETUP TNB variables\r\n\t\r\n\t\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t\t// TODO1 - have a .isClosed in spline?\r\n\t\r\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\t\r\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\t\r\n\t\t\tbinormal = new THREE.Vector3();\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\t\tposition2 = new THREE.Vector3();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Safeguards if bevels are not enabled\r\n\t\r\n\t\tif ( ! bevelEnabled ) {\r\n\t\r\n\t\t\tbevelSegments = 0;\r\n\t\t\tbevelThickness = 0;\r\n\t\t\tbevelSize = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Variables initialization\r\n\t\r\n\t\tvar ahole, h, hl; // looping of holes\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\t\r\n\t\t/* Vertices */\r\n\t\r\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\tvertices = vertices.concat( ahole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction scalePt2 ( pt, vec, size ) {\r\n\t\r\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\t\r\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar b, bs, t, z,\r\n\t\t\tvert, vlen = vertices.length,\r\n\t\t\tface, flen = faces.length;\r\n\t\r\n\t\r\n\t\t// Find directions for point movement\r\n\t\r\n\t\r\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t//\r\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\r\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\t\r\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\t\r\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\r\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\r\n\t\t\t// check for collinear edges\r\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\t\r\n\t\t\t\t// not collinear\r\n\t\r\n\t\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\r\n\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\r\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\r\n\t\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// handle special case of collinear edges\r\n\t\r\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\t\tif ( v_prev_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( direction_eq ) {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar contourMovements = [];\r\n\t\r\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\t// console.log('i,j,k', i, j , k)\r\n\t\r\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\toneHoleMovements = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\t\r\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t\r\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\r\n\t\t\t//z = bevelThickness * t;\r\n\t\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t\t//bs = bevelSize * t; // linear\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tbs = bevelSize;\r\n\t\r\n\t\t// Back facing vertices\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\tv( vert.x, vert.y, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\t\r\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Add stepped vertices...\r\n\t\t// Including front facing vertices\r\n\t\r\n\t\tvar s;\r\n\t\r\n\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\t\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\t\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Add bevel segments planes\r\n\t\r\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/* Faces */\r\n\t\r\n\t\t// Top and bottom faces\r\n\t\r\n\t\tbuildLidFaces();\r\n\t\r\n\t\t// Sides faces\r\n\t\r\n\t\tbuildSideFaces();\r\n\t\r\n\t\r\n\t\t/////  Internal functions\r\n\t\r\n\t\tfunction buildLidFaces() {\r\n\t\r\n\t\t\tif ( bevelEnabled ) {\r\n\t\r\n\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\tvar offset = vlen * layer;\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\toffset = vlen * layer;\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Create faces for the z-sides of the shape\r\n\t\r\n\t\tfunction buildSideFaces() {\r\n\t\r\n\t\t\tvar layeroffset = 0;\r\n\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\tlayeroffset += contour.length;\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\tsidewalls( ahole, layeroffset );\r\n\t\r\n\t\t\t\t//, true\r\n\t\t\t\tlayeroffset += ahole.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction sidewalls( contour, layeroffset ) {\r\n\t\r\n\t\t\tvar j, k;\r\n\t\t\ti = contour.length;\r\n\t\r\n\t\t\twhile ( -- i >= 0 ) {\r\n\t\r\n\t\t\t\tj = i;\r\n\t\t\t\tk = i - 1;\r\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\t\r\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\t\r\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\t\r\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\t\r\n\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\t\r\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction v( x, y, z ) {\r\n\t\r\n\t\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f3( a, b, c ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\t\td += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\t\r\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t\t];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\t\tvar d = vertices[ indexD ];\r\n\t\r\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ShapeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t *\r\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n\t * ExtrudeGeometry.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n\t *\r\n\t *\tmaterial: <int> // material index for front and back faces\r\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ShapeGeometry';\r\n\t\r\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\t\r\n\t/**\r\n\t * Add an array of shapes to THREE.ShapeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.addShape( shapes[ i ], options );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tif ( options === undefined ) options = {};\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar material = options.material;\r\n\t\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar i, l, hole;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\t\r\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\thole = holes[ i ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ i ] = hole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\t\r\n\t\t// Vertices\r\n\t\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\thole = holes[ i ];\r\n\t\t\tvertices = vertices.concat( hole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar vert, vlen = vertices.length;\r\n\t\tvar face, flen = faces.length;\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = vertices[ i ];\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\tface = faces[ i ];\r\n\t\r\n\t\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\t\tvar c = face[ 2 ] + shapesOffset;\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/LatheGeometry.js\r\n\t\r\n\t/**\r\n\t * @author astrodud / http://astrodud.isgreat.org/\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\t// points - to create a closed torus, one must use a set of points \r\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n\t// segments - the number of circumference segments to create\r\n\t// phiStart - the starting radian\r\n\t// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n\t//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\t\r\n\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'LatheGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || 2 * Math.PI;\r\n\t\r\n\t\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\t\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\t\r\n\t\t\tvar c = Math.cos( phi ),\r\n\t\t\t\ts = Math.sin( phi );\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar pt = points[ j ];\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\t\tvertex.z = pt.z;\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar np = points.length;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar base = j + np * i;\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + np;\r\n\t\t\t\tvar c = base + 1 + np;\r\n\t\t\t\tvar d = base + 1;\r\n\t\r\n\t\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\t\tvar v1 = v0 + inversePointLength;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\t\r\n\t// File:src/extras/geometries/PlaneGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\t\r\n\tTHREE.PlaneGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\t\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\t\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\t\r\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\t\r\n\t\tvar offset = 0;\r\n\t\tvar offset2 = 0;\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\t\r\n\t\t\t\tvertices[ offset ] = x;\r\n\t\t\t\tvertices[ offset + 1 ] = - y;\r\n\t\r\n\t\t\t\tnormals[ offset + 2 ] = 1;\r\n\t\r\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\t\r\n\t\t\t\toffset += 3;\r\n\t\t\t\toffset2 += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\toffset = 0;\r\n\t\r\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\tindices[ offset ] = a;\r\n\t\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\t\tindices[ offset + 2 ] = d;\r\n\t\r\n\t\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\t\tindices[ offset + 5 ] = d;\r\n\t\r\n\t\t\t\toffset += 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/RingGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t */\r\n\t\r\n\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'RingGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tinnerRadius = innerRadius || 0;\r\n\t\touterRadius = outerRadius || 50;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\t\r\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tradius += radiusStep;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar segment = o + thetaSegment;\r\n\t\r\n\t\t\t\tvar v1 = segment;\r\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t\tv1 = segment;\r\n\t\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\t\tv3 = segment + 1;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\t\r\n\tTHREE.RingGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.RingGeometry(\r\n\t\t\tthis.parameters.innerRadius,\r\n\t\t\tthis.parameters.outerRadius,\r\n\t\t\tthis.parameters.thetaSegments,\r\n\t\t\tthis.parameters.phiSegments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\t\r\n\tTHREE.SphereGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * based on THREE.SphereGeometry\r\n\t */\r\n\t\r\n\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\t\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\t\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\t\r\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\t\r\n\t\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\r\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / widthSegments;\r\n\t\r\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\r\n\t\t\t\tnormal.set( px, py, pz ).normalize();\r\n\t\r\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\t\r\n\t\t\t\tverticesRow.push( index );\r\n\t\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\t\r\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', positions );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TextGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For creating 3D text geometry in three.js\r\n\t *\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *  size: \t\t\t<float>, \t// size of the text\r\n\t *  height: \t\t<float>, \t// thickness to extrude text\r\n\t *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n\t *\r\n\t *  font: \t\t\t<string>,\t\t// font name\r\n\t *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n\t *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n\t *\r\n\t *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n\t *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n\t *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n\t *  }\r\n\t *\r\n\t */\r\n\t\r\n\t/*\tUsage Examples\r\n\t\r\n\t\t// TextGeometry wrapper\r\n\t\r\n\t\tvar text3d = new TextGeometry( text, options );\r\n\t\r\n\t\t// Complete manner\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\t\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\t\r\n\t*/\r\n\t\r\n\t\r\n\tTHREE.TextGeometry = function ( text, parameters ) {\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\t\r\n\t\t// translate parameters to ExtrudeGeometry API\r\n\t\r\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\t\r\n\t\t// defaults\r\n\t\r\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\t\r\n\t\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\t\r\n\t\tthis.type = 'TextGeometry';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\n\tTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TorusGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n\t */\r\n\t\r\n\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\ttubularSegments = tubularSegments || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\t\r\n\t\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\t\r\n\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\t\r\n\tTHREE.TorusGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.arc\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TorusKnotGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n\t */\r\n\t\r\n\tTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q,\r\n\t\t\theightScale: heightScale\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 64;\r\n\t\ttubularSegments = tubularSegments || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\t\theightScale = heightScale || 1;\r\n\t\r\n\t\tvar grid = new Array( radialSegments );\r\n\t\tvar tang = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3();\r\n\t\tvar bitan = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\t\ttang.subVectors( p2, p1 );\r\n\t\t\tn.addVectors( p2, p1 );\r\n\t\r\n\t\t\tbitan.crossVectors( tang, n );\r\n\t\t\tn.crossVectors( bitan, tang );\r\n\t\t\tbitan.normalize();\r\n\t\t\tn.normalize();\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\t\r\n\t\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\t\tvar d = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\t\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = in_q / in_p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\t\r\n\t\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\t\r\n\t\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.p,\r\n\t\t\tthis.parameters.q,\r\n\t\t\tthis.parameters.heightScale\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TubeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t *\r\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n\t *\r\n\t * Creates a tube which extrudes along a 3d spline\r\n\t *\r\n\t * Uses parallel transport frames as described in\r\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\t */\r\n\t\r\n\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TubeGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\tsegments: segments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\t\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\t\r\n\t\tvar grid = [];\r\n\t\r\n\t\tvar scope = this,\r\n\t\r\n\t\t\ttangent,\r\n\t\t\tnormal,\r\n\t\t\tbinormal,\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\r\n\t\t\tu, v, r,\r\n\t\r\n\t\t\tcx, cy,\r\n\t\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\t\ti, j,\r\n\t\t\tip, jp,\r\n\t\t\ta, b, c, d,\r\n\t\t\tuva, uvb, uvc, uvd;\r\n\t\r\n\t\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\t\ttangents = frames.tangents,\r\n\t\t\tnormals = frames.normals,\r\n\t\t\tbinormals = frames.binormals;\r\n\t\r\n\t\t// proxy internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\tfunction vert( x, y, z ) {\r\n\t\r\n\t\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// construct the grid\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tgrid[ i ] = [];\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\tpos = path.getPointAt( u );\r\n\t\r\n\t\t\ttangent = tangents[ i ];\r\n\t\t\tnormal = normals[ i ];\r\n\t\t\tbinormal = binormals[ i ];\r\n\t\r\n\t\t\tr = radius * taper( u );\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\t\r\n\t\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tcy = r * Math.sin( v );\r\n\t\r\n\t\t\t\tpos2.copy( pos );\r\n\t\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// construct the mesh\r\n\t\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\t\r\n\t\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\t\tb = grid[ ip ][ j ];\r\n\t\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\t\td = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\t\r\n\tTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\t\r\n\t\treturn 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\t\r\n\t\treturn Math.sin( Math.PI * u );\r\n\t\r\n\t};\r\n\t\r\n\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\n\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\t\r\n\t\tvar\tnormal = new THREE.Vector3(),\r\n\t\r\n\t\t\ttangents = [],\r\n\t\t\tnormals = [],\r\n\t\t\tbinormals = [],\r\n\t\r\n\t\t\tvec = new THREE.Vector3(),\r\n\t\t\tmat = new THREE.Matrix4(),\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\t\ttheta,\r\n\t\t\tepsilon = 0.0001,\r\n\t\t\tsmallest,\r\n\t\r\n\t\t\ttx, ty, tz,\r\n\t\t\ti, u;\r\n\t\r\n\t\r\n\t\t// expose internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\t// compute the tangent vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\t\ttangents[ i ].normalize();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinitialNormal3();\r\n\t\r\n\t\t/*\r\n\t\tfunction initialNormal1(lastBinormal) {\r\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\t}\r\n\t\r\n\t\tfunction initialNormal2() {\r\n\t\r\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\t\tvar t2 = path.getTangentAt( epsilon );\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t\tfunction initialNormal3() {\r\n\t\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the smallest tangent xyz component\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tsmallest = Number.MAX_VALUE;\r\n\t\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\t\r\n\t\t\tif ( tx <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ty <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( tz <= smallest ) {\r\n\t\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\t\r\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\t\r\n\t\t\tif ( vec.length() > epsilon ) {\r\n\t\r\n\t\t\t\tvec.normalize();\r\n\t\r\n\t\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\t\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\t\r\n\t\tif ( closed ) {\r\n\t\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\t\ttheta /= ( numpoints - 1 );\r\n\t\r\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\t\r\n\t\t\t\ttheta = - theta;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\t\t// twist a little...\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PolyhedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\t\r\n\t\tvar that = this;\r\n\t\r\n\t\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar p = this.vertices;\r\n\t\r\n\t\tvar faces = [];\r\n\t\r\n\t\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\t\r\n\t\t\tvar v1 = p[ indices[ i ] ];\r\n\t\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\t\r\n\t\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar centroid = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tsubdivide( faces[ i ], detail );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Handle case when face straddles the seam\r\n\t\r\n\t\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\tvar x0 = uvs[ 0 ].x;\r\n\t\t\tvar x1 = uvs[ 1 ].x;\r\n\t\t\tvar x2 = uvs[ 2 ].x;\r\n\t\r\n\t\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\t\r\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\t\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\t\r\n\t\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Apply radius\r\n\t\r\n\t\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Merge vertices\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t\r\n\t\t// Project vector onto sphere's surface\r\n\t\r\n\t\tfunction prepare( vector ) {\r\n\t\r\n\t\t\tvar vertex = vector.normalize().clone();\r\n\t\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\t\r\n\t\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\t\r\n\t\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\t\r\n\t\t\treturn vertex;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Approximate a curved face with recursively sub-divided triangles.\r\n\t\r\n\t\tfunction make( v1, v2, v3, materialIndex ) {\r\n\t\r\n\t\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\t\tthat.faces.push( face );\r\n\t\r\n\t\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\t\r\n\t\t\tvar azi = azimuth( centroid );\r\n\t\r\n\t\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t\t] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Analytically subdivide a face to the required detail level.\r\n\t\r\n\t\tfunction subdivide( face, detail ) {\r\n\t\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\t\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\t\tvar v = [];\r\n\t\r\n\t\t\tvar materialIndex = face.materialIndex;\r\n\t\r\n\t\t\t// Construct all of the vertices for this subdivision.\r\n\t\r\n\t\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\t\r\n\t\t\t\tv[ i ] = [];\r\n\t\r\n\t\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar rows = cols - i;\r\n\t\r\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\t\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Construct all of the faces.\r\n\t\r\n\t\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\t\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\t\r\n\t\tfunction azimuth( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle above the XZ plane.\r\n\t\r\n\t\tfunction inclination( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\t\r\n\t\tfunction correctUV( uv, vector, azimuth ) {\r\n\t\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\t\treturn uv.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\t\tthis.parameters.vertices,\r\n\t\t\tthis.parameters.indices,\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\treturn geometry.copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/DodecahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t */\r\n\t\r\n\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\t\r\n\t\tvar vertices = [\r\n\t\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t\t 1,  1, - 1,     1,  1,  1,\r\n\t\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t\t 0,  r, - t,     0,  r,  t,\r\n\t\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t\t r, - t,  0,     r,  t,  0,\r\n\t\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t\t- t,  0,  r,     t,  0,  r\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/IcosahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/OctahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TetrahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ParametricGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t *\r\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ParametricGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\t\r\n\t\tvar verts = this.vertices;\r\n\t\tvar faces = this.faces;\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\t\r\n\t\tvar i, j, p;\r\n\t\tvar u, v;\r\n\t\r\n\t\tvar sliceCount = slices + 1;\r\n\t\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\t\r\n\t\t\tv = i / stacks;\r\n\t\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\t\r\n\t\t\t\tu = j / slices;\r\n\t\r\n\t\t\t\tp = func( u, v );\r\n\t\t\t\tverts.push( p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar a, b, c, d;\r\n\t\tvar uva, uvb, uvc, uvd;\r\n\t\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\t\r\n\t\t\t\ta = i * sliceCount + j;\r\n\t\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// console.log(this);\r\n\t\r\n\t\t// magic bullet\r\n\t\t// var diff = this.mergeVertices();\r\n\t\t// console.log('removed ', diff, ' vertices by merging');\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\t\r\n\t// File:src/extras/geometries/WireframeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeGeometry = function ( geometry ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\t\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tif ( geometry.index !== null ) {\r\n\t\r\n\t\t\t\t// Indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar indices = geometry.index.array;\r\n\t\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t\tif ( drawcalls.length === 0 ) {\r\n\t\r\n\t\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// allocate maximal size\r\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\t\r\n\t\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\t\r\n\t\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\t\r\n\t\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\t\tvar count = drawcall.count;\r\n\t\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\t\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\t\tvar numTris = numEdges / 3;\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\t\r\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\t\r\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\t\r\n\t// File:src/extras/helpers/AxisHelper.js\r\n\t\r\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AxisHelper = function ( size ) {\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t0, 0, 0,  size, 0, 0,\r\n\t\t\t0, 0, 0,  0, size, 0,\r\n\t\t\t0, 0, 0,  0, 0, size\r\n\t\t] );\r\n\t\r\n\t\tvar colors = new Float32Array( [\r\n\t\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t\t0, 0, 1,  0, 0.6, 1\r\n\t\t] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\t\r\n\t// File:src/extras/helpers/ArrowHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\t\r\n\tTHREE.ArrowHelper = ( function () {\r\n\t\r\n\t\tvar lineGeometry = new THREE.Geometry();\r\n\t\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\t\r\n\t\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\t\r\n\t\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\t\tif ( length === undefined ) length = 1;\r\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\t\tthis.position.copy( origin );\r\n\t\t\t\r\n\t\t\tif ( headLength < length ) {\r\n\t\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\t\tthis.add( this.line );\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.cone );\r\n\t\r\n\t\t\tthis.setDirection( dir );\r\n\t\t\tthis.setLength( length, headLength, headWidth );\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\t\r\n\t\tvar axis = new THREE.Vector3();\r\n\t\tvar radians;\r\n\t\r\n\t\treturn function setDirection( dir ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\t\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\t\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\t\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\tif ( headLength < length ){\r\n\t\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\t\tthis.line.updateMatrix();\r\n\t\t}\r\n\t\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\t\r\n\t\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\t\tthis.cone.material.color.set( color );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/BoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BoxHelper = function ( object ) {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\t\r\n\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\tthis.update( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\t\r\n\tTHREE.BoxHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\treturn function ( object ) {\r\n\t\r\n\t\t\tbox.setFromObject( object );\r\n\t\r\n\t\t\tif ( box.empty() ) return;\r\n\t\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\t\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\t\r\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\r\n\t\t}\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/helpers/BoundingBoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\t// a helper to show the world-axis-aligned bounding box for an object\r\n\t\r\n\tTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.box = new THREE.Box3();\r\n\t\r\n\t\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.box.setFromObject( this.object );\r\n\t\r\n\t\tthis.box.size( this.scale );\r\n\t\r\n\t\tthis.box.center( this.position );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/CameraHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\t\r\n\tTHREE.CameraHelper = function ( camera ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\t\r\n\t\tvar pointMap = {};\r\n\t\r\n\t\t// colors\r\n\t\r\n\t\tvar hexFrustum = 0xffaa00;\r\n\t\tvar hexCone = 0xff0000;\r\n\t\tvar hexUp = 0x00aaff;\r\n\t\tvar hexTarget = 0xffffff;\r\n\t\tvar hexCross = 0x333333;\r\n\t\r\n\t\t// near\r\n\t\r\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\t\r\n\t\t// far\r\n\t\r\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\t\r\n\t\t// sides\r\n\t\r\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\t\r\n\t\t// cone\r\n\t\r\n\t\taddLine( \"p\", \"n1\", hexCone );\r\n\t\taddLine( \"p\", \"n2\", hexCone );\r\n\t\taddLine( \"p\", \"n3\", hexCone );\r\n\t\taddLine( \"p\", \"n4\", hexCone );\r\n\t\r\n\t\t// up\r\n\t\r\n\t\taddLine( \"u1\", \"u2\", hexUp );\r\n\t\taddLine( \"u2\", \"u3\", hexUp );\r\n\t\taddLine( \"u3\", \"u1\", hexUp );\r\n\t\r\n\t\t// target\r\n\t\r\n\t\taddLine( \"c\", \"t\", hexTarget );\r\n\t\taddLine( \"p\", \"c\", hexCross );\r\n\t\r\n\t\t// cross\r\n\t\r\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\t\r\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\t\r\n\t\tfunction addLine( a, b, hex ) {\r\n\t\r\n\t\t\taddPoint( a, hex );\r\n\t\t\taddPoint( b, hex );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction addPoint( id, hex ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\t\r\n\t\t\t\tpointMap[ id ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.camera = camera;\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.pointMap = pointMap;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\t\r\n\tTHREE.CameraHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry, pointMap;\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar camera = new THREE.Camera();\r\n\t\r\n\t\tvar setPoint = function ( point, x, y, z ) {\r\n\t\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\t\r\n\t\t\tvar points = pointMap[ point ];\r\n\t\r\n\t\t\tif ( points !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\t\r\n\t\t\tvar w = 1, h = 1;\r\n\t\r\n\t\t\t// we need just camera projection matrix\r\n\t\t\t// world matrix must be identity\r\n\t\r\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\t\r\n\t\t\t// center / target\r\n\t\r\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\t\r\n\t\t\t// near\r\n\t\r\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\t\r\n\t\t\t// far\r\n\t\r\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\t\r\n\t\t\t// up\r\n\t\r\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\t\r\n\t\t\t// cross\r\n\t\r\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\t\r\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\t\r\n\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/DirectionalLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t\t);\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\t\r\n\t\tgeometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t);\r\n\t\r\n\t\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.targetLine = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar v3 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\t\r\n\t\t\tthis.lightPlane.lookAt( v3 );\r\n\t\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/EdgesHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @param object THREE.Mesh whose geometry will be used\r\n\t * @param hex line color\r\n\t * @param thresholdAngle the minimum angle (in degrees),\r\n\t * between the face normals of adjacent faces,\r\n\t * that is required to render an edge. A value of 10 means\r\n\t * an edge is only rendered if the angle is at least 10 degrees.\r\n\t */\r\n\t\r\n\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\t\r\n\t// File:src/extras/helpers/FaceNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\tvar idx = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/GridHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GridHelper = function ( size, step ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tthis.color1 = new THREE.Color( 0x444444 );\r\n\t\tthis.color2 = new THREE.Color( 0x888888 );\r\n\t\r\n\t\tfor ( var i = - size; i <= size; i += step ) {\r\n\t\r\n\t\t\tgeometry.vertices.push(\r\n\t\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t\t);\r\n\t\r\n\t\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\t\r\n\t\t\tgeometry.colors.push( color, color, color, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\t\r\n\tTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\t\r\n\t\tthis.color1.set( colorCenterLine );\r\n\t\tthis.color2.set( colorGrid );\r\n\t\r\n\t\tthis.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/HemisphereLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\t\r\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.lightSphere );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightSphere.geometry.dispose();\r\n\t\tthis.lightSphere.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/PointLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\r\n\t\tvar d = light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\t\r\n\tTHREE.PointLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SkeletonHelper.js\r\n\t\r\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkeletonHelper = function ( object ) {\r\n\t\r\n\t\tthis.bones = this.getBoneList( object );\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.dynamic = true;\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.root = object;\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\t\r\n\t\tvar boneList = [];\r\n\t\r\n\t\tif ( object instanceof THREE.Bone ) {\r\n\t\r\n\t\t\tboneList.push( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\t\r\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn boneList;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\t\r\n\t\tvar boneMatrix = new THREE.Matrix4();\r\n\t\r\n\t\tvar j = 0;\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tj += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SpotLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.SpotLightHelper = function ( light ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\t\r\n\t\tgeometry.translate( 0, - 0.5, 0 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\r\n\t\tthis.cone = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar vector2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\t\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\t\r\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\r\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\t\r\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/VertexNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\t\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.attributes.normal.count\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\t\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\t\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\t\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\t\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/WireframeHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\t\r\n\t// File:src/extras/objects/ImmediateRenderObject.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.ImmediateRenderObject = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.render = function ( renderCallback ) {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\t\r\n\t// File:src/extras/objects/MorphBlendMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\t\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\t\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\t\r\n\t\tvar name = \"__default\";\r\n\t\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\t\r\n\t\tvar fps = numFrames / 1;\r\n\t\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\t\r\n\t\tvar animation = {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\r\n\t\t\tlength: end - start + 1,\r\n\t\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\t\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\t\r\n\t\t\tactive: false,\r\n\t\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\t\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\t\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\t\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var name in frameRanges ) {\r\n\t\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.weight = weight;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = time;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\t\r\n\t\tvar time = 0;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\ttime = animation.time;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn time;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\t\r\n\t\tvar duration = - 1;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tduration = animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn duration;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.active = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\t\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\t\r\n\t\t\tif ( ! animation.active ) continue;\r\n\t\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\t\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\t\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\t\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\t\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\t\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\t\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\t\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\t\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Export the THREE object for **Node.js**, with\r\n\t// backwards-compatibility for the old `require()` API. If we're in\r\n\t// the browser, add `_` as a global object via a string identifier,\r\n\t// for Closure Compiler \"advanced\" mode.\r\n\tif (true) {\r\n\t  if (typeof module !== 'undefined' && module.exports) {\r\n\t    exports = module.exports = THREE;\r\n\t  }\r\n\t  exports.THREE = THREE;\r\n\t} else {\r\n\t  this['THREE'] = THREE;\r\n\t}\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// react-bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 07e665b50b3d27572cff","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('react-app'));\n\n\n\n// WEBPACK FOOTER //\n// ./react/app.js","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 1\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar getVendorPropertyName = require('./getVendorPropertyName');\n\nmodule.exports = function(target, sources) {\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  var prefixed = {};\n  for (var key in to) {\n    prefixed[getVendorPropertyName(key)] = to[key]\n  }\n\n  return prefixed\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/appendVendorPrefix.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar insertRule = require('./insertRule');\nvar vendorPrefix = require('./getVendorPrefix')();\nvar index = 0;\n\nmodule.exports = function(keyframes) {\n  // random name\n  var name = 'anim_' + (++index) + (+new Date);\n  var css = \"@\" + vendorPrefix + \"keyframes \" + name + \" {\";\n\n  for (var key in keyframes) {\n    css += key + \" {\";\n\n    for (var property in keyframes[key]) {\n      var part = \":\" + keyframes[key][property] + \";\";\n      // We do vendor prefix for every property\n      css += vendorPrefix + property + part;\n      css += property + part;\n    }\n\n    css += \"}\";\n  }\n\n  css += \"}\";\n\n  insertRule(css);\n\n  return name\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/insertKeyframesRule.js\n// module id = 4\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 6\n// module chunks = 0","import React, { Component } from 'react';\nimport STLViewer from '../../src/STLViewer';\n// two kinds of colorArr\nconst colorArr1 = [\n  '#018006',\n  '#e7282e',\n  '#8d7a3a',\n  '#28bfe5',\n  '#447c76',\n  '#0400bf',\n  '#c77acb',\n  '#c77acb',\n  '#ffff00',\n  '#ffff00',\n  '#f89090',\n  '#ef149a'\n];\nconst colorArr2 = [\n  '#018006',\n  '#28bfe5',\n  '#c77acb',\n  '#ef149a',\n  '#447c76',\n  '#0400bf',\n  '#c77acb',\n  '#f89090',\n  '#ffff00',\n  '#ffff00',\n  '#e7282e',\n  '#8d7a3a'\n];\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: colorArr1,\n      model: []\n    };\n\n    this.clickBlue = this.clickBlue.bind(this);\n    this.clickRed = this.clickRed.bind(this);\n  }\n\n  clickBlue(e) {\n    e.preventDefault();\n    this.setState({ color: colorArr2 });\n  }\n\n  clickRed(e) {\n    e.preventDefault();\n    this.setState({ color: colorArr1 });\n  }\n\n  onChange = ({ target }) => {\n    const { files } = target;\n    // console.log('files', files);\n    let model = [];\n    for (let i = 0; i < files.length; i++) {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(files[i]);\n      reader.onload = () => {\n        model.push(reader.result);\n      };\n    }\n    this.setState({ model });\n  };\n\n  render() {\n    return (\n      <div>\n        <input id=\"image-file\" type=\"file\" multiple onChange={this.onChange} />\n        <STLViewer\n          modelColor={this.state.color}\n          lights={[[0.5, 1, -1], [1, 1, 1]]}\n          rotate={true}\n          model={this.state.model}\n        />\n        <button onClick={this.clickRed}>red</button>\n        <button onClick={this.clickBlue}>blue</button>\n      </div>\n    );\n  }\n}\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./react/containers/App.js","import THREE from './Three';\nimport ReactDOM from 'react-dom';\nlet OrbitControls = require('three-orbit-controls')(THREE);\n\nconst DIRECTIONAL_LIGHT = 'directionalLight';\n\nclass Paint {\n  constructor() {\n    this.scene = new THREE.Scene();\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    this.reqNumber = 0;\n  }\n\n  init(context) {\n    this.component = context;\n    this.width = context.props.width;\n    this.height = context.props.height;\n    this.modelColor = context.props.modelColor;\n    this.backgroundColor = context.props.backgroundColor;\n    this.orbitControls = context.props.orbitControls;\n    this.rotate = context.props.rotate;\n    this.cameraX = context.props.cameraX;\n    this.cameraY = context.props.cameraY;\n    this.cameraZ = context.props.cameraZ;\n    this.rotationSpeeds = context.props.rotationSpeeds;\n    this.lights = context.props.lights;\n    this.lightColor = context.props.lightColor;\n    this.model = context.props.model;\n\n    if (this.mesh !== undefined) {\n      this.scene.remove(this.mesh);\n      this.mesh.geometry.dispose();\n      this.mesh.material.dispose();\n      // this.scene.remove(this.grid);\n    }\n    const directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n    if (directionalLightObj) {\n      this.scene.remove(directionalLightObj);\n    }\n\n    if (this.animationRequestId) {\n      cancelAnimationFrame(this.animationRequestId);\n    }\n\n    //Detector.addGetWebGLMessage();\n    this.distance = 10000;\n\n    // lights processing\n    const hasMultipleLights = this.lights.reduce(\n      (acc, item) => acc && Array.isArray(item),\n      true\n    );\n    if (hasMultipleLights) {\n      this.lights.forEach(this.addLight.bind(this));\n    } else {\n      this.addLight(this.lights);\n    }\n\n    this.reqNumber += 1;\n    this.addSTLToScene(this.reqNumber);\n  }\n\n  addLight(lights, index = 0) {\n    this.scene.add(new THREE.AmbientLight(0x444444));\n  }\n\n  loadSTLFromUrl(url, reqId) {\n    return new Promise(resolve => {\n      this.loader.crossOrigin = '';\n      this.loader.loadFromUrl(url, geometry => {\n        if (this.reqNumber !== reqId) {\n          return;\n        }\n        resolve(geometry);\n      });\n    });\n  }\n\n  loadFromFile(file) {\n    return new Promise(resolve => {\n      this.loader.loadFromFile(file, geometry => {\n        resolve(geometry);\n      });\n    });\n  }\n\n  addSTLToScene(reqId) {\n    let loadPromise;\n    let group = new THREE.Object3D();\n    this.model.forEach((eachModal, key) => {\n      this.loader = new THREE.STLLoader();\n      if (typeof eachModal === 'string') {\n        loadPromise = this.loadSTLFromUrl(eachModal, reqId);\n      } else if (eachModal instanceof ArrayBuffer) {\n        loadPromise = this.loadFromFile(eachModal);\n      } else {\n        return Promise.resolve(null);\n      }\n      loadPromise.then(geometry => {\n        // Calculate mesh noramls for MeshLambertMaterial.\n\n        // geometry.computeFaceNormals();\n        // geometry.computeVertexNormals();\n\n        // Center the object\n        geometry.center();\n\n        let material = new THREE.MeshLambertMaterial({\n          overdraw: true,\n          color: this.modelColor[key % 12]\n        });\n        console.log('this.modelColor[key % 12]', this.modelColor[key % 12]);\n        if (geometry.hasColors) {\n          material = new THREE.MeshPhongMaterial({\n            opacity: geometry.alpha,\n            vertexColors: THREE.VertexColors\n          });\n        }\n\n        this.mesh = new THREE.Mesh(geometry, material);\n        // Set the object's dimensions\n        geometry.computeBoundingBox();\n        this.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n        this.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n        this.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n        if (this.rotate) {\n          this.mesh.rotation.x = this.rotationSpeeds[0];\n          this.mesh.rotation.y = this.rotationSpeeds[1];\n          this.mesh.rotation.z = this.rotationSpeeds[2];\n        }\n        this.mesh.position.set(0, 0, 0);\n        this.mesh.rotation.set(0, -Math.PI / 2, 0);\n        group.add(this.mesh);\n      });\n    });\n    this.scene.add(group);\n    this.addCamera();\n    this.addInteractionControls();\n    this.addToReactComponent();\n\n    // Start the animation\n    this.animate();\n  }\n\n  addCamera() {\n    // Add the camera\n    this.camera = new THREE.PerspectiveCamera(\n      30,\n      this.width / this.height,\n      1,\n      this.distance\n    );\n\n    if (this.cameraZ === null) {\n      this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n    }\n\n    this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n\n    this.scene.add(this.camera);\n\n    // this.renderer.set;\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(this.backgroundColor, 1);\n  }\n\n  addInteractionControls() {\n    // Add controls for mouse interaction\n    if (this.orbitControls) {\n      this.controls = new OrbitControls(\n        this.camera,\n        ReactDOM.findDOMNode(this.component)\n      );\n      this.controls.enableKeys = false;\n      this.controls.addEventListener('change', this.orbitRender.bind(this));\n    }\n  }\n\n  addToReactComponent() {\n    // Add to the React Component\n    ReactDOM.findDOMNode(this.component).replaceChild(\n      this.renderer.domElement,\n      ReactDOM.findDOMNode(this.component).firstChild\n    );\n  }\n\n  /**\n   * Animate the scene\n   * @returns {void}\n   */\n  animate() {\n    // note: three.js includes requestAnimationFrame shim\n    if (this.rotate) {\n      this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n    }\n\n    if (this.orbitControls) {\n      this.controls.update();\n    }\n    this.render();\n  }\n\n  /**\n   * Render the scene after turning off the rotation\n   * @returns {void}\n   */\n  orbitRender() {\n    if (this.rotate) {\n      this.rotate = false;\n    }\n\n    this.render();\n  }\n\n  /**\n   * Deallocate Mesh, renderer context.\n   * @returns {void}\n   */\n  clean() {\n    if (this.mesh !== undefined) {\n      this.mesh.geometry.dispose();\n      this.mesh.material.dispose();\n      this.scene.remove(this.mesh);\n      delete this.mesh;\n    }\n    const directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n    if (directionalLightObj) {\n      this.scene.remove(directionalLightObj);\n    }\n\n    if (this.animationRequestId) {\n      cancelAnimationFrame(this.animationRequestId);\n    }\n    this.renderer.dispose();\n    this.renderer.forceContextLoss();\n  }\n\n  /**\n   * Render the scene\n   * @returns {void}\n   */\n  render() {\n    if (this.mesh && this.rotate) {\n      this.mesh.rotation.x += this.rotationSpeeds[0];\n      this.mesh.rotation.y += this.rotationSpeeds[1];\n      this.mesh.rotation.z += this.rotationSpeeds[2];\n    }\n\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n\nexport default Paint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Paint.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScaleLoader } from 'halogenium';\nimport Paint from './Paint';\n\nclass STLViewer extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    url: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    backgroundColor: PropTypes.string,\n    modelColor: PropTypes.array,\n    rotate: PropTypes.bool,\n    orbitControls: PropTypes.bool,\n    cameraX: PropTypes.number,\n    cameraY: PropTypes.number,\n    cameraZ: PropTypes.number,\n    lights: PropTypes.array,\n    lightColor: PropTypes.string,\n    rotationSpeeds: PropTypes.arrayOf(PropTypes.number),\n    model: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(ArrayBuffer)])\n    ).isRequired\n  };\n\n  static defaultProps = {\n    backgroundColor: '#EAEAEA',\n    modelColor: [],\n    height: 400,\n    width: 400,\n    rotate: true,\n    orbitControls: true,\n    cameraX: 0,\n    cameraY: 0,\n    cameraZ: null,\n    lights: [0, 0, 1],\n    lightColor: '#ffffff',\n    rotationSpeeds: [0, 0, 0.02],\n    model: undefined\n  };\n\n  componentDidMount() {\n    this.paint = new Paint();\n    this.paint.init(this);\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return JSON.stringify(nextProps) !== JSON.stringify(this.props);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    this.props = nextProps;\n    this.paint.init(this);\n  }\n\n  componentWillUnmount() {\n    this.paint.clean();\n    delete this.paint;\n  }\n\n  render() {\n    const { width, height, modelColor } = this.props;\n    return (\n      <div\n        className={this.props.className}\n        style={{\n          width: width,\n          height: height,\n          overflow: 'hidden'\n        }}\n      >\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }}\n        >\n          <ScaleLoader color=\"red\" size=\"16px\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nmodule.exports = STLViewer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/STLViewer.js","var THREE = require('three');\n\n//\n// STL Loader added\n//\n/**\n * @author aleeper / http://adamleeper.com/\n * @author mrdoob / http://mrdoob.com/\n * @author gero3 / https://github.com/gero3\n *\n * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n *\n * Supports both binary and ASCII encoded files, with automatic detection of type.\n *\n * Limitations:\n *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\n *\n * Usage:\n *  var loader = new THREE.STLLoader();\n *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n *    scene.add( new THREE.Mesh( geometry ) );\n *  });\n *\n * For binary STLs geometry might contain colors for vertices. To use it:\n *  // use the same code to load STL as above\n *  if (geometry.hasColors) {\n *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\n *  } else { .... }\n *  var mesh = new THREE.Mesh( geometry, material );\n */\n\nTHREE.STLLoader = function(manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.STLLoader.prototype = {\n  constructor: THREE.STLLoader,\n\n  loadFromUrl: function(url, onLoad, onProgress, onError) {\n    var scope = this;\n\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setResponseType('arraybuffer');\n    loader.load(\n      url,\n      function(text) {\n        onLoad(scope.parse(text));\n      },\n      onProgress,\n      onError\n    );\n  },\n\n  loadFromFile: function(buffer, onLoad) {\n    var scope = this;\n    onLoad(scope.parse(buffer));\n  },\n\n  parse: function(data) {\n    var isBinary = function() {\n      var expect, face_size, n_faces, reader;\n      reader = new DataView(binData);\n      face_size = (32 / 8) * 3 + (32 / 8) * 3 * 3 + 16 / 8;\n      n_faces = reader.getUint32(80, true);\n      expect = 80 + 32 / 8 + n_faces * face_size;\n\n      if (expect === reader.byteLength) {\n        return true;\n      }\n\n      // some binary files will have different size from expected,\n      // checking characters higher than ASCII to confirm is binary\n      var fileLength = reader.byteLength;\n      for (var index = 0; index < fileLength; index++) {\n        if (reader.getUint8(index, false) > 127) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    var binData = this.ensureBinary(data);\n\n    return isBinary()\n      ? this.parseBinary(binData)\n      : this.parseASCII(this.ensureString(data));\n  },\n\n  parseBinary: function(data) {\n    var reader = new DataView(data);\n    var faces = reader.getUint32(80, true);\n\n    var r,\n      g,\n      b,\n      hasColors = false,\n      colors;\n    var defaultR, defaultG, defaultB, alpha;\n\n    // process STL header\n    // check for default color in header (\"COLOR=rgba\" sequence).\n\n    for (var index = 0; index < 80 - 10; index++) {\n      if (\n        reader.getUint32(index, false) == 0x434f4c4f /*COLO*/ &&\n        reader.getUint8(index + 4) == 0x52 /*'R'*/ &&\n        reader.getUint8(index + 5) == 0x3d /*'='*/\n      ) {\n        hasColors = true;\n        colors = new Float32Array(faces * 3 * 3);\n\n        defaultR = reader.getUint8(index + 6) / 255;\n        defaultG = reader.getUint8(index + 7) / 255;\n        defaultB = reader.getUint8(index + 8) / 255;\n        alpha = reader.getUint8(index + 9) / 255;\n      }\n    }\n\n    var dataOffset = 84;\n    var faceLength = 12 * 4 + 2;\n\n    var offset = 0;\n\n    var geometry = new THREE.BufferGeometry();\n\n    var vertices = new Float32Array(faces * 3 * 3);\n    var normals = new Float32Array(faces * 3 * 3);\n\n    for (var face = 0; face < faces; face++) {\n      var start = dataOffset + face * faceLength;\n      var normalX = reader.getFloat32(start, true);\n      var normalY = reader.getFloat32(start + 4, true);\n      var normalZ = reader.getFloat32(start + 8, true);\n\n      if (hasColors) {\n        var packedColor = reader.getUint16(start + 48, true);\n\n        if ((packedColor & 0x8000) === 0) {\n          // facet has its own unique color\n\n          r = (packedColor & 0x1f) / 31;\n          g = ((packedColor >> 5) & 0x1f) / 31;\n          b = ((packedColor >> 10) & 0x1f) / 31;\n        } else {\n          r = defaultR;\n          g = defaultG;\n          b = defaultB;\n        }\n      }\n\n      for (var i = 1; i <= 3; i++) {\n        var vertexstart = start + i * 12;\n\n        vertices[offset] = reader.getFloat32(vertexstart, true);\n        vertices[offset + 1] = reader.getFloat32(vertexstart + 4, true);\n        vertices[offset + 2] = reader.getFloat32(vertexstart + 8, true);\n\n        normals[offset] = normalX;\n        normals[offset + 1] = normalY;\n        normals[offset + 2] = normalZ;\n\n        if (hasColors) {\n          colors[offset] = r;\n          colors[offset + 1] = g;\n          colors[offset + 2] = b;\n        }\n\n        offset += 3;\n      }\n    }\n\n    geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n    geometry.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n\n    if (hasColors) {\n      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n      geometry.hasColors = true;\n      geometry.alpha = alpha;\n    }\n\n    return geometry;\n  },\n\n  parseASCII: function(data) {\n    var geometry,\n      length,\n      normal,\n      patternFace,\n      patternNormal,\n      patternVertex,\n      result,\n      text;\n    geometry = new THREE.Geometry();\n    patternFace = /facet([\\s\\S]*?)endfacet/g;\n\n    while ((result = patternFace.exec(data)) !== null) {\n      text = result[0];\n      patternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n      while ((result = patternNormal.exec(text)) !== null) {\n        normal = new THREE.Vector3(\n          parseFloat(result[1]),\n          parseFloat(result[3]),\n          parseFloat(result[5])\n        );\n      }\n\n      patternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n      while ((result = patternVertex.exec(text)) !== null) {\n        geometry.vertices.push(\n          new THREE.Vector3(\n            parseFloat(result[1]),\n            parseFloat(result[3]),\n            parseFloat(result[5])\n          )\n        );\n      }\n\n      length = geometry.vertices.length;\n\n      geometry.faces.push(\n        new THREE.Face3(length - 3, length - 2, length - 1, normal)\n      );\n    }\n\n    geometry.computeBoundingBox();\n    geometry.computeBoundingSphere();\n\n    return geometry;\n  },\n\n  ensureString: function(buf) {\n    if (typeof buf !== 'string') {\n      var array_buffer = new Uint8Array(buf);\n      var str = '';\n      for (var i = 0; i < buf.byteLength; i++) {\n        str += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n      }\n      return str;\n    } else {\n      return buf;\n    }\n  },\n\n  ensureBinary: function(buf) {\n    if (typeof buf === 'string') {\n      var array_buffer = new Uint8Array(buf.length);\n      for (var i = 0; i < buf.length; i++) {\n        array_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n      }\n      return array_buffer.buffer || array_buffer;\n    } else {\n      return buf;\n    }\n  }\n};\n\nif (typeof DataView === 'undefined') {\n  DataView = function(buffer, byteOffset, byteLength) {\n    this.buffer = buffer;\n    this.byteOffset = byteOffset || 0;\n    this.byteLength = byteLength || buffer.byteLength || buffer.length;\n    this._isString = typeof buffer === 'string';\n  };\n\n  DataView.prototype = {\n    _getCharCodes: function(buffer, start, length) {\n      start = start || 0;\n      length = length || buffer.length;\n      var end = start + length;\n      var codes = [];\n      for (var i = start; i < end; i++) {\n        codes.push(buffer.charCodeAt(i) & 0xff);\n      }\n      return codes;\n    },\n\n    _getBytes: function(length, byteOffset, littleEndian) {\n      var result;\n\n      // Handle the lack of endianness\n      if (littleEndian === undefined) {\n        littleEndian = this._littleEndian;\n      }\n\n      // Handle the lack of byteOffset\n      if (byteOffset === undefined) {\n        byteOffset = this.byteOffset;\n      } else {\n        byteOffset = this.byteOffset + byteOffset;\n      }\n\n      if (length === undefined) {\n        length = this.byteLength - byteOffset;\n      }\n\n      // Error Checking\n      if (typeof byteOffset !== 'number') {\n        throw new TypeError('DataView byteOffset is not a number');\n      }\n\n      if (length < 0 || byteOffset + length > this.byteLength) {\n        throw new Error(\n          'DataView length or (byteOffset+length) value is out of bounds'\n        );\n      }\n\n      if (this.isString) {\n        result = this._getCharCodes(\n          this.buffer,\n          byteOffset,\n          byteOffset + length\n        );\n      } else {\n        result = this.buffer.slice(byteOffset, byteOffset + length);\n      }\n\n      if (!littleEndian && length > 1) {\n        if (!(result instanceof Array)) {\n          result = Array.prototype.slice.call(result);\n        }\n\n        result.reverse();\n      }\n\n      return result;\n    },\n\n    // Compatibility functions on a String Buffer\n\n    getFloat64: function(byteOffset, littleEndian) {\n      var b = this._getBytes(8, byteOffset, littleEndian),\n        sign = 1 - 2 * (b[7] >> 7),\n        exponent =\n          ((((b[7] << 1) & 0xff) << 3) | (b[6] >> 4)) - ((1 << 10) - 1),\n        // Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\n        mantissa =\n          (b[6] & 0x0f) * Math.pow(2, 48) +\n          b[5] * Math.pow(2, 40) +\n          b[4] * Math.pow(2, 32) +\n          b[3] * Math.pow(2, 24) +\n          b[2] * Math.pow(2, 16) +\n          b[1] * Math.pow(2, 8) +\n          b[0];\n\n      if (exponent === 1024) {\n        if (mantissa !== 0) {\n          return NaN;\n        } else {\n          return sign * Infinity;\n        }\n      }\n\n      if (exponent === -1023) {\n        // Denormalized\n        return sign * mantissa * Math.pow(2, -1022 - 52);\n      }\n\n      return sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\n    },\n\n    getFloat32: function(byteOffset, littleEndian) {\n      var b = this._getBytes(4, byteOffset, littleEndian),\n        sign = 1 - 2 * (b[3] >> 7),\n        exponent = (((b[3] << 1) & 0xff) | (b[2] >> 7)) - 127,\n        mantissa = ((b[2] & 0x7f) << 16) | (b[1] << 8) | b[0];\n\n      if (exponent === 128) {\n        if (mantissa !== 0) {\n          return NaN;\n        } else {\n          return sign * Infinity;\n        }\n      }\n\n      if (exponent === -127) {\n        // Denormalized\n        return sign * mantissa * Math.pow(2, -126 - 23);\n      }\n\n      return sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\n    },\n\n    getInt32: function(byteOffset, littleEndian) {\n      var b = this._getBytes(4, byteOffset, littleEndian);\n      return (b[3] << 24) | (b[2] << 16) | (b[1] << 8) | b[0];\n    },\n\n    getUint32: function(byteOffset, littleEndian) {\n      return this.getInt32(byteOffset, littleEndian) >>> 0;\n    },\n\n    getInt16: function(byteOffset, littleEndian) {\n      return (this.getUint16(byteOffset, littleEndian) << 16) >> 16;\n    },\n\n    getUint16: function(byteOffset, littleEndian) {\n      var b = this._getBytes(2, byteOffset, littleEndian);\n      return (b[1] << 8) | b[0];\n    },\n\n    getInt8: function(byteOffset) {\n      return (this.getUint8(byteOffset) << 24) >> 24;\n    },\n\n    getUint8: function(byteOffset) {\n      return this._getBytes(1, byteOffset)[0];\n    }\n  };\n}\n\nmodule.exports = THREE;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Three.js","'use strict';\n\nmodule.exports = document.createElement('div').style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/builtinStyle.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nvar cssVendorPrefix;\n\nmodule.exports = function() {\n\n  if (cssVendorPrefix) return cssVendorPrefix;\n\n  var styles = window.getComputedStyle(document.documentElement, '');\n  var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o']))[1];\n\n  return cssVendorPrefix = '-' + pre + '-';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/getVendorPrefix.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nvar builtinStyle = require('./builtinStyle');\nvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nvar domVendorPrefix;\n\n// Helper function to get the proper vendor property name. (transition => WebkitTransition)\nmodule.exports = function(prop, isSupportTest) {\n\n  var vendorProp;\n  if (prop in builtinStyle) return prop;\n\n  var UpperProp = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n  if (domVendorPrefix) {\n\n    vendorProp = domVendorPrefix + UpperProp;\n    if (vendorProp in builtinStyle) {\n      return vendorProp;\n    }\n  } else {\n\n    for (var i = 0; i < prefixes.length; ++i) {\n      vendorProp = prefixes[i] + UpperProp;\n      if (vendorProp in builtinStyle) {\n        domVendorPrefix = prefixes[i];\n        return vendorProp;\n      }\n    }\n  }\n\n  // if support test, not fallback to origin prop name\n  if (!isSupportTest) {\n    return prop;\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/getVendorPropertyName.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nvar extraSheet;\n\nmodule.exports = function(css) {\n\n  if (!extraSheet) {\n    // First time, create an extra stylesheet for adding rules\n    extraSheet = document.createElement('style');\n    document.getElementsByTagName('head')[0].appendChild(extraSheet);\n    // Keep reference to actual StyleSheet object (`styleSheet` for IE < 9)\n    extraSheet = extraSheet.sheet || extraSheet.styleSheet;\n  }\n\n  var index = (extraSheet.cssRules || extraSheet.rules).length;\n  extraSheet.insertRule(css, index);\n\n  return extraSheet;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/insertRule.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '50%': {\n    transform: 'scale(0.75)',\n    opacity: 0.2\n  },\n  '100%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n};\n\nvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar BeatLoader = function (_Component) {\n  _inherits(BeatLoader, _Component);\n\n  function BeatLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BeatLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BeatLoader.__proto__ || Object.getPrototypeOf(BeatLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.7s', (i % 2 ? 0 : 0.35) + 's', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(BeatLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: this.getStyle(1) }),\n          _react2.default.createElement('div', { style: this.getStyle(2) }),\n          _react2.default.createElement('div', { style: this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return BeatLoader;\n}(_react.Component);\n\nBeatLoader.propTypes = propTypes;\nBeatLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = BeatLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=BeatLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/BeatLoader.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar keyframes = {\n  '0%, 100%': {\n    transform: 'scale(0)'\n  },\n  '50%': {\n    transform: 'scale(1.0)'\n  }\n};\n\nvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar BounceLoader = function (_Component) {\n  _inherits(BounceLoader, _Component);\n\n  function BounceLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BounceLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BounceLoader.__proto__ || Object.getPrototypeOf(BounceLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        borderRadius: '100%',\n        opacity: 0.6,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '2s', i === 1 ? '1s' : '0s', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)({\n        width: _this.props.size,\n        height: _this.props.size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(BounceLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle() },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return BounceLoader;\n}(_react.Component);\n\nBounceLoader.propTypes = propTypes;\nBounceLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px'\n};\nexports.default = BounceLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=BounceLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/BounceLoader.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'rotate(0deg) scale(1)'\n  },\n  '50%': {\n    transform: 'rotate(180deg) scale(0.8)'\n  },\n  '100%': {\n    transform: 'rotate(360deg) scale(1)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar ClipLoader = function (_Component) {\n  _inherits(ClipLoader, _Component);\n\n  function ClipLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ClipLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ClipLoader.__proto__ || Object.getPrototypeOf(ClipLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        width: _this.props.size,\n        height: _this.props.size,\n        border: '2px solid',\n        borderColor: _this.props.color,\n        borderBottomColor: 'transparent',\n        borderRadius: '100%',\n        background: 'transparent !important',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '0.75s', '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getBallStyle(i), _this.getAnimationStyle(), {\n        display: 'inline-block'\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(ClipLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: this.getStyle() })\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return ClipLoader;\n}(_react.Component);\n\nClipLoader.propTypes = propTypes;\nClipLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '35px'\n};\nexports.default = ClipLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=ClipLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/ClipLoader.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar rotateKeyframes = {\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var bounceKeyframes = {\n  '0%, 100%': {\n    transform: 'scale(0)'\n  },\n  '50%': {\n    transform: 'scale(1.0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var rotateAnimationName = (0, _insertKeyframesRule2.default)(rotateKeyframes);\n\n/**\n * @type {String}\n */\nvar bounceAnimationName = (0, _insertKeyframesRule2.default)(bounceKeyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar DotLoader = function (_Component) {\n  _inherits(DotLoader, _Component);\n\n  function DotLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, DotLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DotLoader.__proto__ || Object.getPrototypeOf(DotLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n      return {\n        backgroundColor: _this.props.color,\n        width: size,\n        height: size,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i === 0 ? rotateAnimationName : bounceAnimationName, '2s', i === 2 ? '-1s' : '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'forwards';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = _this.props.size | 0;\n      var ballSize = size / 2;\n\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(ballSize), _this.getAnimationStyle(i), {\n          position: 'absolute',\n          top: i % 2 ? 0 : 'auto',\n          bottom: i % 2 ? 'auto' : 0,\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getAnimationStyle(i), {\n        width: size,\n        height: size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(DotLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle(0) },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return DotLoader;\n}(_react.Component);\n\nDotLoader.propTypes = propTypes;\nDotLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = DotLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=DotLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/DotLoader.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '50%': {\n    opacity: 0.3\n  },\n  '100%': {\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  radius: _propTypes2.default.string,\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar FadeLoader = function (_Component) {\n  _inherits(FadeLoader, _Component);\n\n  function FadeLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, FadeLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FadeLoader.__proto__ || Object.getPrototypeOf(FadeLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        height: _this.props.height,\n        width: _this.props.width,\n        margin: _this.props.margin,\n        borderRadius: _this.props.radius,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '1.2s', i * 0.12 + 's', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getPosStyle = function (i) {\n      var radius = 20;\n      var quarter = radius / 2 + radius / 5.5;\n\n      var lines = {\n        l1: {\n          top: radius,\n          left: 0\n        },\n        l2: {\n          top: quarter,\n          left: quarter,\n          transform: 'rotate(-45deg)'\n        },\n        l3: {\n          top: 0,\n          left: radius,\n          transform: 'rotate(90deg)'\n        },\n        l4: {\n          top: -quarter,\n          left: quarter,\n          transform: 'rotate(45deg)'\n        },\n        l5: {\n          top: -radius,\n          left: 0\n        },\n        l6: {\n          top: -quarter,\n          left: -quarter,\n          transform: 'rotate(-45deg)'\n        },\n        l7: {\n          top: 0,\n          left: -radius,\n          transform: 'rotate(90deg)'\n        },\n        l8: {\n          top: quarter,\n          left: -quarter,\n          transform: 'rotate(45deg)'\n        }\n      };\n\n      return lines['l' + i];\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getPosStyle(i), _this.getAnimationStyle(i), {\n        position: 'absolute',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(FadeLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var style = {\n          position: 'relative',\n          fontSize: 0\n        };\n\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) }),\n            _react2.default.createElement('div', { style: this.getStyle(3) }),\n            _react2.default.createElement('div', { style: this.getStyle(4) }),\n            _react2.default.createElement('div', { style: this.getStyle(5) }),\n            _react2.default.createElement('div', { style: this.getStyle(6) }),\n            _react2.default.createElement('div', { style: this.getStyle(7) }),\n            _react2.default.createElement('div', { style: this.getStyle(8) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return FadeLoader;\n}(_react.Component);\n\nFadeLoader.propTypes = propTypes;\nFadeLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  height: '15px',\n  width: '5px',\n  margin: '2px',\n  radius: '2px'\n};\nexports.default = FadeLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=FadeLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/FadeLoader.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '50%': {\n    transform: 'scale(0.5)',\n    opacity: 0.7\n  },\n  '100%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\n/**\n * @param  {Number} top\n * @return {Number}\n */\nfunction random(top) {\n  return Math.random() * top;\n}\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar GridLoader = function (_Component) {\n  _inherits(GridLoader, _Component);\n\n  function GridLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, GridLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GridLoader.__proto__ || Object.getPrototypeOf(GridLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animationDuration = random(100) / 100 + 0.6 + 's';\n      var animationDelay = random(100) / 100 - 0.2 + 's';\n\n      var animation = [animationName, animationDuration, animationDelay, 'infinite', 'ease'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(GridLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var style = {\n          width: parseFloat(this.props.size) * 3 + parseFloat(this.props.margin) * 6,\n          fontSize: 0\n        };\n\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) }),\n            _react2.default.createElement('div', { style: this.getStyle(3) }),\n            _react2.default.createElement('div', { style: this.getStyle(4) }),\n            _react2.default.createElement('div', { style: this.getStyle(5) }),\n            _react2.default.createElement('div', { style: this.getStyle(6) }),\n            _react2.default.createElement('div', { style: this.getStyle(7) }),\n            _react2.default.createElement('div', { style: this.getStyle(8) }),\n            _react2.default.createElement('div', { style: this.getStyle(9) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return GridLoader;\n}(_react.Component);\n\nGridLoader.propTypes = propTypes;\nGridLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px'\n};\nexports.default = GridLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=GridLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/GridLoader.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SyncLoader = exports.SquareLoader = exports.SkewLoader = exports.ScaleLoader = exports.RotateLoader = exports.RiseLoader = exports.RingLoader = exports.PulseLoader = exports.PacmanLoader = exports.MoonLoader = exports.GridLoader = exports.FadeLoader = exports.DotLoader = exports.ClipLoader = exports.BounceLoader = exports.BeatLoader = undefined;\n\nvar _BeatLoader2 = require('./BeatLoader');\n\nvar _BeatLoader3 = _interopRequireDefault(_BeatLoader2);\n\nvar _BounceLoader2 = require('./BounceLoader');\n\nvar _BounceLoader3 = _interopRequireDefault(_BounceLoader2);\n\nvar _ClipLoader2 = require('./ClipLoader');\n\nvar _ClipLoader3 = _interopRequireDefault(_ClipLoader2);\n\nvar _DotLoader2 = require('./DotLoader');\n\nvar _DotLoader3 = _interopRequireDefault(_DotLoader2);\n\nvar _FadeLoader2 = require('./FadeLoader');\n\nvar _FadeLoader3 = _interopRequireDefault(_FadeLoader2);\n\nvar _GridLoader2 = require('./GridLoader');\n\nvar _GridLoader3 = _interopRequireDefault(_GridLoader2);\n\nvar _MoonLoader2 = require('./MoonLoader');\n\nvar _MoonLoader3 = _interopRequireDefault(_MoonLoader2);\n\nvar _PacmanLoader2 = require('./PacmanLoader');\n\nvar _PacmanLoader3 = _interopRequireDefault(_PacmanLoader2);\n\nvar _PulseLoader2 = require('./PulseLoader');\n\nvar _PulseLoader3 = _interopRequireDefault(_PulseLoader2);\n\nvar _RingLoader2 = require('./RingLoader');\n\nvar _RingLoader3 = _interopRequireDefault(_RingLoader2);\n\nvar _RiseLoader2 = require('./RiseLoader');\n\nvar _RiseLoader3 = _interopRequireDefault(_RiseLoader2);\n\nvar _RotateLoader2 = require('./RotateLoader');\n\nvar _RotateLoader3 = _interopRequireDefault(_RotateLoader2);\n\nvar _ScaleLoader2 = require('./ScaleLoader');\n\nvar _ScaleLoader3 = _interopRequireDefault(_ScaleLoader2);\n\nvar _SkewLoader2 = require('./SkewLoader');\n\nvar _SkewLoader3 = _interopRequireDefault(_SkewLoader2);\n\nvar _SquareLoader2 = require('./SquareLoader');\n\nvar _SquareLoader3 = _interopRequireDefault(_SquareLoader2);\n\nvar _SyncLoader2 = require('./SyncLoader');\n\nvar _SyncLoader3 = _interopRequireDefault(_SyncLoader2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.BeatLoader = _BeatLoader3.default;\nexports.BounceLoader = _BounceLoader3.default;\nexports.ClipLoader = _ClipLoader3.default;\nexports.DotLoader = _DotLoader3.default;\nexports.FadeLoader = _FadeLoader3.default;\nexports.GridLoader = _GridLoader3.default;\nexports.MoonLoader = _MoonLoader3.default;\nexports.PacmanLoader = _PacmanLoader3.default;\nexports.PulseLoader = _PulseLoader3.default;\nexports.RingLoader = _RingLoader3.default;\nexports.RiseLoader = _RiseLoader3.default;\nexports.RotateLoader = _RotateLoader3.default;\nexports.ScaleLoader = _ScaleLoader3.default;\nexports.SkewLoader = _SkewLoader3.default;\nexports.SquareLoader = _SquareLoader3.default;\nexports.SyncLoader = _SyncLoader3.default;\n//# sourceMappingURL=Halogenium.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/Halogenium.js\n// module id = 21\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar MoonLoader = function (_Component) {\n  _inherits(MoonLoader, _Component);\n\n  function MoonLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MoonLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MoonLoader.__proto__ || Object.getPrototypeOf(MoonLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n      return {\n        width: size,\n        height: size,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '0.6s', '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'forwards';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = _this.props.size | 0;\n      var moonSize = size / 7;\n\n      if (i === 1) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getBallStyle(moonSize), _this.getAnimationStyle(i), {\n          backgroundColor: _this.props.color,\n          opacity: '0.8',\n          position: 'absolute',\n          top: size / 2 - moonSize / 2\n        });\n      } else if (i === 2) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getBallStyle(size), {\n          border: moonSize + 'px solid ' + _this.props.color,\n          opacity: 0.1\n        });\n      }\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getAnimationStyle(i), {\n        position: 'relative'\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(MoonLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle(0) },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return MoonLoader;\n}(_react.Component);\n\nMoonLoader.propTypes = propTypes;\nMoonLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = MoonLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=MoonLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/MoonLoader.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar animations = {};\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar PacmanLoader = function (_Component) {\n  _inherits(PacmanLoader, _Component);\n\n  function PacmanLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PacmanLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PacmanLoader.__proto__ || Object.getPrototypeOf(PacmanLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign,\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var size = _this.props.size;\n      var animationName = animations[size];\n\n      if (!animationName) {\n        var keyframes = {\n          '75%': {\n            opacity: 0.7\n          },\n          '100%': {\n            transform: 'translate(' + -4 * size + 'px, ' + -size / 4 + 'px)'\n          }\n        };\n        animationName = animations[size] = (0, _insertKeyframesRule2.default)(keyframes);\n      }\n\n      var animation = [animationName, '1s', i * 0.25 + 's', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i | 0 === 1) {\n        var s1 = _this.props.size + 'px solid transparent';\n        var s2 = _this.props.size + 'px solid ' + _this.props.color;\n\n        return {\n          width: 0,\n          height: 0,\n          borderRight: s1,\n          borderTop: s2,\n          borderLeft: s2,\n          borderBottom: s2,\n          borderRadius: _this.props.size\n        };\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        width: 10,\n        height: 10,\n        transform: 'translate(0, ' + -_this.props.size / 4 + 'px)',\n        position: 'absolute',\n        top: 25,\n        left: 100\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var style = {\n          position: 'relative',\n          fontSize: 0\n        };\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) }),\n            _react2.default.createElement('div', { style: _this.getStyle(3) }),\n            _react2.default.createElement('div', { style: _this.getStyle(4) }),\n            _react2.default.createElement('div', { style: _this.getStyle(5) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(PacmanLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return PacmanLoader;\n}(_react.Component);\n\nPacmanLoader.propTypes = propTypes;\nPacmanLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  size: 25,\n  margin: 2 };\nexports.default = PacmanLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=PacmanLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/PacmanLoader.js\n// module id = 23\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  '45%': {\n    transform: 'scale(0.1)',\n    opacity: 0.7\n  },\n  '80%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar PulseLoader = function (_Component) {\n  _inherits(PulseLoader, _Component);\n\n  function PulseLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PulseLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PulseLoader.__proto__ || Object.getPrototypeOf(PulseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.75s', i * 0.12 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(PulseLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return PulseLoader;\n}(_react.Component);\n\nPulseLoader.propTypes = propTypes;\nPulseLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = PulseLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=PulseLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/PulseLoader.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar rightRotateKeyframes = {\n  '0%': {\n    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\n  },\n  '100%': {\n    transform: 'rotateX(180deg) rotateY(360deg) rotateZ(360deg)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var leftRotateKeyframes = {\n  '0%': {\n    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n  },\n  '100%': {\n    transform: 'rotateX(360deg) rotateY(180deg) rotateZ(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var rightRotateAnimationName = (0, _insertKeyframesRule2.default)(rightRotateKeyframes);\n\n/**\n * @type {String}\n */\nvar leftRotateAnimationName = (0, _insertKeyframesRule2.default)(leftRotateKeyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RingLoader = function (_Component) {\n  _inherits(RingLoader, _Component);\n\n  function RingLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RingLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RingLoader.__proto__ || Object.getPrototypeOf(RingLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getCircleStyle = function (size) {\n      return {\n        width: size,\n        height: size,\n        border: size / 10 + 'px solid ' + _this.props.color,\n        opacity: 0.4,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i | 0 === 1 ? rightRotateAnimationName : leftRotateAnimationName, '2s', '0s', 'infinite', 'linear'].join(' ');\n\n      var animationFillMode = 'forwards';\n      var perspective = '800px';\n\n      return {\n        perspective: perspective,\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = parseInt(_this.props.size, 10);\n\n      if (i) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getCircleStyle(size), _this.getAnimationStyle(i), {\n          position: 'absolute',\n          top: 0,\n          left: 0\n        });\n      }\n\n      return {\n        width: size,\n        height: size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      };\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: _this.getStyle(0) },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @param {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RingLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RingLoader;\n}(_react.Component);\n\nRingLoader.propTypes = propTypes;\nRingLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = RingLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RingLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RingLoader.js\n// module id = 25\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Number}\n */\nvar riseAmount = 30;\n\n/**\n * @type {Object}\n */\nvar keyframesEven = {\n  '0%': {\n    transform: 'scale(1.1)'\n  },\n  '25%': {\n    transform: 'translateY(-' + riseAmount + 'px)'\n  },\n  '50%': {\n    transform: 'scale(0.4)'\n  },\n  '75%': {\n    transform: 'translateY(' + riseAmount + 'px)'\n  },\n  '100%': {\n    transform: 'translateY(0) scale(1.0)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var keyframesOdd = {\n  '0%': {\n    transform: 'scale(0.4)'\n  },\n  25: {\n    transform: 'translateY(' + riseAmount + 'px)'\n  },\n  '50%': {\n    transform: 'scale(1.1)'\n  },\n  '75%': {\n    transform: 'translateY(-' + riseAmount + 'px)'\n  },\n  '100%': {\n    transform: 'translateY(0) scale(0.75)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationNameEven = (0, _insertKeyframesRule2.default)(keyframesEven);\n\n/**\n * @type {String}\n */\nvar animationNameOdd = (0, _insertKeyframesRule2.default)(keyframesOdd);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RiseLoader = function (_Component) {\n  _inherits(RiseLoader, _Component);\n\n  function RiseLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RiseLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RiseLoader.__proto__ || Object.getPrototypeOf(RiseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i % 2 === 0 ? animationNameEven : animationNameOdd, '1s', '0s', 'infinite', 'cubic-bezier(.15,.46,.9,.6)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n          _react2.default.createElement('div', { style: _this.getStyle(5) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RiseLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RiseLoader;\n}(_react.Component);\n\nRiseLoader.propTypes = propTypes;\nRiseLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = RiseLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RiseLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RiseLoader.js\n// module id = 26\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'rotate(0deg)'\n  },\n  '50%': {\n    transform: 'rotate(180deg)'\n  },\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RotateLoader = function (_Component) {\n  _inherits(RotateLoader, _Component);\n\n  function RotateLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RotateLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RotateLoader.__proto__ || Object.getPrototypeOf(RotateLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '1s', '0s', 'infinite', 'cubic-bezier(.7,-.13,.22,.86)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), {\n          opacity: '0.8',\n          position: 'absolute',\n          top: 0,\n          left: i % 2 ? -28 : 25,\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: _this.getStyle() },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RotateLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RotateLoader;\n}(_react.Component);\n\nRotateLoader.propTypes = propTypes;\nRotateLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = RotateLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RotateLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RotateLoader.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scaley(1.0)'\n  },\n  '50%': {\n    transform: 'scaley(0.4)'\n  },\n  '100%': {\n    transform: 'scaley(1.0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  radius: _propTypes2.default.string,\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar ScaleLoader = function (_Component) {\n  _inherits(ScaleLoader, _Component);\n\n  function ScaleLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ScaleLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScaleLoader.__proto__ || Object.getPrototypeOf(ScaleLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        height: _this.props.height,\n        width: _this.props.width,\n        margin: _this.props.margin,\n        borderRadius: _this.props.radius,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '1s', i * 0.1 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n          _react2.default.createElement('div', { style: _this.getStyle(5) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(ScaleLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return ScaleLoader;\n}(_react.Component);\n\nScaleLoader.propTypes = propTypes;\nScaleLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  height: '35px',\n  width: '4px',\n  margin: '2px',\n  radius: '2px' };\nexports.default = ScaleLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=ScaleLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/ScaleLoader.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '25%': {\n    transform: 'perspective(100px) rotateX(180deg) rotateY(0)'\n  },\n  '50%': {\n    transform: 'perspective(100px) rotateX(180deg) rotateY(180deg)'\n  },\n  '75%': {\n    transform: 'perspective(100px) rotateX(0) rotateY(180deg)'\n  },\n  '100%': {\n    transform: 'perspective(100px) rotateX(0) rotateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SkewLoader = function (_Component) {\n  _inherits(SkewLoader, _Component);\n\n  function SkewLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SkewLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SkewLoader.__proto__ || Object.getPrototypeOf(SkewLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSharpStyle = function () {\n      return {\n        width: 0,\n        height: 0,\n        borderLeft: _this.props.size + ' solid transparent',\n        borderRight: _this.props.size + ' solid transparent',\n        borderBottom: _this.props.size + ' solid ' + _this.props.color,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getSharpStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block'\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle() })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SkewLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SkewLoader;\n}(_react.Component);\n\nSkewLoader.propTypes = propTypes;\nSkewLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  size: '20px' };\nexports.default = SkewLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SkewLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SkewLoader.js\n// module id = 29\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '25%': {\n    transform: 'rotateX(180deg) rotateY(0)'\n  },\n  '50%': {\n    transform: 'rotateX(180deg) rotateY(180deg)'\n  },\n  '75%': {\n    transform: 'rotateX(0) rotateY(180deg)'\n  },\n  '100%': {\n    transform: 'rotateX(0) rotateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SquareLoader = function (_Component) {\n  _inherits(SquareLoader, _Component);\n\n  function SquareLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SquareLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SquareLoader.__proto__ || Object.getPrototypeOf(SquareLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSquareStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n      var animationFillMode = 'both';\n      var perspective = '100px';\n\n      return {\n        perspective: perspective,\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getSquareStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle() })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SquareLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SquareLoader;\n}(_react.Component);\n\nSquareLoader.propTypes = propTypes;\nSquareLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '50px' };\nexports.default = SquareLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SquareLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SquareLoader.js\n// module id = 30\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '33%': {\n    transform: 'translateY(10px)'\n  },\n  '66%': {\n    transform: 'translateY(-10px)'\n  },\n  '100%': {\n    transform: 'translateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SyncLoader = function (_Component) {\n  _inherits(SyncLoader, _Component);\n\n  function SyncLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SyncLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SyncLoader.__proto__ || Object.getPrototypeOf(SyncLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.6s', i * 0.07 + 's', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SyncLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SyncLoader;\n}(_react.Component);\n\nSyncLoader.propTypes = propTypes;\nSyncLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = SyncLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SyncLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SyncLoader.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 32\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 33\n// module chunks = 0","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),r=require(\"scheduler\");function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction x(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:x(\"227\");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}\nvar da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x(\"198\"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x(\"96\",a);if(!oa[c]){b.extractEvents?void 0:x(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x(\"99\",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?x(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ba={injectEventPluginOrder:function(a){la?x(\"101\"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}};\nfunction Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?x(\"231\",b,typeof c):void 0;\nreturn c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x(\"95\"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa=\"__reactInternalInstance$\"+Ea,Ga=\"__reactEventHandlers$\"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x(\"33\")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\nfunction Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],\"captured\",a);for(b=0;b<c.length;b++)Ma(c[b],\"bubbled\",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}\nfunction Qa(a){ya(a,Na)}var Ra=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ta={animationend:Sa(\"Animation\",\"AnimationEnd\"),animationiteration:Sa(\"Animation\",\"AnimationIteration\"),animationstart:Sa(\"Animation\",\"AnimationStart\"),transitionend:Sa(\"Transition\",\"TransitionEnd\")},Ua={},Va={};\nRa&&(Va=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),\"TransitionEvent\"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}\nvar Xa=Wa(\"animationend\"),Ya=Wa(\"animationiteration\"),Za=Wa(\"animationstart\"),$a=Wa(\"transitionend\"),ab=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bb=null,cb=null,db=null;\nfunction eb(){if(db)return db;var a,b=cb,c=b.length,d,e=\"value\"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}\nfunction y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}\nn(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\ny.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&\"CompositionEvent\"in window,ob=null;Ra&&\"documentMode\"in document&&(ob=document.documentMode);\nvar pb=Ra&&\"TextEvent\"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},tb=!1;\nfunction ub(a,b){switch(a){case \"keyup\":return-1!==mb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function vb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case \"compositionend\":return vb(b);case \"keypress\":if(32!==b.which)return null;tb=!0;return rb;case \"textInput\":return a=b.data,a===rb&&tb?null:a;default:return null}}\nfunction yb(a,b){if(wb)return\"compositionend\"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return qb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case \"compositionstart\":e=sb.compositionStart;break b;case \"compositionend\":e=sb.compositionEnd;break b;case \"compositionupdate\":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&\"ko\"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb=\"value\"in bb?bb.value:bb.textContent,wb=\n!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){\"function\"!==typeof Ab?x(\"280\"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}\nfunction Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Lb[a.type]:\"textarea\"===b?!0:!1}\nfunction Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Qb(a){var b=Pb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Pb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty(\"ReactCurrentDispatcher\")||(Tb.ReactCurrentDispatcher={current:null});\nvar Ub=/^(.*)[\\\\\\/]/,z=\"function\"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for(\"react.element\"):60103,Wb=z?Symbol.for(\"react.portal\"):60106,Xb=z?Symbol.for(\"react.fragment\"):60107,Yb=z?Symbol.for(\"react.strict_mode\"):60108,Zb=z?Symbol.for(\"react.profiler\"):60114,$b=z?Symbol.for(\"react.provider\"):60109,ac=z?Symbol.for(\"react.context\"):60110,bc=z?Symbol.for(\"react.concurrent_mode\"):60111,cc=z?Symbol.for(\"react.forward_ref\"):60112,dc=z?Symbol.for(\"react.suspense\"):60113,ec=z?Symbol.for(\"react.memo\"):\n60115,fc=z?Symbol.for(\"react.lazy\"):60116,gc=\"function\"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||\"object\"!==typeof a)return null;a=gc&&a[gc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction ic(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case bc:return\"ConcurrentMode\";case Xb:return\"Fragment\";case Wb:return\"Portal\";case Zb:return\"Profiler\";case Yb:return\"StrictMode\";case dc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ac:return\"Context.Consumer\";case $b:return\"Context.Provider\";case cc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ub,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar kc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};\nfunction oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qc(a,b,c,d){if(null===b||\"undefined\"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(rc,\nsc);D[b]=new C(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});\nfunction tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction uc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,\"checked\",b,!1)}\nfunction yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?zc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ac(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction zc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Bc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type=\"change\";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}\nfunction Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if(\"change\"===a)return b}var Ic=!1;Ra&&(Ic=Ob(\"input\")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent(\"onpropertychange\",Kc),Ec=Dc=null)}function Kc(a){\"value\"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){\"focus\"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent(\"onpropertychange\",Kc)):\"blur\"===a&&Jc()}function Mc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Gc(Ec)}\nfunction Nc(a,b){if(\"click\"===a)return Gc(b)}function Oc(a,b){if(\"input\"===a||\"change\"===a)return Gc(b)}\nvar Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&zc(e,\"number\",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}\nvar Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?\"mousemove\"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=Vc;Vc=a.screenY;return Xc?\"mousemove\"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k=\"pointer\";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=\nf.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Oa(f[d],\"captured\",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;\nfunction dd(a,b){if(bd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x(\"188\"):void 0}\nfunction gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:x(\"189\")}}c.alternate!==d?x(\"190\"):void 0}3!==c.tag?x(\"188\"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar md={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=ld(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?nd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return\"keypress\"===\na.type?ld(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?ld(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"abort\",\"abort\"],[Xa,\"animationEnd\"],[Ya,\"animationIteration\"],[Za,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[$a,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});\nvar xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===ld(c))return null;case \"keydown\":case \"keyup\":a=od;break;case \"blur\":case \"focus\":a=kd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=Yc;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\npd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case \"scroll\":a=Qc;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,\nzd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;\nfunction E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}\nfunction Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||\"number\"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Pd(){var a=Nd();if(Od(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);\nif(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}\nfunction Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Rd=Ra&&\"documentMode\"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Td=null,Ud=null,Vd=null,Wd=!1;\nfunction Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;\"selectionStart\"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type=\"select\",a.target=Td,Qa(a),a)}\nvar Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case \"focus\":if(Mb(e)||\"true\"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case \"blur\":Vd=Ud=Td=null;break;case \"mousedown\":Wd=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return Wd=!1,Xd(c,d);case \"selectionchange\":if(Rd)break;\ncase \"keydown\":case \"keyup\":return Xd(c,d)}return null}};Ba.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction be(a,b){null!=b.dangerouslySetInnerHTML?x(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:uc(c)}}\nfunction de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function he(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ie=void 0,je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{ie=ie||document.createElement(\"div\");ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(\"\"+b).trim():b+\"px\"}\nfunction oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ne(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:x(\"61\")),null!=b.style&&\"object\"!==typeof b.style?x(\"62\",\"\"):void 0)}\nfunction re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Ed(\"scroll\",a);break;case \"focus\":case \"blur\":Ed(\"focus\",a);Ed(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Ob(e)&&Ed(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;\nfunction we(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function xe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar ye=\"function\"===typeof setTimeout?setTimeout:void 0,ze=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;\nfunction Ce(a,b,c,d,e){a[Ga]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?oe(a,h):\"dangerouslySetInnerHTML\"===g?je(a,h):\"children\"===g?ke(a,h):tc(a,g,h,d)}switch(c){case \"input\":yc(a,e);break;case \"textarea\":de(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,\n!0):ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;\nfunction Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}\nfunction Me(a,b,c){H.current!==He?x(\"168\"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x(\"108\",ic(b)||\"Unknown\",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}\nfunction Pe(a,b,c){var d=a.stateNode;d?void 0:x(\"169\");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Te(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}\nfunction Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if(\"function\"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}\nfunction Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction Ye(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ve(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=\n14;break a;case fc:g=16;d=null;break a}x(\"130\",null==a?a:typeof a,\"\")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}\nfunction bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}\nfunction ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):\nb>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}\nfunction gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\nfunction hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;\nfunction kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=\nsf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}\nfunction vf(a,b,c){var d=!1,e=He;var f=b.contextType;\"object\"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction wf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}\nfunction xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\ntypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;\nfunction Af(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x(\"309\"):void 0,d=c.stateNode);d?void 0:x(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?x(\"284\"):void 0;c._owner?void 0:x(\"290\",a)}return a}\nfunction Bf(a,b){\"textarea\"!==a.type&&x(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=af(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||\nhc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&\nq&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);\"function\"!==typeof l?x(\"150\"):void 0;h=l.call(h);null==h?x(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:\nw.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x(\"174\"):void 0;return a}\nfunction Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}\nvar Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x(\"321\")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}\nfunction hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x(\"300\"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}\nfunction mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x(\"310\"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return\"function\"===typeof b?b(a):b}\nfunction pg(a){var b=ng(),c=b.queue;null===c?x(\"311\"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\nd){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\nfunction rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}\nfunction tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}\nfunction wg(a,b,c){25>eg?void 0:x(\"301\");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===\nd||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}\nvar kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},\nuseMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,\nlastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,\nb){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;\nfunction Ag(a,b){var c=K(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}\nvar Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}\nfunction Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}\nfunction Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p=\"function\"===\ntypeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===\ntypeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=\nt),g.props=d,g.state=t,g.context=k,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}\nfunction Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x(\"153\"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=\nb.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,\nc)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,\ne=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,\ng=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\nc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==\n(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?\nnull:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===\nd?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x(\"156\")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}\nfunction M(a,b){if(Yg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x(\"308\"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}\nfunction eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}\nfunction gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}\nfunction yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=\n32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}\nfunction hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?x(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};\nnh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case \"input\":f=vc(g,f);d=vc(g,d);a=[];break;case \"option\":f=$d(g,f);d=$d(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=be(g,f);d=be(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if(\"style\"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||\n(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else\"dangerouslySetInnerHTML\"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,\"\"+k)):\"children\"===c?l===k||\"string\"!==typeof k&&\"number\"!==typeof k||(a=a||[]).push(c,\"\"+k):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};\nvar ph=\"function\"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}\nfunction th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\nfunction uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=ne(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction vh(a){\"function\"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}\nfunction xh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x(\"161\")}c.effectTag&16&&(ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&\n2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=\nb.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x(\"163\")}}var Bh=\"function\"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}\nfunction Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}\nvar Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}\nfunction Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,\"\");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&(\"function\"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}\nfunction Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x(\"163\")}}V=V.nextEffect}}\nfunction Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=\ne.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x(\"163\")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,\"function\"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}\nfunction Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}\nfunction Zh(a,b){Oh=Kh=!0;a.current===b?x(\"177\"):void 0;var c=a.pendingCommitExpirationTime;0===c?x(\"261\"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;\nf=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;\"function\"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=\nb>c?b:c;0===b&&(Fh=null);$h(a,b)}\nfunction ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case \"iframe\":case \"object\":E(\"load\",e);break;case \"video\":case \"audio\":for(k=0;k<ab.length;k++)E(ab[k],e);break;case \"source\":E(\"error\",e);break;case \"img\":case \"image\":case \"link\":E(\"error\",e);E(\"load\",e);break;case \"form\":E(\"reset\",e);E(\"submit\",e);break;case \"details\":E(\"toggle\",e);break;case \"input\":wc(e,m);E(\"invalid\",e);se(p,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};E(\"invalid\",e);se(p,\"onChange\");break;case \"textarea\":ce(e,m),E(\"invalid\",e),se(p,\"onChange\")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],\"children\"===f?\"string\"===typeof l?e.textContent!==l&&(k=[\"children\",l]):\"number\"===typeof l&&e.textContent!==\"\"+l&&(k=[\"children\",\"\"+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case \"input\":Rb(e);Ac(e,m,!0);break;case \"textarea\":Rb(e);ee(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?\"script\"===p?(e=k.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",k=e.removeChild(e.firstChild)):\"string\"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),\"select\"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case \"iframe\":case \"object\":E(\"load\",\np);h=m;break;case \"video\":case \"audio\":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case \"source\":E(\"error\",p);h=m;break;case \"img\":case \"image\":case \"link\":E(\"error\",p);E(\"load\",p);h=m;break;case \"form\":E(\"reset\",p);E(\"submit\",p);h=m;break;case \"details\":E(\"toggle\",p);h=m;break;case \"input\":wc(p,m);h=vc(p,m);E(\"invalid\",p);se(t,\"onChange\");break;case \"option\":h=$d(p,m);break;case \"select\":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E(\"invalid\",p);se(t,\"onChange\");break;case \"textarea\":ce(p,\nm);h=be(p,m);E(\"invalid\",p);se(t,\"onChange\");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];\"style\"===l?oe(R,q):\"dangerouslySetInnerHTML\"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):\"children\"===l?\"string\"===typeof q?(\"textarea\"!==v||\"\"!==q)&&ke(R,q):\"number\"===typeof q&&ke(R,\"\"+q):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case \"input\":Rb(p);\nAc(p,m,!1);break;case \"textarea\":Rb(p);ee(p,m);break;case \"option\":null!=m.value&&p.setAttribute(\"value\",\"\"+uc(m.value));break;case \"select\":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?x(\"166\"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x(\"156\")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&\n(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}\nfunction ci(a,b){Kh?x(\"243\"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x(\"271\"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==\nm&&\"object\"===typeof m&&\"function\"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if(\"number\"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=\n64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||\"A React component\")+\n\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==k&&\"function\"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;\nh.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x(\"281\"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;\nb=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}\nfunction sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}\nfunction mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x(\"313\")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&\n(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}\nfunction hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x(\"185\")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}\nfunction yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}\nfunction lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}\nfunction Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x(\"244\"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}\nfunction Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x(\"253\"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}\nfunction Di(a,b,c){W?x(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}\nfunction Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x(\"246\"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}\nfunction Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}\nfunction Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nof();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nAb=function(a,b,c){switch(b){case \"input\":yc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x(\"90\");Sb(d);yc(d,e)}}}break;case \"textarea\":de(a,c);break;case \"select\":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};\nfunction Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};\nNi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nNi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nOi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?x(\"191\",c):void 0;c()}}};\nfunction Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nPi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};\nPi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};\nfunction Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}\nfunction Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}\nfunction Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x(\"200\");return Mi(a,b,null,c)}\nvar Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?x(\"188\"):x(\"268\",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x(\"200\");null==a||void 0===a._reactInternalFiber?\nx(\"38\"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x(\"40\");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x(\"187\"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=\nX;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x(\"299\",\"unstable_createRoot\");return new Pi(a,!0,null!=b&&!0===b.hydrate)}\n(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:\"16.8.6\",rendererPackageName:\"react-dom\"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 34\n// module chunks = 0","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\nfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\nfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"321\"):void 0;return a}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\nb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.6\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 35\n// module chunks = 0","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if(\"function\"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=\nb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};\nexports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());\nb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};\nexports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/cjs/scheduler.production.min.js\n// module id = 36\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/index.js\n// module id = 37\n// module chunks = 0","module.exports = function(THREE) {\n\tvar MOUSE = THREE.MOUSE\n\tif (!MOUSE)\n\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n\t/**\n\t * @author qiao / https://github.com/qiao\n\t * @author mrdoob / http://mrdoob.com\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author erich666 / http://erichaines.com\n\t */\n\t/*global THREE, console */\n\n\tfunction OrbitConstraint ( object ) {\n\n\t\tthis.object = object;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t// and where it pans with respect to.\n\t\tthis.target = new THREE.Vector3();\n\n\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.25;\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar EPS = 0.000001;\n\n\t\t// Current position in spherical coordinate system.\n\t\tvar theta;\n\t\tvar phi;\n\n\t\t// Pending changes\n\t\tvar phiDelta = 0;\n\t\tvar thetaDelta = 0;\n\t\tvar scale = 1;\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar zoomChanged = false;\n\n\t\t// API\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn theta;\n\n\t\t};\n\n\t\tthis.rotateLeft = function ( angle ) {\n\n\t\t\tthetaDelta -= angle;\n\n\t\t};\n\n\t\tthis.rotateUp = function ( angle ) {\n\n\t\t\tphiDelta -= angle;\n\n\t\t};\n\n\t\t// pass in distance in world space to move left\n\t\tthis.panLeft = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panLeft ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get X column of matrix\n\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in distance in world space to move up\n\t\tthis.panUp = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panUp ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get Y column of matrix\n\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyIn = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyOut = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.update = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\tvar quatInverse = quat.clone().inverse();\n\n\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\t\treturn function () {\n\n\t\t\t\tvar position = this.object.position;\n\n\t\t\t\toffset.copy( position ).sub( this.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\n\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\n\t\t\t\t// angle from y-axis\n\n\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\n\t\t\t\ttheta += thetaDelta;\n\t\t\t\tphi += phiDelta;\n\n\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\n\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\n\t\t\t\tvar radius = offset.length() * scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\n\t\t\t\t// move target to panned location\n\t\t\t\tthis.target.add( panOffset );\n\n\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( this.target ).add( offset );\n\n\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\tif ( this.enableDamping === true ) {\n\n\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\tphiDelta = 0;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t};\n\n\n\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t// supported.\n\t//\n\t//    Orbit - left mouse / touch: one finger move\n\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n\tfunction OrbitControls ( object, domElement ) {\n\n\t\tvar constraint = new OrbitConstraint( object );\n\n\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t\t// API\n\n\t\tObject.defineProperty( this, 'constraint', {\n\n\t\t\tget: function() {\n\n\t\t\t\treturn constraint;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn constraint.getPolarAngle();\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn constraint.getAzimuthalAngle();\n\n\t\t};\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// center is old, deprecated; use \"target\" instead\n\t\tthis.center = this.target;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t// backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t\t// Set to false to disable use of the keys\n\t\tthis.enableKeys = true;\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar rotateStart = new THREE.Vector2();\n\t\tvar rotateEnd = new THREE.Vector2();\n\t\tvar rotateDelta = new THREE.Vector2();\n\n\t\tvar panStart = new THREE.Vector2();\n\t\tvar panEnd = new THREE.Vector2();\n\t\tvar panDelta = new THREE.Vector2();\n\n\t\tvar dollyStart = new THREE.Vector2();\n\t\tvar dollyEnd = new THREE.Vector2();\n\t\tvar dollyDelta = new THREE.Vector2();\n\n\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\t\tvar state = STATE.NONE;\n\n\t\t// for reset\n\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// events\n\n\t\tvar changeEvent = { type: 'change' };\n\t\tvar startEvent = { type: 'start' };\n\t\tvar endEvent = { type: 'end' };\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tfunction pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\n\t\t}\n\n\t\tthis.update = function () {\n\n\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( constraint.update() === true ) {\n\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tstate = STATE.NONE;\n\n\t\t\tthis.target.copy( this.target0 );\n\t\t\tthis.object.position.copy( this.position0 );\n\t\t\tthis.object.zoom = this.zoom0;\n\n\t\t\tthis.object.updateProjectionMatrix();\n\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\tthis.update();\n\n\t\t};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t}\n\n\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.update();\n\n\t\t}\n\n\t\tfunction onMouseUp( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar delta = 0;\n\n\t\t\tif ( event.wheelDelta !== undefined ) {\n\n\t\t\t\t// WebKit / Opera / Explorer 9\n\n\t\t\t\tdelta = event.wheelDelta;\n\n\t\t\t} else if ( event.detail !== undefined ) {\n\n\t\t\t\t// Firefox\n\n\t\t\t\tdelta = - event.detail;\n\n\t\t\t}\n\n\t\t\tif ( delta > 0 ) {\n\n\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t} else if ( delta < 0 ) {\n\n\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\t\t\tscope.dispatchEvent( startEvent );\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\t\tswitch ( event.keyCode ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchstart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t\tfunction touchmove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\n\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\n\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchend( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction contextmenu( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tthis.dispose = function() {\n\n\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t}\n\n\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\n\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t\t// force an update at start\n\t\tthis.update();\n\n\t};\n\n\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tOrbitControls.prototype.constructor = OrbitControls;\n\n\tObject.defineProperties( OrbitControls.prototype, {\n\n\t\tobject: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.object;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttarget: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.target;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\tthis.constraint.target.copy( value );\n\n\t\t\t}\n\n\t\t},\n\n\t\tminDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tenableDamping : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.enableDamping = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// backward compatibility\n\n\t\tnoZoom: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\treturn ! this.enableZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\tthis.enableZoom = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoRotate: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\treturn ! this.enableRotate;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\tthis.enableRotate = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoPan: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\treturn ! this.enablePan;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\tthis.enablePan = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoKeys: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\treturn ! this.enableKeys;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\tthis.enableKeys = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tstaticMoving : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\treturn ! this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\tthis.constraint.enableDamping = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdynamicDampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn OrbitControls;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three-orbit-controls/index.js\n// module id = 38\n// module chunks = 0","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '72' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\t\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\t\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n\r\n// polyfills\r\n\r\nif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\r\n\t// Missing in Android stock browser.\r\n\r\n\t( function () {\r\n\r\n\t\tvar lastTime = 0;\r\n\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\r\n\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\r\n\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\r\n\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\r\n\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\tvar id = self.setTimeout( function () {\r\n\r\n\t\t\t\t\tcallback( currTime + timeToCall );\r\n\r\n\t\t\t\t}, timeToCall );\r\n\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\treturn id;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\r\n\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\r\n\t\t\t\tself.clearTimeout( id );\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}() );\r\n\r\n}\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n// mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n// depth modes\r\n\r\nTHREE.NeverDepth = 0;\r\nTHREE.AlwaysDepth = 1;\r\nTHREE.LessDepth = 2;\r\nTHREE.LessEqualDepth = 3;\r\nTHREE.EqualDepth = 4;\r\nTHREE.GreaterEqualDepth = 5;\r\nTHREE.GreaterDepth = 6;\r\nTHREE.NotEqualDepth = 7;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb ( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tvar parseAlpha = function ( strAlpha ) {\r\n\r\n\t\t\tvar alpha = parseFloat( strAlpha );\r\n\r\n\t\t\tif ( alpha < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn alpha;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n};\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\t\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction descSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tvar onRotationChange = function () {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t};\r\n\r\n\tvar onQuaternionChange = function () {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t};\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset renderDepth ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRootObject = ( meta === undefined );\r\n\r\n\t\tvar data = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\tdata.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\r\n\t\tdata.matrix = this.matrix.toArray();\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tdata.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {};\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = data;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.array.length / this.data.stride;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar addFace = function ( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.DirectGeometry.prototype = {\r\n\r\n\tconstructor: THREE.DirectGeometry,\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddIndex: function ( index ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\tthis.setIndex( index );\r\n\r\n\t},\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tget drawcalls() {\r\n\r\n\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\tget offsets() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\tthis.addGroup( start, count );\r\n\r\n\t},\r\n\r\n\tclearDrawCalls: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\tthis.clearGroups();\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeOffsets: function ( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.left = source.left;\r\n\tthis.right = source.right;\r\n\tthis.top = source.top;\r\n\tthis.bottom = source.bottom;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.left = this.left;\r\n\tdata.object.right = this.right;\r\n\tdata.object.top = this.top;\r\n\tdata.object.bottom = this.bottom;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (full-frame) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.fov = source.fov;\r\n\tthis.aspect = source.aspect;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.fov = this.fov;\r\n\tdata.object.aspect = this.aspect;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.color.copy( source.color );\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\nTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = - 500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = - 500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\r\n\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.groundColor.copy( source.groundColor );\r\n\tthis.intensity = source.intensity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.groundColor = this.groundColor.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.decay = source.decay;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.angle = source.angle;\r\n\tthis.exponent = source.exponent;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n}\r\n\r\nTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.angle = this.angle;\r\n\tdata.object.exponent = this.exponent;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar imageLoader;\r\n\r\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\r\n\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\r\n\t\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture = new THREE.Texture();\r\n\r\n\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\r\n\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\r\n\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\r\n\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\t\t\ttexture.image = canvas;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.sourceFile = sourceFile;\r\n\r\n\t\t\t\tif ( repeat ) {\r\n\r\n\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset ) {\r\n\r\n\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhere[ name ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// defaults\r\n\r\n\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\tvar mpars = {};\r\n\r\n\t\t\t// parameters from model file\r\n\r\n\t\t\tif ( m.shading ) {\r\n\r\n\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.transparent !== undefined ) {\r\n\r\n\t\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\r\n\t\t\t\tmpars.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.colorEmissive ) {\r\n\r\n\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\r\n\t\t\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// modifiers\r\n\r\n\t\t\tif ( m.transparency !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\tm.opacity = m.transparency;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined ) {\r\n\r\n\t\t\t\tmpars.opacity = m.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// textures\r\n\r\n\t\t\tif ( texturePath ) {\r\n\r\n\t\t\t\tif ( m.mapDiffuse ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapLight ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAO ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapBump ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapNormal ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapSpecular ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAlpha ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this.response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this.response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\t\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tif ( metadata.type === 'object' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// could change this to json.animations[0] or remove completely\r\n\r\n\t\t\tgeometry.animation = json.animation;\r\n\t\t\tgeometry.animations = json.animations;\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\r\n\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\t\tmaterial.uuid = json.uuid;\r\n\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MeshFaceMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TextGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tvar getGeometry = function ( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar getMaterial = function ( name ) {\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.side = source.side;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blending = source.blending;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\t// Deprecated\r\n\r\n\tget wrapAround () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tset wrapAround ( boolean ) {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tget wrapRGB () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\treturn new THREE.Color();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\t\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.metal = source.metal;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.derivatives = false; // set to use derivatives\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.attributes = source.attributes;\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.lights = source.lights;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.derivatives = source.derivatives;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.attributes = this.attributes;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\r\n\tthis.images = source.images;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar update = function () {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Points.prototype.constructor = THREE.Points;\r\n\r\nTHREE.Points.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Points.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// DEPRECATED\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\tvar tempA = new THREE.Vector3();\r\n\tvar tempB = new THREE.Vector3();\r\n\tvar tempC = new THREE.Vector3();\r\n\r\n\tvar uvA = new THREE.Vector2();\r\n\tvar uvB = new THREE.Vector2();\r\n\tvar uvC = new THREE.Vector2();\r\n\r\n\tvar barycoord = new THREE.Vector3();\r\n\r\n\tvar intersectionPoint = new THREE.Vector3();\r\n\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\treturn uv1.clone();\r\n\r\n\t}\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar material = this.material;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar a, b, c;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\ta = vA;\r\n\t\t\t\t\tb = vB;\r\n\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tvar uv;\r\n\r\n\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\r\n\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\tuv: uv,\r\n\t\t\t\t\tface: face,\r\n\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\nTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.skin = source.skin;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\t\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\treturn function update() {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Skeleton.prototype.clone = function () {\r\n\r\n\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n};\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\t\r\n\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function() {\r\n\r\n\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/MorphAnimMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'MorphAnimMesh';\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = - 1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= - 1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\tinfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tinfluences[ this.currentKeyframe ] = mix;\r\n\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\r\n\t\tinfluences[ i ] = 0;\r\n\r\n\t}\r\n\r\n\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\tif ( b > - 1 ) influences[ b ] = t;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\r\n\tthis.duration = source.duration;\r\n\tthis.mirroredLoop = source.mirroredLoop;\r\n\tthis.time = source.time;\r\n\r\n\tthis.lastKeyframe = source.lastKeyframe;\r\n\tthis.currentKeyframe = source.currentKeyframe;\r\n\r\n\tthis.direction = source.direction;\r\n\tthis.directionBackwards = source.directionBackwards;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t},\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn levels[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function update( camera ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\tvar levels = source.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.levels = [];\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tdata.object.levels.push( {\r\n\t\t\tobject: level.object.uuid,\r\n\t\t\tdistance: level.distance\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function Sprite( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\r\n\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture,\t// THREE.Texture\r\n\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\tscale: 1, \t\t// scale\r\n\t\trotation: 0, \t\t// rotation\r\n\t\topacity: opacity,\t// opacity\r\n\t\tcolor: color,\t\t// color\r\n\t\tblending: blending\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.positionScreen.copy( source.positionScreen );\r\n\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\",\r\n\r\n\t\t\t\"\tvarying vec3 vNormal;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = -1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = -1;\r\n\r\n\tvar opaqueImmediateObjects = [];\r\n\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\tvar transparentImmediateObjects = [];\r\n\tvar transparentImmediateObjectsLastIndex = -1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value !== undefined ) pixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t};\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( numericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = program.getUniforms();\r\n\r\n\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group === undefined ) {\r\n\r\n\t\t\tvar count;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tcount = index.count;\r\n\r\n\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\tcount = position.data.array.length / 3;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcount = position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar drawRange = geometry.drawRange;\r\n\r\n\t\t\tgroup = {\r\n\t\t\t\tstart: drawRange.start,\r\n\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = -1;\r\n\t\ttransparentObjectsLastIndex = -1;\r\n\r\n\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tshadowMap.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushImmediateRenderItem( object ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( object.material.transparent ) {\r\n\r\n\t\t\tarray = transparentImmediateObjects;\r\n\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing position or grow the array\r\n\r\n\t\tif ( index < array.length ) {\r\n\r\n\t\t\tarray[ index ] = object;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( object );\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\tlights.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\tsprites.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\tlensFlares.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\tpushImmediateRenderItem( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material = overrideMaterial;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar object = renderList[ i ];\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\r\n\t\t\tsetMaterial( material );\r\n\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterialProperties.uniformsList = [];\r\n\r\n\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\r\n\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = uniformLocations[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\r\n\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tsetMaterialFaces( material );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setMaterialFaces( material ) {\r\n\r\n\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecays = zlights.point.decays,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\t\tspotDecays = zlights.spot.decays,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\r\n\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsHalfFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn capabilities.vertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsInstancedArrays = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tshadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tshadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.cullFace;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\tshadowMap.cullFace = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapDebug: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.debug;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\tshadowMap.debug = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = true;\r\n\r\n\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\r\n\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\tvar name = info.name;\r\n\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\r\n\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\r\n\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms[ name ] = location;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\"flipSided\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar maxShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tchunks.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\tchunks.push( parameterName );\r\n\t\t\tchunks.push( parameters[ parameterName ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tvar addLineNumbers = function ( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t};\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3(),\r\n\r\n\t_renderList = [];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader\r\n\t } );\r\n\r\n\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true\r\n\t} );\r\n\r\n\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterial._shadowPass = true;\r\n\t_depthMaterialMorph._shadowPass = true;\r\n\t_depthMaterialSkin._shadowPass = true;\r\n\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\tthis.cullFace = THREE.CullFaceFront;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\r\n\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_state.setDepthTest( true );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = _lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tscene.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\tvar shadowCamera = light.shadowCamera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t_renderList.length = 0;\r\n\r\n\t\t\tprojectObject( scene, shadowCamera );\r\n\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t_state.enable( _gl.BLEND );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\tvar depthMaterial;\r\n\r\n\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\r\n\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdepthMaterial = _depthMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tdepthMaterial.visible = material.visible;\r\n\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\r\n\t\treturn depthMaterial;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = undefined;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\tgl.clearDepth( 1 );\r\n\t\tgl.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\tgl.frontFace( gl.CCW );\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\r\n\t\tif ( blending !== currentBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\tthis.disable( gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === undefined ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentColorWrite = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}, undefined, function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\tloader.load( array[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t};\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/FontUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces: {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface: 'helvetiker',\r\n\tweight: 'normal',\r\n\tstyle: 'normal',\r\n\tsize: 150,\r\n\tdivisions: 10,\r\n\r\n\tgetFace: function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tloadFace: function ( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText: function ( text ) {\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths: fontPaths, offset: width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\r\n\t// Parameters\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function ( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function ( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t//return null;\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv --;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n} )( THREE.FontUtils );\r\n\r\n// To use the typeface.js face files, hook up the API\r\n\r\nTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\r\n\t\t\tif ( scope.autoplay ) scope.play();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.start( 0, this.startTime );\r\n\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n\tthis.connect();\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.connect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.connect( this.filter );\r\n\t\tthis.filter.connect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.connect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.disconnect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.disconnect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.disconnect();\r\n\t\tthis.filter = value;\r\n\t\tthis.connect();\r\n\r\n\t} else {\r\n\r\n\t\tthis.filter = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getFilter = function () {\r\n\r\n\treturn this.filter;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\r\n\tthis.playbackRate = value;\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\r\n\treturn this.playbackRate;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getLoop = function () {\r\n\r\n\treturn this.source.loop;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRefDistance = function () {\r\n\r\n\treturn this.panner.refDistance;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\r\n\treturn this.panner.rolloffFactor;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getVolume = function () {\r\n\r\n\treturn this.gain.gain.value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t// determine where we are between the 'before' and 'after' points\r\n\r\n\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t// add that fractional amount to t\r\n\r\n\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub( pt1 );\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t}\r\n\r\n\t// Get length of sub-curve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistant sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar args = [\r\n\t\taX, aY,\r\n\t\txRadius, yRadius,\r\n\t\taStartAngle, aEndAngle,\r\n\t\taClockwise,\r\n\t\taRotation || 0 // aRotation is optional.\r\n\t];\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint( 1 );\r\n\targs.push( lastPoint.x );\r\n\targs.push( lastPoint.y );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tvar cos, sin;\r\n\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\r\n\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1 ];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\tpoints.splice( points.length - 1, 1 );\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar i, il, item, action, args;\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\r\n\t\t\titem = inActions[ i ];\r\n\r\n\t\t\targs = item.args;\r\n\t\t\taction = item.action;\r\n\r\n\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\r\n\t}\r\n\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length === 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length === 1 ) {\r\n\r\n\t\ttmpPath = subPaths[ 0 ];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[ mainIdx ] = undefined;\r\n\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\tvar i, il;\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\r\n\t\tvar ambiguous = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t}\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\ttmpShape = newShapes[ i ].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.extractAllSpacedPoints( divisions );\r\n\r\n\t}\r\n\r\n\treturn this.extractAllPoints( divisions );\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\treturn vector.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3;\r\n\r\n\t\t\tif ( intPoint === 0 ) {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint ];\r\n\t\t\tp2 = points[ intPoint + 1 ];\r\n\r\n\t\t\tif ( intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/animation/AnimationHandler.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = {\r\n\r\n\tLINEAR: 0,\r\n\tCATMULLROM: 1,\r\n\tCATMULLROM_FORWARD: 2,\r\n\r\n\t//\r\n\r\n\tadd: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\r\n\t},\r\n\tget: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\r\n\t},\r\n\tremove: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tanimations: [],\r\n\r\n\tinit: function ( data ) {\r\n\r\n\t\tif ( data.initialized === true ) return data;\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\r\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tparse: function ( root ) {\r\n\r\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\r\n\t\t\thierarchy.push( root );\r\n\r\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t\t};\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t},\r\n\r\n\tplay: function ( animation ) {\r\n\r\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\r\n\t\t\tthis.animations.push( animation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tstop: function ( animation ) {\r\n\r\n\t\tvar index = this.animations.indexOf( animation );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.animations.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( deltaTimeMS ) {\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/Animation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.loop = true;\r\n\tthis.weight = 0;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype = {\r\n\r\n\tconstructor: THREE.Animation,\r\n\r\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\r\n\tplay: function ( startTime, weight ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.reset();\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t},\r\n\r\n\treset: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\tanimations: {},\r\n\t\t\t\t\tblending: {\r\n\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = this.data.name;\r\n\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\tvar animationCache = animations[ name ];\r\n\r\n\t\t\tif ( animationCache === undefined ) {\r\n\r\n\t\t\t\tanimationCache = {\r\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t};\r\n\r\n\t\t\t\tanimations[ name ] = animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get keys to match our current time\r\n\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\tvar type = this.keyTypes[ t ];\r\n\r\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tresetBlendWeights: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache;\r\n\r\n\t\t\tif ( animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar blending = animationCache.blending;\r\n\r\n\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\tblending.scaleWeight = 0.0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function() {\r\n\r\n\t\tvar points = [];\r\n\t\tvar target = new THREE.Vector3();\r\n\t\tvar newVector = new THREE.Vector3();\r\n\t\tvar newQuat = new THREE.Quaternion();\r\n\r\n\t\t// Catmull-Rom spline\r\n\r\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\t\tvar c = [], v3 = [],\r\n\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\tpa, pb, pc, pd;\r\n\r\n\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\tpd = points[ c[ 3 ] ];\r\n\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\r\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n\t\t\treturn v3;\r\n\r\n\t\t};\r\n\r\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t\t};\r\n\r\n\t\treturn function ( delta ) {\r\n\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t\tif ( this.weight === 0 )\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar duration = this.data.length;\r\n\r\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\r\n\t\t\t\tif ( this.loop ) {\r\n\r\n\t\t\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\tthis.currentTime += duration;\r\n\r\n\t\t\t\t\tthis.reset();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.stop();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\tvar blending = object.animationCache.blending;\r\n\r\n\t\t\t\t// loop through pos/rot/scl\r\n\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t\t// get keys\r\n\r\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\r\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\r\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\r\n\t\t\t\t\t// interpolate\r\n\r\n\t\t\t\t\tif ( type === \"pos\" ) {\r\n\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\r\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\r\n\t\t\t\t\t\t\tvar vector = object.position;\r\n\r\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\r\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\ttarget.normalize();\r\n\r\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\r\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\r\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\r\n\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\r\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tgetNextKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key % keys.length;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key > 0 ? key : 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/KeyFrameAnimation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( data ) {\r\n\r\n\tthis.root = data.node;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\tobj = this.hierarchy[ h ];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.KeyFrameAnimation.prototype = {\r\n\r\n\tconstructor: THREE.KeyFrameAnimation,\r\n\r\n\tplay: function ( startTime ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\t\tif ( this.isPlaying === false ) {\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\t// reset key cache\r\n\r\n\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\tobject,\r\n\t\t\t\tnode;\r\n\r\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\r\n\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.update( 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPaused = false;\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused  = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t\t// reset JIT matrix and remove cache\r\n\r\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\tobj.matrix = original;\r\n\r\n\t\t\t\tdelete node.animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t//\r\n\r\n\t\tvar duration = this.data.length;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tvar keys = node.keys,\r\n\t\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetNextKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key % keys.length;\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/MorphAnimation.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\tthis.lastFrame = 0;\r\n\tthis.currentFrame = 0;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tconstructor: THREE.MorphAnimation,\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\tvar frameTime = this.duration / this.frames;\r\n\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\r\n\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\r\n\t\tif ( frame !== this.currentFrame ) {\r\n\r\n\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\tinfluences[ frame ] = 0;\r\n\r\n\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\tthis.currentFrame = frame;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\r\n\t\tinfluences[ frame ] = mix;\r\n\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.BoxGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.BoxGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.depth,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.depthSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push( center );\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\nTHREE.CircleGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 3 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i );\r\n\t\tindices.push( i + 1 );\r\n\t\tindices.push( 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\nTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\nTHREE.CylinderGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CylinderGeometry(\r\n\t\tthis.parameters.radiusTop,\r\n\t\tthis.parameters.radiusBottom,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.openEnded,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\nTHREE.PlaneGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\nTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\nTHREE.RingGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.RingGeometry(\r\n\t\tthis.parameters.innerRadius,\r\n\t\tthis.parameters.outerRadius,\r\n\t\tthis.parameters.thetaSegments,\r\n\t\tthis.parameters.phiSegments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\nTHREE.SphereGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\nTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\nTHREE.TorusGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.arc\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\nTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.p,\r\n\t\tthis.parameters.q,\r\n\t\tthis.parameters.heightScale\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\nTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\tthis.parameters.vertices,\r\n\t\tthis.parameters.indices,\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\treturn geometry.copy( this );\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\nTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\nTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\nTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\nTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\r\n\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\tvar count = drawcall.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\t\t\r\n\t\tif ( headLength < length ) {\r\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.line );\r\n\t\t}\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tif ( headLength < length ){\r\n\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\tthis.line.updateMatrix();\r\n\t}\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tbox.setFromObject( object );\r\n\r\n\t\tif ( box.empty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tvar setPoint = function ( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.translate( 0, - 0.5, 0 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/three.js\n// module id = 39\n// module chunks = 0"],"sourceRoot":""}